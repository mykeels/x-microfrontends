{"version":3,"file":"static/js/src_aside-subscribe_tsx.2ce924d5.chunk.js","mappings":"yOAOMA,EAAiB,SAACC,GAAyB,OAC/CA,aAAeC,YAAcD,EAAME,SAASC,eAAeH,EAAK,EAE5DI,EAAY,WAAH,OACbC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,0BACJC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,uFAIHC,EAAAA,EAAAA,KAAA,UAAQF,UAAU,mBAAkBC,SAAC,gBACjC,EAGR,SAAeE,EAAAA,EAAAA,UAASC,EAAAA,GAAU,oBAAqB,CACrDC,MAAO,SAACC,GACN,IAAMC,EAAYd,EAAea,GACjC,GAAmD,UAAtC,OAATC,QAAS,IAATA,OAAS,EAATA,EAAWC,aAAa,oBAC1B,OAAO,WACLC,IAAAA,uBAAgCF,EAClC,EAEO,OAATA,QAAS,IAATA,GAAAA,EAAWG,aAAa,kBAAmB,QAC3C,IAAMC,GAAOC,EAAAA,EAAAA,GAAWL,GAOxB,OANAI,EAAKE,QACHX,EAAAA,EAAAA,KAACY,IAAAA,WAAgB,CAAAb,UACfC,EAAAA,EAAAA,KAACJ,EAAS,OAIP,WACLa,EAAKI,SACP,CACF,EACAA,QAAS,SAACT,GACRG,IAAAA,uBAAgChB,EAAea,GACjD,G","sources":["aside-subscribe.tsx"],"sourcesContent":["import { register } from \"microfrontends\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\n\nimport pkg from \"../package.json\";\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nconst Subscribe = () => (\n  <div className=\"Premium card outline outline-cyan-400\">\n    <h1>Subscribe to Premium</h1>\n    <p>\n      Subscribe to unlock new features and if eligible, receive a share of ads\n      revenue.\n    </p>\n    <button className=\"subscribe button\">Subscribe</button>\n  </div>\n);\n\nexport default register(pkg.name, \"./aside-subscribe\", {\n  mount: (containerRef) => {\n    const container = getHTMLElement(containerRef);\n    if (container?.getAttribute(\"data-mf-mounted\") === \"true\") {\n      return () => {\n        ReactDOM.unmountComponentAtNode(container!);\n      };\n    }\n    container?.setAttribute(\"data-mf-mounted\", \"true\");\n    const root = createRoot(container!);\n    root.render(\n      <React.StrictMode>\n        <Subscribe />\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n});\n"],"names":["getHTMLElement","ref","HTMLElement","document","getElementById","Subscribe","_jsxs","className","children","_jsx","register","pkg","mount","containerRef","container","getAttribute","ReactDOM","setAttribute","root","createRoot","render","React","unmount"],"sourceRoot":""}