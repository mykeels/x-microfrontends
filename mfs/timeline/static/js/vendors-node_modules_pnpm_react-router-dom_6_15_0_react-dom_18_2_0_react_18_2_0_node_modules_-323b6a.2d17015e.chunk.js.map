{"version":3,"file":"static/js/vendors-node_modules_pnpm_react-router-dom_6_15_0_react-dom_18_2_0_react_18_2_0_node_modules_-323b6a.2d17015e.chunk.js","mappings":"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","sources":["../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/createClass.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../node_modules/.pnpm/@remix-run+router@1.8.0/node_modules/@remix-run/router/history.ts","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/construct.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../node_modules/.pnpm/@remix-run+router@1.8.0/node_modules/@remix-run/router/utils.ts","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/toArray.js","../../node_modules/.pnpm/@remix-run+router@1.8.0/node_modules/@remix-run/router/router.ts","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/lib/context.ts","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/lib/hooks.tsx","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/lib/components.tsx","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/index.ts","../../node_modules/.pnpm/react-router-dom@6.15.0_react-dom@18.2.0_react@18.2.0/node_modules/react-router-dom/dom.ts","../../node_modules/.pnpm/react-router-dom@6.15.0_react-dom@18.2.0_react@18.2.0/node_modules/react-router-dom/index.tsx","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/typeof.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw new Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    text?: Submission[\"text\"];\n    formData?: Submission[\"formData\"];\n    json?: Submission[\"json\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers,\n    });\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          submission,\n          isFetchActionRedirect: true,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission =\n      submission || getSubmissionFromNavigation(state.navigation);\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        activeSubmission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => createUseMatchesMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  IDLE_BLOCKER,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","isArray","TypeError","_arrayWithHoles","_nonIterableRest","_slicedToArray","r","l","t","e","u","a","f","next","done","push","value","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","toPropertyKey","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","setPrototypeOf","_getPrototypeOf","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","hasOwnProperty","c","asyncIterator","toStringTag","define","wrap","Generator","Context","makeInvokeMethod","tryCatch","type","arg","h","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","fn","args","err","undefined","Action","_construct","Parent","Class","Function","_wrapNativeSuper","_cache","Map","indexOf","has","get","set","Wrapper","_createForOfIteratorHelper","allowArrayLike","it","F","_e","normalCompletion","didErr","step","_e2","ResultType","PopStateEventType","createMemoryHistory","options","entries","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","map","entry","index","createMemoryLocation","state","clampIndex","action","Pop","listener","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","createBrowserHistory","getUrlBasedHistory","window","globalHistory","_window$location","usr","createHashHistory","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","invariant","message","cond","console","warn","getHistoryState","idx","current","_extends","random","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","DOMException","assign","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","concat","_toConsumableArray","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","computeScore","_route$path","includes","_step","_iterator","explodeOptionalSegments","exploded","segments","split","_segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","prefix","String","array","keyMatch","_keyMatch","optional","param","pattern","_compilePath","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","_compilePath2","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref4","toPathname","_ref4$search","_ref4$hash","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","Response","AbortedDeferredError","_Error","_super","DeferredData","_this","pendingKeysSet","subscribers","deferredKeys","abortPromise","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref5","_defineProperty","trackPromise","_this2","add","promise","race","onSettle","catch","aborted","delete","undefinedError","emit","settledKey","subscriber","_this3","_this4","abort","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","_callee","_this5","_context","cancel","subscribe","_x","size","_ref2","_ref6","_tracked","isTrackedPromise","_error","_data","unwrapTrackedPromise","defer","redirect","redirectDocument","response","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","mergeLoaderData","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","currentLocation","userReplace","blockerKey","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_context3","startUninterruptedRevalidation","saveScrollPosition","overrideNavigation","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_context4","interruptActiveLoads","getSubmittingNavigation","getTargetMatch","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","fetcherKey","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_context5","getSubmissionFromNavigation","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","doneFetcher","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","_doneFetcher","_context6","setFetcherError","getSubmittingFetcher","getDoneFetcher","isFetchActionRedirect","staleKey","_handleFetcherLoader","_callee7","_doneFetcher2","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref7","redirectLocation","isDocumentReload","redirectHistoryAction","_context8","revalidate","_isFetchActionRedirect","reloadDocument","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_context9","all","resolveDeferredResults","_cancelledDeferredRou","deleteFetcher","markFetchersDone","_step2","_iterator2","_step3","doneKeys","_iterator3","landedId","_step4","yeetedKeys","_iterator4","_step4$value","deleteBlocker","newBlocker","blocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","getScrollKey","createUseMatchesMatch","initialize","enableScrollRestoration","positions","getPosition","getKey","fetch","_normalizeNavigateOpt","_x21","_x22","_x23","_x24","_x25","_x26","handleFetcherAction","_x27","_x28","_x29","_x30","_x31","_x32","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","_step5","_iterator5","hasNakedIndexQuery","normalizeFormMethod","isFetcher","body","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref3","_ref12","parse","convertFormDataToSearchParams","convertSearchParamsToFormData","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","shouldRevalidate","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_callLoaderOrAction","_callee16","resultType","onReject","runHandler","handler","_url","_url2","isSameBasename","contentType","_result$init","_result$init2","_context17","context","requestContext","isResponse","isStaticRequest","protocol","isRouteRequest","statusCode","isDeferredData","deferred","_step6","_iterator6","_step6$value","_step7","_iterator7","_step7$value","processRouteLoaderData","foundError","loaderHeaders","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","_step8","mergedLoaderData","_iterator8","find","_temp4","_ref13","errorMessage","resolveData","_x71","_x72","_x73","_x74","_x75","_x76","_resolveDeferredResults","_callee17","signals","_loop","_context19","isRevalidatingLoader","_context18","_x77","_x78","_x79","_resolveDeferredData","_callee18","unwrap","_context20","unwrappedData","getAll","pathMatches","DataRouterContext","React","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","_React$useContext","navigator","_useResolvedPath","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","_React$useContext3","routePathnamesJson","UNSAFE_getPathContributingMatches","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","_React$Component","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","_useDataRouterState","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","_useDataRouterContext","UseBlocker","_React$useState2","setBlockerKey","startTransitionImpl","RouterProvider","fallbackElement","_React$useState4","setStateImpl","v7_startTransition","setState","Router","DataRoutes","MemoryRouter","historyRef","_React$useState6","Navigate","jsonPath","Outlet","Route","_props","_ref5$basename","basenameProp","_ref5$children","locationProp","_ref5$navigationType","_ref5$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","_React$Component2","_super2","_this$props","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","attr","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","_window","__staticRouterHydrationData","deserializeErrors","serialized","_i","_entries$_i","val","__type","__subType","ErrorConstructor","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","_ref5$className","className","classNameProp","_ref5$end","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","submit","useSubmit","FormImpl","forwardedRef","_ref6$method","onSubmit","_excluded3","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","useScrollRestoration","storageKey","UNSAFE_DataRouterContext","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","UNSAFE_useRouteId","_getFormSubmissionInf","useSubmitFetcher","fetcherRouteId","UseSubmitFetcher","_getFormSubmissionInf2","UNSAFE_RouteContext","fetcherId","useFetcher","_route$matches","UseFetcher","_React$useState9","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","_ref14","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","getKeyWithoutBasename","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","unstable_useBlocker","confirm","setTimeout","obj","_setPrototypeOf","_toPropertyKey","input","hint","prim","toPrimitive","res","Number","_typeof"],"sourceRoot":""}