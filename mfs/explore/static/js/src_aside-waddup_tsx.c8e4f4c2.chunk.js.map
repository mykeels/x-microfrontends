{"version":3,"file":"static/js/src_aside-waddup_tsx.c8e4f4c2.chunk.js","mappings":"mOAOMA,EAAiB,SAACC,GAAyB,OAC/CA,aAAeC,YAAcD,EAAME,SAASC,eAAeH,EAAK,EAE5DI,EAAS,WACb,IAAQC,GAAaC,EAAAA,EAAAA,YAAWC,EAAAA,sBAAxBF,SAER,OACEG,EAAAA,EAAAA,MAAA,OAAKC,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,cACNC,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,KACEC,KAAK,IACLC,QAAS,SAACC,GACRA,EAAEC,iBACFV,EAAS,IACX,EAAEK,SACH,oBAIHC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gBACNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,qBAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,8BACNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,uBACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBAERF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,yBACNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBAERC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,WAAUC,SAAC,gBAG/B,EAEA,SAAeM,EAAAA,EAAAA,UAASC,EAAAA,GAAU,iBAAkB,CAClDC,MAAO,SAACC,EAAcC,GACpB,IAAMC,EAAYtB,EAAeoB,GACjC,GAAmD,UAAtC,OAATE,QAAS,IAATA,OAAS,EAATA,EAAWC,aAAa,oBAC1B,OAAO,WACLC,IAAAA,uBAAgCF,EAClC,EAEO,OAATA,QAAS,IAATA,GAAAA,EAAWG,aAAa,kBAAmB,QAC3C,IAAMC,GAAOC,EAAAA,EAAAA,GAAWL,GASxB,OARAI,EAAKE,QACHhB,EAAAA,EAAAA,KAACiB,IAAAA,WAAgB,CAAAlB,UACfC,EAAAA,EAAAA,KAACJ,EAAAA,qBAAqBsB,SAAQ,CAACC,MAAOV,EAAaV,UACjDC,EAAAA,EAAAA,KAACP,EAAM,SAKN,WACLqB,EAAKM,SACP,CACF,EACAA,QAAS,SAACZ,GACRI,IAAAA,uBAAgCxB,EAAeoB,GACjD,G","sources":["aside-waddup.tsx"],"sourcesContent":["import { MicrofrontendContext, register } from \"microfrontends\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\n\nimport pkg from \"../package.json\";\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nconst Waddup = () => {\n  const { navigate } = useContext(MicrofrontendContext);\n\n  return (\n    <div className=\"card explore outline outline-teal-300\">\n      <h1>What’s happening</h1>\n      <div className=\"container-explore\">\n        <span>Trending</span>\n        <h5>\n          <a\n            href=\"/\"\n            onClick={(e) => {\n              e.preventDefault();\n              navigate(\"/\");\n            }}\n          >\n            #SysConf2023\n          </a>\n        </h5>\n        <span>6,969 posts</span>\n      </div>\n      <div className=\"container-explore\">\n        <span>Technology</span>\n        <h5>Microfrontends</h5>\n        <span>12,435 posts</span>\n      </div>\n      <div className=\"container-explore\">\n        <span>Management · Trending</span>\n        <h5>Scaling Dev Teams</h5>\n        <span>9,876 posts</span>\n      </div>\n      <div className=\"container-explore\">\n        <span>Trending in Nigeria</span>\n        <h5>Say No to Bottlenecks</h5>\n        <span>234 posts</span>\n      </div>\n      <h6 className=\"showmore\">Show more</h6>\n    </div>\n  );\n};\n\nexport default register(pkg.name, \"./aside-waddup\", {\n  mount: (containerRef, props) => {\n    const container = getHTMLElement(containerRef);\n    if (container?.getAttribute(\"data-mf-mounted\") === \"true\") {\n      return () => {\n        ReactDOM.unmountComponentAtNode(container!);\n      };\n    }\n    container?.setAttribute(\"data-mf-mounted\", \"true\");\n    const root = createRoot(container!);\n    root.render(\n      <React.StrictMode>\n        <MicrofrontendContext.Provider value={props as any}>\n          <Waddup />\n        </MicrofrontendContext.Provider>\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n});\n"],"names":["getHTMLElement","ref","HTMLElement","document","getElementById","Waddup","navigate","useContext","MicrofrontendContext","_jsxs","className","children","_jsx","href","onClick","e","preventDefault","register","pkg","mount","containerRef","props","container","getAttribute","ReactDOM","setAttribute","root","createRoot","render","React","Provider","value","unmount"],"sourceRoot":""}