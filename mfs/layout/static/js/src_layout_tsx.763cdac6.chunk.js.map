{"version":3,"file":"static/js/src_layout_tsx.763cdac6.chunk.js","mappings":"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","sources":["layout.tsx","../../microfrontends/src/index.ts","../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../microfrontends/src/common/utils/assert.utils.ts","../../microfrontends/src/common/utils/errors.utils.ts","../../microfrontends/src/common/utils/sleep.utils.ts","../../microfrontends/src/common/utils/route.utils.ts","../../microfrontends/src/common/register/index.ts","../../microfrontends/src/components/ErrorBoundary/index.tsx","../../microfrontends/src/components/Microfrontend/index.tsx","../../microfrontends/src/components/Microfrontend/Microfrontend.service.ts","../../microfrontends/src/components/MicrofrontendSlot/index.tsx","../../microfrontends/src/contexts/index.tsx","../../microfrontends/src/components/MicrofrontendSlot/MicrofrontendSlot.utils.ts","../../microfrontends/src/components/MicrofrontendScreen/index.tsx","../../microfrontends/src/components/MicrofrontendScreen/MicrofrontendScreen.utils.ts"],"sourcesContent":["import {\n  register,\n  MicrofrontendSlot,\n  MicrofrontendContext,\n  canMatchRoute,\n} from \"microfrontends\";\nimport React, { useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport pkg from \"../package.json\";\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nconst queryClient = new QueryClient();\n\nconst sortByPriority = (slots: MicrofrontendSlot[]) =>\n  slots.sort((a, b) => {\n    return (a.priority || 0) - (b.priority || 0);\n  });\n\nconst Layout = () => {\n  const { homedir, url } = useContext(MicrofrontendContext);\n\n  return (\n    <>\n      <div className=\"new-post-button\">\n        <svg\n          className=\"verified\"\n          viewBox=\"0 -2 24 24\"\n          width=\"28\"\n          height=\"24\"\n          stroke=\"white\"\n        >\n          <path d=\"M23 3c-6.62-.1-10.38 2.421-13.05 6.03C7.29 12.61 6 17.331 6 22h2c0-1.007.07-2.012.19-3H12c4.1 0 7.48-3.082 7.94-7.054C22.79 10.147 23.17 6.359 23 3zm-7 8h-1.5v2H16c.63-.016 1.2-.08 1.72-.188C16.95 15.24 14.68 17 12 17H8.55c.57-2.512 1.57-4.851 3-6.78 2.16-2.912 5.29-4.911 9.45-5.187C20.95 8.079 19.9 11 16 11zM4 9V6H1V4h3V1h2v3h3v2H6v3H4z\"></path>\n        </svg>\n      </div>\n\n      <main className=\"flex flex-row px-32 py-2 gap-8\">\n        <nav className=\"flex flex-col self-start justify-between h-[90dvh] sticky top-0 px-4\">\n          <img\n            src=\"https://seeklogo.com/images/T/twitter-x-logo-101C7D2420-seeklogo.com.png?v=638258077300000000\"\n            alt=\"logo\"\n            className=\"flex self-start h-12 w-12 mx-4\"\n          />\n          <ul className=\"flex flex-col gap-4 list-none\">\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"nav:item\"\n              transform={sortByPriority}\n            />\n          </ul>\n          <MicrofrontendSlot className=\"contents\" name=\"nav:footer\" />\n        </nav>\n        <MicrofrontendSlot\n          className=\"contents\"\n          name=\"main:content\"\n          key={url}\n          transform={(slots) => {\n            return slots.filter((slot) =>\n              \"route\" in slot &&\n              typeof slot.route === \"string\" &&\n              homedir &&\n              typeof homedir === \"string\"\n                ? canMatchRoute(homedir, slot.route)\n                : false\n            );\n          }}\n        />\n        <aside className=\"flex flex-col self-start right sticky top-[-224px] w-1/4\">\n          <div className=\"container-right\">\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"aside:item\"\n              transform={sortByPriority}\n            />\n            <div className=\"container-terms-of-service\">\n              <span>Terms of service</span>\n              <span>Privacy Policy</span>\n              <span>Cookie Policy</span>\n              <span>Accesibility</span>\n              <span>Ads info &nbsp;More ···</span>\n              <span>© 2023 X Corp.</span>\n            </div>\n          </div>\n        </aside>\n      </main>\n    </>\n  );\n};\n\nexport default register(pkg.name, \"./layout\", {\n  mount: (containerRef, props) => {\n    const container = getHTMLElement(containerRef);\n    if (container?.getAttribute(\"data-mf-mounted\") === \"true\") {\n      return () => {\n        ReactDOM.unmountComponentAtNode(container!);\n      };\n    }\n    container?.setAttribute(\"data-mf-mounted\", \"true\");\n    const root = createRoot(container!);\n    root.render(\n      <React.StrictMode>\n        <MicrofrontendContext.Provider value={props as any}>\n          <QueryClientProvider client={queryClient}>\n            <Layout />\n          </QueryClientProvider>\n        </MicrofrontendContext.Provider>\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n});\n","export * from \"./common\";\nexport * from \"./components\";\nexport * from \"./contexts\";\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","import invariant from \"tiny-invariant\";\n\n/**\n * Asserts that the given condition is truthy, otherwise throws an error.\n */\nexport const assert = <TOptional>(\n  condition: TOptional,\n  message: string | (() => string)\n): NonNullable<TOptional> => {\n  invariant(\n    condition,\n    typeof message === \"string\"\n      ? `AssertError: ${message}`\n      : message || `AssertError: condition must be truthy`\n  );\n  const _condition = condition;\n  return _condition;\n};\n","/**\n *\n * Creates an error object with a name and a message.\n */\nexport const makeError = <TName extends string>(\n  name: TName,\n  message: string,\n  cause?: unknown\n) => ({\n  name,\n  message,\n  stack: new Error().stack,\n  cause,\n  toString: () => `${name}: ${message}`,\n});\n\n/**\n * Throws an error with the given name and message.\n */\nexport const throwError = <TName extends string>(\n  name: TName,\n  message: string\n) => {\n  throw makeError(name, message);\n};\n","export const sleep = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import { pathToRegexp } from \"path-to-regexp\";\n\n/**\n * Whether the given route can match the other route\n */\nexport const canMatchRoute = (route1: string, route2: string): boolean => {\n  const route1Regex = pathToRegexp(route1.replace(/\\/\\*+/g, \"/:params*\"), []);\n  const route2Regex = pathToRegexp(route2.replace(/\\/\\*+/g, \"/:params*\"), []);\n  return route1Regex.test(route2) || route2Regex.test(route1);\n};\n\n/**\n * Whether the given permission can match the other permission\n */\nexport const canMatchPermission = (\n  permission1: string,\n  permission2: string\n): boolean => {\n  const route1Regex = pathToRegexp(\n    permission1.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  const route2Regex = pathToRegexp(\n    permission2.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  return route1Regex.test(permission2) || route2Regex.test(permission1);\n};\n\n/**\n * Whether the given host can match the other host\n */\nexport const canMatchHost = (hostA?: string, hostB?: string): boolean => {\n  return !hostA || !hostB || hostA === hostB;\n};\n\ntype Permission = `${\"manage\" | \"read-only\"}:${string}`;\n\n/**\n * Whether the given user can match the given permissions\n */\nexport const canMatchPermissions = (\n  user: {\n    permissions: Permission[];\n  },\n  permissions: Permission[]\n): boolean => {\n  return permissions?.every((permission) => {\n    const [action, ...objectPaths] = permission.split(\":\");\n    const objectPath = objectPaths.join(\":\");\n    return user.permissions.some((p) => {\n      const [uAction, ...uObjectPaths] = p.split(\":\");\n      const uObjectPath = uObjectPaths.join(\":\");\n      const objectPathsMatching =\n        uObjectPath === objectPath ||\n        canMatchPermission(uObjectPath, objectPath);\n      const actionsMatching =\n        uAction === action || (action === \"read-only\" && uAction === \"manage\");\n      return objectPathsMatching && actionsMatching;\n    });\n  });\n};\n\nexport const selectProps =\n  <TKeys extends readonly string[]>(keys: TKeys) =>\n  <TObj extends { [key in TKeys[number]]: any }>(\n    obj: TObj\n  ): {\n    [key in TKeys[number]]: TObj extends Record<key, infer TValue>\n      ? TValue\n      : never;\n  } => {\n    return Object.fromEntries(\n      Object.entries(obj).filter(([key]: [any, any]) => keys.includes(key))\n    ) as Record<TKeys[number], any>;\n  };\n","import { assert, sleep } from \"../utils\";\nimport {\n  MicrofrontendController,\n  MountFn,\n  UnmountFn,\n} from \"../../components/Microfrontend/Microfrontend.types\";\n\nconst getWindow = () => {\n  const $window: Partial<Window> & { [key: string]: any } =\n    typeof window === \"undefined\" ? {} : window;\n  return $window;\n};\n\n/**\n *\n * @param {string} scope\n * @param {{ hasZeroInstances: () => boolean }} tracker\n */\nconst unloadMicrofrontendAssets = (\n  scope: string,\n  tracker: { hasZeroInstances: () => boolean }\n) => {\n  const mfName = `mf-${scope.toLocaleLowerCase()}-entry`;\n  const mfScript = document.getElementById(mfName);\n  if (!mfScript) {\n    return;\n  }\n  const src = assert(\n    mfScript.getAttribute(\"src\"),\n    `script #${mfName} must have attr [src]`\n  );\n  const lastSlash = src.lastIndexOf(\"/\");\n  const urlStart = src.slice(0, lastSlash);\n\n  const maxAttempts = 3;\n\n  async function attemptToRemoveAssets(attempt = 0): Promise<Element[]> {\n    const scripts = Array.from(document.querySelectorAll(\"head script\")).filter(\n      (script) => script.getAttribute(\"src\")?.startsWith(urlStart)\n    );\n    const links = Array.from(document.querySelectorAll(\"head link\")).filter(\n      (link) => link.getAttribute(\"href\")?.startsWith(urlStart)\n    );\n\n    if (links.length && tracker.hasZeroInstances()) {\n      console.log(\"Removed assets\", [...scripts, ...links]);\n      scripts.forEach((script) => {\n        script.remove();\n      });\n      links.forEach((link) => {\n        link.remove();\n      });\n      return [...scripts, ...links];\n    } else {\n      return sleep(100).then(() => {\n        if (attempt < maxAttempts) {\n          return attemptToRemoveAssets(attempt + 1);\n        }\n        return [];\n      });\n    }\n  }\n  return sleep(100).then(() => attemptToRemoveAssets());\n};\n\n/**\n * Keeps track of how many running instances of a Microfrontend there are.\n *\n * By tracking, we are able to unload the Microfrontend's assets when there are no more instances running.\n */\nconst instanceTracker = ($ctrl: MicrofrontendController) => {\n  return {\n    increment: () => {\n      $ctrl.instances++;\n    },\n    decrement: () => {\n      if ($ctrl.instances > 0) {\n        $ctrl.instances--;\n      }\n    },\n    hasZeroInstances: () => {\n      const $window = getWindow();\n      const scope = $window.$mfs?.[$ctrl.scope] as {\n        [key: string]: { instances: number };\n      };\n      return (\n        Object.values(\n          assert(scope, `window.$mfs.${$ctrl.scope} must exist`)\n        ).reduce((sum, scope) => sum + scope.instances, 0) === 0\n      );\n    },\n  };\n};\n\n/**\n * The Microfrontend Controller is the engine room for a Microfrontend.\n * It contains the `mount` and `unmount` functions, as well as other variables for managing the microfrontend.\n *\n * Usually, a Microfrontend's controller is located in `window.$mfs[scope][module]`\n *\n * If no controller exists for the scope<>module pair, then a new placeholder controller will be created in the appropriate location\n *\n */\nconst getMicrofrontendController = (\n  scope: string,\n  module: string\n): MicrofrontendController => {\n  if (typeof window === \"undefined\") {\n    console.warn(\n      \"Microfrontend cannot be registered without a global window scope\"\n    );\n    // @ts-ignore\n    return { mount: () => {}, unmount: () => {}, instances: 0 };\n  }\n  const $window = getWindow();\n  $window.$mfs = $window.$mfs || {};\n  $window.$mfs[scope] = $window.$mfs[scope] || {};\n  const $scope = $window.$mfs[scope];\n  if ($scope) {\n    $scope[module] = $scope[module] || {\n      mount: () => {\n        console.warn(`No ${scope} mount fn exists`);\n        return () => {};\n      },\n      unmount: () => console.warn(`No ${scope} unmount fn exists`),\n      instances: 0,\n      scope,\n      module,\n    };\n    return $scope?.[module]!;\n  }\n  console.warn(`No ${scope} scope exists in window.$mfs`);\n  return $scope?.[module]!;\n};\n\n/**\n * Registers a microfrontend's scope and module in the window, returning a controller\n */\nexport const register = (\n  scope: string,\n  module: string,\n  { mount, unmount }: { mount: MountFn; unmount: UnmountFn }\n): MicrofrontendController => {\n  const $ctrl = getMicrofrontendController(scope, module);\n  $ctrl.tracker = $ctrl.tracker || instanceTracker($ctrl);\n  const runUnmountFn = (unmount: () => () => void) => {\n    $ctrl.tracker?.decrement();\n    if ($ctrl.tracker?.hasZeroInstances()) {\n      unloadMicrofrontendAssets(scope, $ctrl.tracker);\n    }\n    return () => {\n      setTimeout(() => {\n        unmount()();\n      });\n    };\n  };\n  const getHTMLElement = (ref: HTMLElement | string) =>\n    ref instanceof HTMLElement ? ref : document.getElementById(ref);\n  $ctrl.mount = (containerRef, props) => {\n    $ctrl.tracker?.increment();\n    const unmount = assert(mount, \"mount fn must exist\")(containerRef, props);\n    const container = getHTMLElement(containerRef);\n    const eventBus = props?.eventBus;\n    eventBus?.emit(\"mf:mount\", {\n      container,\n      scope,\n      module,\n    });\n    return () => {\n      eventBus?.emit(\"mf:unmount\", {\n        container,\n        scope,\n        module,\n      });\n      return runUnmountFn(unmount);\n    };\n  };\n  $ctrl.unmount = (containerRef) => {\n    return runUnmountFn(() =>\n      assert(unmount, \"unmount fn must exist\")(containerRef)\n    );\n  };\n  return $ctrl;\n};\n","import React, { Component } from \"react\";\nimport { MicrofrontendErrorFallback } from \"./ErrorBoundary.types\";\n\ntype ErrorBoundaryState<TError> = {\n  error: TError | null;\n  errorInfo: any;\n};\n\ntype ErrorBoundaryProps<TProps, TError> = {\n  children: React.ReactNode;\n  Fallback: MicrofrontendErrorFallback<TProps, TError>;\n};\n\nexport class ErrorBoundary<\n  TError extends { message: string; cause?: any }\n> extends Component<\n  ErrorBoundaryProps<{}, TError>,\n  ErrorBoundaryState<TError>\n> {\n  constructor(props: ErrorBoundaryProps<{}, TError>) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error: Error & TError, errorInfo: any) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo && this.state.error) {\n      const error = this.state.error;\n      const cause = this.state.errorInfo;\n      if (error) {\n        error.cause = cause;\n      }\n      const Fallback = this.props.Fallback;\n      // Error path\n      return typeof Fallback === \"function\" ? (\n        <Fallback error={error} />\n      ) : (\n        Fallback\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import classNames from \"classnames/dedupe\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { makeError, assert } from \"../../common\";\nimport { loadMicrofrontend } from \"./Microfrontend.service\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\nimport { MicrofrontendManifest } from \"./Microfrontend.types\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\n\ntype MicrofrontendProps = {\n  scope: string;\n  module: string;\n  entry: string;\n  manifests: MicrofrontendManifest[];\n  url?: string;\n  id?: string;\n  className?: string | string[] | { [key: string]: boolean };\n  navigate?: (href: string) => any;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  loadMicrofrontend?: typeof loadMicrofrontend;\n};\n\nexport const Microfrontend = ({\n  id,\n  scope,\n  entry,\n  module,\n  Loading,\n  Fallback,\n  className,\n  loadMicrofrontend,\n  ...props\n}: MicrofrontendProps) => {\n  const {\n    isFetched: isMounted,\n    isError,\n    error,\n    data: { mount } = {},\n  } = useQuery(`microfrontend?entry=${entry}&module=${module}`, async () => {\n    assert(loadMicrofrontend, \"props.loadMicrofrontend must be a function\");\n    return loadMicrofrontend?.({ entry, scope, module });\n  });\n\n  const mfClassName = classNames(\n    \"microfrontend-container spin-when-empty\",\n    className\n  );\n\n  const containerId = `mount-${(id || scope).toLowerCase()}-container`;\n  const [mfError, setMFError] = useState<{ message: string } | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  const ErrorFallback: MicrofrontendErrorFallback = (errorProps) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback\n        {...{\n          containerId,\n          scope,\n          entry,\n          module,\n          ...props,\n        }}\n        {...errorProps}\n        retry={() => setRetryCount(retryCount + 1)}\n      />\n    ) : (\n      Fallback\n    );\n\n  const _ErrorBoundary = ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={ErrorFallback}>{children}</ErrorBoundary>\n  );\n\n  useEffect(() => {\n    if (!isMounted || isError || typeof mount !== \"function\") {\n      return;\n    }\n    let unmount: (() => void) | null = null;\n    try {\n      unmount = mount(containerId, {\n        ...props,\n        ErrorBoundary: _ErrorBoundary,\n      });\n    } catch (error) {\n      setMFError(\n        makeError(\n          \"MountError\",\n          `Could not mount Microfrontend: ${scope} (${module})`,\n          error\n        )\n      );\n    }\n    return () => {\n      setTimeout(() => {\n        try {\n          if (typeof unmount === \"function\") {\n            console.log(\"unmount\", scope);\n            unmount();\n          }\n        } catch (err) {\n          console.error(err);\n          setMFError(\n            makeError(\n              \"UnmountError\",\n              `Could not unmount Microfrontend: ${scope} (${module})`,\n              error\n            )\n          );\n        }\n      });\n    };\n  }, [isMounted, isError, entry, module, retryCount]);\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : mfError ? (\n    <ErrorFallback error={mfError} />\n  ) : !isMounted ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : (\n    <div\n      id={containerId}\n      className={mfClassName}\n      {...{ \"data-mf-scope\": scope, \"data-mf-module\": module }}\n    ></div>\n  );\n};\n\nMicrofrontend.defaultProps = {\n  loadMicrofrontend,\n};\n\nexport * from \"./Microfrontend.types\";\n","import { assert, sleep } from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendDefaultExport,\n} from \"./Microfrontend.types\";\n\ndeclare function __webpack_init_sharing__(scope: string): Promise<void>;\ndeclare const __webpack_share_scopes__: { default: any };\n\nexport function loadComponent<TScope extends string>(\n  scope: TScope,\n  module: string\n): () => Promise<MicrofrontendDefaultExport> {\n  return async () => {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    const $window = window as {\n      [key in TScope]: {\n        init: (webpackShareScope: any) => Promise<any>;\n        get: (module: string) => Promise<{ [key: string]: any }>;\n      };\n    };\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__(\"default\");\n\n    const container = $window[scope];\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await Promise.race([\n      container?.get(module),\n      sleep(300).then(() =>\n        Promise.reject(\n          new Error(\n            `No module ${module} was found in window.${scope} container`\n          )\n        )\n      ),\n    ]);\n    const Module =\n      typeof factory === \"function\"\n        ? factory()\n        : Promise.reject(\n            new Error(\n              `No module ${module} was found in window.${scope} container`\n            )\n          );\n    return Module;\n  };\n}\n\nexport const loadScript = (\n  id: string,\n  src: string\n): Promise<HTMLScriptElement> => {\n  return new Promise((resolve, reject) => {\n    if (document.querySelector(`script[id=\"${id}\"]`)) {\n      const script: HTMLScriptElement = assert(\n        document.querySelector(`script[id=\"${id}\"]`),\n        `script must exist: [id=${id}]`\n      );\n      return resolve(script);\n    }\n    const script = document.createElement(\"script\");\n    script.id = id;\n    script.src = src;\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = () => resolve(script);\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n};\n\nexport const loadMicrofrontend = async ({\n  entry,\n  scope,\n  module,\n}: Pick<MicrofrontendManifest, \"entry\" | \"scope\" | \"module\">) =>\n  loadScript(`mf-${scope.toLowerCase()}-entry`, entry)\n    .then(() => loadComponent(scope, module)())\n    .then((exported) => exported.default)\n    .then(({ mount, unmount }) => {\n      return {\n        mount,\n        unmount,\n      };\n    })\n    .catch((error: unknown) => Promise.reject(error));\n","import React, { useContext, useId } from \"react\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\nimport { MicrofrontendContext } from \"../../contexts\";\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsByName } from \"./MicrofrontendSlot.utils\";\nimport { MicrofrontendCustomSlotOptions } from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendSlot = MicrofrontendCustomSlotOptions & {\n  [key: string]: any;\n};\n\ntype MicrofrontendSlotProps = {\n  name: string;\n  transform?: (slots: MicrofrontendSlot[]) => MicrofrontendSlot[];\n  Fallback?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  Loading?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  className?: string | string[] | { [key: string]: boolean };\n};\n\nexport const MicrofrontendSlot = ({\n  name,\n  transform,\n  Fallback,\n  Loading,\n  className,\n  ...props\n}: MicrofrontendSlotProps) => {\n  const id = useId();\n  const { manifests, user, ...contextProps } = useContext(MicrofrontendContext);\n\n  const slots = getMicrofrontendsByName(manifests, name, {\n    user,\n  });\n\n  const transformedSlots = transform?.(slots) || slots;\n\n  return (\n    <>\n      {transformedSlots.map((slot, index) => (\n        <ErrorBoundary\n          key={`slot-${slot.scope}-${slot.module}-${id}-${index}`}\n          Fallback={\n            typeof Fallback === \"function\"\n              ? (errorProps) => (\n                  <Fallback slot={slot} {...props} {...errorProps} />\n                )\n              : Fallback || (() => <></>)\n          }\n        >\n          <Microfrontend\n            {...{ manifests, user, ...slot, ...contextProps, ...props }}\n            Fallback={\n              typeof Fallback === \"function\"\n                ? (errorProps) => (\n                    <Fallback slot={slot} {...props} {...errorProps} />\n                  )\n                : Fallback || (() => <></>)\n            }\n            Loading={\n              typeof Loading === \"function\"\n                ? () => <Loading slot={slot} />\n                : Loading || (() => <></>)\n            }\n            entry={slot.entry}\n            module={slot.module}\n            scope={slot.scope}\n            className={className}\n            id={`slot-${slot.scope}-${id}-${index}`}\n          />\n        </ErrorBoundary>\n      ))}\n    </>\n  );\n};\n\nMicrofrontendSlot.defaultProps = {\n  transform: (slots) => slots,\n  Fallback: () => <div>Sorry, there was an error loading this component</div>,\n  Loading: () => <div>...loading...</div>,\n} satisfies Partial<MicrofrontendSlotProps>;\n\nexport * from \"./MicrofrontendSlot.utils\";\n","import React from \"react\";\n\nimport { ErrorBoundary, MicrofrontendMountProps } from \"../components\";\n\nconst defaults = {\n  homedir: \"/\",\n\n  url: \"/\",\n\n  navigate: () => {},\n\n  manifests: [],\n\n  fetch: (input: RequestInfo, init?: RequestInit) => window.fetch(input, init),\n\n  user: undefined,\n\n  eventBus: undefined,\n\n  layout: {\n    navItems: [],\n    logout: () => {},\n  },\n\n  ErrorBoundary: ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={() => <>An Error occurred</>}>\n      {children}\n    </ErrorBoundary>\n  ),\n};\n\nexport const MicrofrontendContext =\n  React.createContext<MicrofrontendMountProps>(defaults);\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendCustomSlotOptions,\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingName = {\n  module: string;\n  entry: string;\n  scope: string;\n  [key: string]: any;\n};\n\n/**\n *\n * @param manifests\n * @param name\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns Slots matching the given name\n */\nexport const getMicrofrontendsByName = (\n  manifests: MicrofrontendManifest[],\n  name: string,\n  options?: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingName[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots[name]?.map((slot) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof slot === \"string\" ? { slot } : slot),\n          })) || []),\n        ] as MicrofrontendMatchingName[],\n      [] as MicrofrontendMatchingName[]\n    )\n    .filter(({ host: routeHost }: MicrofrontendCustomSlotOptions) =>\n      canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendCustomSlotOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map((p) =>\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission(p)\n              : p\n          ) || []\n        )\n    );\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { makeError } from \"../../common\";\n\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsMatchingLocation } from \"./MicrofrontendScreen.utils\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendMountProps,\n} from \"../Microfrontend/Microfrontend.types\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\n\ntype MicrofrontendScreenProps = {\n  host?: string;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  Microfrontend: typeof Microfrontend;\n} & Omit<MicrofrontendMountProps, \"manifests\" | \"ErrorBoundary\"> &\n  (\n    | {\n        getMicrofrontendManifests: () => Promise<MicrofrontendManifest[]>;\n      }\n    | {\n        manifests: MicrofrontendManifest[];\n      }\n  );\n\n/**\n * Route-level component, that loads Microfrontends based on\n * whether their manifest routes matches the current location.\n */\nexport const MicrofrontendScreen = ({\n  host,\n  Loading,\n  Fallback,\n  navigate,\n  Microfrontend,\n  ...props\n}: MicrofrontendScreenProps) => {\n  const location = useLocation();\n  const url = location.pathname;\n  const {\n    data: manifests = \"manifests\" in props ? props.manifests : [],\n    isLoading,\n    isError,\n    error,\n  } = useQuery(\n    \"manifests\",\n    () =>\n      \"getMicrofrontendManifests\" in props\n        ? props.getMicrofrontendManifests()\n        : props.manifests,\n    {\n      enabled: \"getMicrofrontendManifests\" in props,\n    }\n  );\n  const [targetMF] =\n    getMicrofrontendsMatchingLocation(manifests || [], url, {\n      host,\n      user: props?.user,\n    }) || [];\n\n  const ErrorFallback = (errorProps: { error: any }) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback {...props} {...errorProps} />\n    ) : (\n      Fallback\n    );\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : isLoading ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : !targetMF && manifests?.length ? (\n    <ErrorFallback\n      error={makeError(\n        \"NoRouteMatchFound\",\n        `No microfrontend was found capable of handling the route: ${url}`\n      )}\n    />\n  ) : targetMF ? (\n    <Microfrontend\n      {...props}\n      url={url}\n      entry={targetMF.entry}\n      scope={targetMF.scope}\n      module={targetMF.module}\n      manifests={manifests}\n      navigate={navigate}\n      Loading={Loading}\n      Fallback={Fallback}\n    />\n  ) : null;\n};\n\nMicrofrontendScreen.defaultProps = {\n  Microfrontend,\n};\n\nexport * from \"./MicrofrontendScreen.utils\";\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  canMatchRoute,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n  MicrofrontendRouteOptions,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingRoute = {\n  entry: string;\n  scope: string;\n  module: string;\n  route: string;\n  host?: string;\n};\n\n/**\n *\n * @param manifests\n * @param url\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns slots matching the current location url\n */\nexport const getMicrofrontendsMatchingLocation = (\n  manifests: MicrofrontendManifest[],\n  url: string,\n  options: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingRoute[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots.routes?.map((route) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof route === \"string\" ? { route } : route),\n          })) || []),\n        ] as MicrofrontendMatchingRoute[],\n      [] as MicrofrontendMatchingRoute[]\n    )\n    .filter(\n      ({ route, host: routeHost }: MicrofrontendRouteOptions) =>\n        canMatchRoute(route, url) && canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendRouteOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map(\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission\n              : (p) => p\n          ) || []\n        )\n    );\n"],"names":["getHTMLElement","ref","HTMLElement","document","getElementById","queryClient","QueryClient","sortByPriority","slots","sort","a","b","priority","Layout","_useContext","useContext","MicrofrontendContext","homedir","url","_jsxs","_Fragment","children","_jsx","className","viewBox","width","height","stroke","d","src","alt","MicrofrontendSlot","name","transform","filter","slot","route","canMatchRoute","register","mount","containerRef","props","container","getAttribute","ReactDOM","setAttribute","root","createRoot","render","React","Provider","value","QueryClientProvider","client","unmount","src_exports","__export","ErrorBoundary","Microfrontend","MicrofrontendScreen","assert","canMatchHost","canMatchPermission","canMatchPermissions","getMicrofrontendsByName","getMicrofrontendsMatchingLocation","makeError","selectProps","sleep","throwError","module","exports","prefix","condition","message","Error","invariant","concat","cause","stack","toString","ms","Promise","resolve","setTimeout","import_path_to_regexp","require","route1","route2","route1Regex","pathToRegexp","replace","route2Regex","test","permission1","permission2","hostA","hostB","user","permissions","every","permission","_permission$split","split","_permission$split2","_toArray","action","objectPath","slice","join","some","p","_p$split","_p$split2","uAction","uObjectPath","keys","obj","Object","fromEntries","entries","_ref","key","_slicedToArray","includes","getWindow","window","scope","module2","_ref3","$ctrl","console","warn","instances","$window","$mfs","$scope","getMicrofrontendController","tracker","increment","decrement","hasZeroInstances","_$window$$mfs","values","reduce","sum","scope2","instanceTracker","runUnmountFn","unmount2","_$ctrl$tracker","_$ctrl$tracker2","mfName","toLocaleLowerCase","mfScript","lastSlash","lastIndexOf","urlStart","maxAttempts","then","attemptToRemoveAssets","_attemptToRemoveAssets","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","attempt","scripts","links","_args","wrap","_context","prev","next","length","undefined","Array","from","querySelectorAll","script","_script$getAttribute","startsWith","link","_link$getAttribute","log","_toConsumableArray","forEach","remove","abrupt","stop","unloadMicrofrontendAssets","_$ctrl$tracker3","eventBus","emit","import_react","__toESM","_import_react$Compone","_inherits","_ErrorBoundary2","_super","_createSuper","_this","_classCallCheck","call","state","error","errorInfo","_createClass","this","setState","Fallback","default","createElement","Component","import_dedupe","import_react2","import_react_query","loadComponent","_callee2","factory","Module","_context2","__webpack_init_sharing__","init","__webpack_share_scopes__","race","get","reject","sent","loadScript","id","querySelector","script2","type","async","onload","onerror","head","appendChild","loadMicrofrontend","_ref6","_callee3","_ref5","entry","_context3","toLowerCase","exported","_ref7","catch","_x","_ref8","Loading","loadMicrofrontend2","_objectWithoutProperties","_excluded","_ref9","useQuery","_callee4","_context4","isMounted","isFetched","isError","_ref9$data","data","mfClassName","containerId","_ref11","useState","_ref12","mfError","setMFError","_ref13","_ref14","retryCount","setRetryCount","ErrorFallback","errorProps","_objectSpread","retry","_ErrorBoundary","_ref15","useEffect","error2","err","defaultProps","import_react4","import_react3","defaults","navigate","manifests","fetch","input","layout","navItems","logout","_ref16","Fragment","createContext","options","arr","manifest","_manifest$slots$name","map","_ref17","routeHost","host","_ref18","_auth$permissions","auth","required","transformPermission","_ref19","_excluded2","useId","_ref20","contextProps","_excluded3","transformedSlots","index","import_react5","import_react_query2","import_react_router_dom","_manifest$slots$route","routes","_ref21","_ref22","_auth$permissions2","_ref23","Microfrontend2","_excluded4","useLocation","pathname","_ref24","getMicrofrontendManifests","enabled","_ref24$data","isLoading","_ref25","targetMF"],"sourceRoot":""}