{"version":3,"file":"static/js/src_layout_tsx.91381cdc.chunk.js","mappings":"gPAYMA,EAAc,IAAIC,EAAAA,YAElBC,EAAiB,SAACC,GAAyB,OAC/CA,aAAeC,YAAcD,EAAME,SAASC,eAAeH,EAAK,EAElE,SAAeI,EAAAA,EAAAA,UAASC,EAAAA,GAAU,WAAY,CAC5CC,MAAO,SAACC,EAAcC,GACpB,IAAMC,EAAYV,EAAeQ,GACjC,GAAmD,UAAtC,OAATE,QAAS,IAATA,OAAS,EAATA,EAAWC,aAAa,oBAC1B,OAAO,WACLC,IAAAA,uBAAgCF,EAClC,EAEO,OAATA,QAAS,IAATA,GAAAA,EAAWG,aAAa,kBAAmB,QAC3C,IAAMC,GAAOC,EAAAA,EAAAA,GAAWL,GAexB,OAdAI,EAAKE,QACHC,EAAAA,EAAAA,KAACC,IAAAA,WAAgB,CAAAC,UACfF,EAAAA,EAAAA,KAACG,EAAAA,qBAAqBC,SAAQ,CAACC,MAAOb,EAAaU,UACjDF,EAAAA,EAAAA,KAACM,EAAAA,oBAAmB,CAACC,OAAQ1B,EAAYqB,UACvCF,EAAAA,EAAAA,KAACQ,EAAAA,kBAAiB,CAChBC,UAAU,WACVC,KAAK,SACCC,QAAStB,EAAAA,YAOlB,WACLQ,EAAKe,SACP,CACF,EACAA,QAAS,SAACrB,GACRI,IAAAA,uBAAgCZ,EAAeQ,GACjD,G","sources":["layout.tsx"],"sourcesContent":["import {\n  register,\n  MicrofrontendSlot,\n  MicrofrontendContext,\n} from \"microfrontends\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\n\nimport pkg from \"../package.json\";\n\nconst queryClient = new QueryClient();\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nexport default register(pkg.name, \"./layout\", {\n  mount: (containerRef, props) => {\n    const container = getHTMLElement(containerRef);\n    if (container?.getAttribute(\"data-mf-mounted\") === \"true\") {\n      return () => {\n        ReactDOM.unmountComponentAtNode(container!);\n      };\n    }\n    container?.setAttribute(\"data-mf-mounted\", \"true\");\n    const root = createRoot(container!);\n    root.render(\n      <React.StrictMode>\n        <MicrofrontendContext.Provider value={props as any}>\n          <QueryClientProvider client={queryClient}>\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"layout\"\n              {...{ content: pkg.name }}\n            />\n          </QueryClientProvider>\n        </MicrofrontendContext.Provider>\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n});\n"],"names":["queryClient","QueryClient","getHTMLElement","ref","HTMLElement","document","getElementById","register","pkg","mount","containerRef","props","container","getAttribute","ReactDOM","setAttribute","root","createRoot","render","_jsx","React","children","MicrofrontendContext","Provider","value","QueryClientProvider","client","MicrofrontendSlot","className","name","content","unmount"],"sourceRoot":""}