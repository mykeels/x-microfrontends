{"version":3,"file":"static/js/src_nav-communities_tsx.61ce5a73.chunk.js","mappings":"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","sources":["nav-communities.tsx","../../microfrontends/src/index.ts","../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../microfrontends/src/common/utils/assert.utils.ts","../../microfrontends/src/common/utils/errors.utils.ts","../../microfrontends/src/common/utils/sleep.utils.ts","../../microfrontends/src/common/utils/route.utils.ts","../../microfrontends/src/common/register/index.ts","../../microfrontends/src/components/ErrorBoundary/index.tsx","../../microfrontends/src/components/Microfrontend/index.tsx","../../microfrontends/src/components/Microfrontend/Microfrontend.service.ts","../../microfrontends/src/components/MicrofrontendSlot/index.tsx","../../microfrontends/src/contexts/index.tsx","../../microfrontends/src/components/MicrofrontendSlot/MicrofrontendSlot.utils.ts","../../microfrontends/src/components/MicrofrontendScreen/index.tsx","../../microfrontends/src/components/MicrofrontendScreen/MicrofrontendScreen.utils.ts"],"sourcesContent":["import { register } from \"microfrontends\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createRoot } from \"react-dom/client\";\n\nimport pkg from \"../package.json\";\n\nconst getHTMLElement = (ref: HTMLElement | string) =>\n  ref instanceof HTMLElement ? ref : document.getElementById(ref);\n\nconst Button = () => (\n  <li className=\"flex flex-row self-start py-2 px-4 rounded-full tabs-item gap-4 outline outline-orange-500\">\n    <svg className=\"community-icon\" viewBox=\"0 0 24 24\" width=\"24\" fill=\"white\">\n      <path d=\"M7.501 19.917L7.471 21H.472l.029-1.027c.184-6.618 3.736-8.977 7-8.977.963 0 1.95.212 2.87.672-.444.478-.851 1.03-1.212 1.656-.507-.204-1.054-.329-1.658-.329-2.767 0-4.57 2.223-4.938 6.004H7.56c-.023.302-.05.599-.059.917zm15.998.056L23.528 21H9.472l.029-1.027c.184-6.618 3.736-8.977 7-8.977s6.816 2.358 7 8.977zM21.437 19c-.367-3.781-2.17-6.004-4.938-6.004s-4.57 2.223-4.938 6.004h9.875zm-4.938-9c-.799 0-1.527-.279-2.116-.73-.836-.64-1.384-1.638-1.384-2.77 0-1.93 1.567-3.5 3.5-3.5s3.5 1.57 3.5 3.5c0 1.132-.548 2.13-1.384 2.77-.589.451-1.317.73-2.116.73zm-1.5-3.5c0 .827.673 1.5 1.5 1.5s1.5-.673 1.5-1.5-.673-1.5-1.5-1.5-1.5.673-1.5 1.5zM7.5 3C9.433 3 11 4.57 11 6.5S9.433 10 7.5 10 4 8.43 4 6.5 5.567 3 7.5 3zm0 2C6.673 5 6 5.673 6 6.5S6.673 8 7.5 8 9 7.327 9 6.5 8.327 5 7.5 5z\"></path>\n    </svg>\n    <h1>Communities</h1>\n  </li>\n);\n\nexport default register(pkg.name, \"./nav-communities\", {\n  mount: (containerRef) => {\n    const root = createRoot(getHTMLElement(containerRef)!);\n    root.render(\n      <React.StrictMode>\n        <Button />\n      </React.StrictMode>\n    );\n\n    return () => {\n      root.unmount();\n    };\n  },\n  unmount: (containerRef) => {\n    ReactDOM.unmountComponentAtNode(getHTMLElement(containerRef)!);\n  },\n});\n","export * from \"./common\";\nexport * from \"./components\";\nexport * from \"./contexts\";\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","import invariant from \"tiny-invariant\";\n\n/**\n * Asserts that the given condition is truthy, otherwise throws an error.\n */\nexport const assert = <TOptional>(\n  condition: TOptional,\n  message: string | (() => string)\n): NonNullable<TOptional> => {\n  invariant(\n    condition,\n    typeof message === \"string\"\n      ? `AssertError: ${message}`\n      : message || `AssertError: condition must be truthy`\n  );\n  const _condition = condition;\n  return _condition;\n};\n","/**\n *\n * Creates an error object with a name and a message.\n */\nexport const makeError = <TName extends string>(\n  name: TName,\n  message: string,\n  cause?: unknown\n) => ({\n  name,\n  message,\n  stack: new Error().stack,\n  cause,\n  toString: () => `${name}: ${message}`,\n});\n\n/**\n * Throws an error with the given name and message.\n */\nexport const throwError = <TName extends string>(\n  name: TName,\n  message: string\n) => {\n  throw makeError(name, message);\n};\n","export const sleep = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import { pathToRegexp } from \"path-to-regexp\";\n\n/**\n * Whether the given route can match the other route\n */\nexport const canMatchRoute = (route1: string, route2: string): boolean => {\n  const route1Regex = pathToRegexp(route1.replace(/\\/\\*+/g, \"/:params*\"), []);\n  const route2Regex = pathToRegexp(route2.replace(/\\/\\*+/g, \"/:params*\"), []);\n  return route1Regex.test(route2) || route2Regex.test(route1);\n};\n\n/**\n * Whether the given permission can match the other permission\n */\nexport const canMatchPermission = (\n  permission1: string,\n  permission2: string\n): boolean => {\n  const route1Regex = pathToRegexp(\n    permission1.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  const route2Regex = pathToRegexp(\n    permission2.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  return route1Regex.test(permission2) || route2Regex.test(permission1);\n};\n\n/**\n * Whether the given host can match the other host\n */\nexport const canMatchHost = (hostA?: string, hostB?: string): boolean => {\n  return !hostA || !hostB || hostA === hostB;\n};\n\ntype Permission = `${\"manage\" | \"read-only\"}:${string}`;\n\n/**\n * Whether the given user can match the given permissions\n */\nexport const canMatchPermissions = (\n  user: {\n    permissions: Permission[];\n  },\n  permissions: Permission[]\n): boolean => {\n  return permissions?.every((permission) => {\n    const [action, ...objectPaths] = permission.split(\":\");\n    const objectPath = objectPaths.join(\":\");\n    return user.permissions.some((p) => {\n      const [uAction, ...uObjectPaths] = p.split(\":\");\n      const uObjectPath = uObjectPaths.join(\":\");\n      const objectPathsMatching =\n        uObjectPath === objectPath ||\n        canMatchPermission(uObjectPath, objectPath);\n      const actionsMatching =\n        uAction === action || (action === \"read-only\" && uAction === \"manage\");\n      return objectPathsMatching && actionsMatching;\n    });\n  });\n};\n\nexport const selectProps =\n  <TKeys extends readonly string[]>(keys: TKeys) =>\n  <TObj extends { [key in TKeys[number]]: any }>(\n    obj: TObj\n  ): {\n    [key in TKeys[number]]: TObj extends Record<key, infer TValue>\n      ? TValue\n      : never;\n  } => {\n    return Object.fromEntries(\n      Object.entries(obj).filter(([key]: [any, any]) => keys.includes(key))\n    ) as Record<TKeys[number], any>;\n  };\n","import { assert, sleep } from \"../utils\";\nimport {\n  MicrofrontendController,\n  MountFn,\n  UnmountFn,\n} from \"../../components/Microfrontend/Microfrontend.types\";\n\nconst getWindow = () => {\n  const $window: Partial<Window> & { [key: string]: any } =\n    typeof window === \"undefined\" ? {} : window;\n  return $window;\n};\n\n/**\n *\n * @param {string} scope\n * @param {{ hasZeroInstances: () => boolean }} tracker\n */\nconst unloadMicrofrontendAssets = (\n  scope: string,\n  tracker: { hasZeroInstances: () => boolean }\n) => {\n  const mfName = `mf-${scope.toLocaleLowerCase()}-entry`;\n  const mfScript = document.getElementById(mfName);\n  if (!mfScript) {\n    return;\n  }\n  const src = assert(\n    mfScript.getAttribute(\"src\"),\n    `script #${mfName} must have attr [src]`\n  );\n  const lastSlash = src.lastIndexOf(\"/\");\n  const urlStart = src.slice(0, lastSlash);\n\n  const maxAttempts = 3;\n\n  async function attemptToRemoveAssets(attempt = 0): Promise<Element[]> {\n    const scripts = Array.from(document.querySelectorAll(\"head script\")).filter(\n      (script) => script.getAttribute(\"src\")?.startsWith(urlStart)\n    );\n    const links = Array.from(document.querySelectorAll(\"head link\")).filter(\n      (link) => link.getAttribute(\"href\")?.startsWith(urlStart)\n    );\n\n    if (links.length && tracker.hasZeroInstances()) {\n      console.log(\"Removed assets\", [...scripts, ...links]);\n      scripts.forEach((script) => {\n        script.remove();\n      });\n      links.forEach((link) => {\n        link.remove();\n      });\n      return [...scripts, ...links];\n    } else {\n      return sleep(100).then(() => {\n        if (attempt < maxAttempts) {\n          return attemptToRemoveAssets(attempt + 1);\n        }\n        return [];\n      });\n    }\n  }\n  return sleep(100).then(() => attemptToRemoveAssets());\n};\n\n/**\n * Keeps track of how many running instances of a Microfrontend there are.\n *\n * By tracking, we are able to unload the Microfrontend's assets when there are no more instances running.\n */\nconst instanceTracker = ($ctrl: MicrofrontendController) => {\n  return {\n    increment: () => {\n      $ctrl.instances++;\n    },\n    decrement: () => {\n      if ($ctrl.instances > 0) {\n        $ctrl.instances--;\n      }\n    },\n    hasZeroInstances: () => {\n      const $window = getWindow();\n      const scope = $window.$mfs?.[$ctrl.scope] as {\n        [key: string]: { instances: number };\n      };\n      return (\n        Object.values(\n          assert(scope, `window.$mfs.${$ctrl.scope} must exist`)\n        ).reduce((sum, scope) => sum + scope.instances, 0) === 0\n      );\n    },\n  };\n};\n\n/**\n * The Microfrontend Controller is the engine room for a Microfrontend.\n * It contains the `mount` and `unmount` functions, as well as other variables for managing the microfrontend.\n *\n * Usually, a Microfrontend's controller is located in `window.$mfs[scope][module]`\n *\n * If no controller exists for the scope<>module pair, then a new placeholder controller will be created in the appropriate location\n *\n */\nconst getMicrofrontendController = (\n  scope: string,\n  module: string\n): MicrofrontendController => {\n  if (typeof window === \"undefined\") {\n    console.warn(\n      \"Microfrontend cannot be registered without a global window scope\"\n    );\n    // @ts-ignore\n    return { mount: () => {}, unmount: () => {}, instances: 0 };\n  }\n  const $window = getWindow();\n  $window.$mfs = $window.$mfs || {};\n  $window.$mfs[scope] = $window.$mfs[scope] || {};\n  const $scope = $window.$mfs[scope];\n  if ($scope) {\n    $scope[module] = $scope[module] || {\n      mount: () => {\n        console.warn(`No ${scope} mount fn exists`);\n        return () => {};\n      },\n      unmount: () => console.warn(`No ${scope} unmount fn exists`),\n      instances: 0,\n      scope,\n      module,\n    };\n    return $scope?.[module]!;\n  }\n  console.warn(`No ${scope} scope exists in window.$mfs`);\n  return $scope?.[module]!;\n};\n\n/**\n * Registers a microfrontend's scope and module in the window, returning a controller\n */\nexport const register = (\n  scope: string,\n  module: string,\n  { mount, unmount }: { mount: MountFn; unmount: UnmountFn }\n): MicrofrontendController => {\n  const $ctrl = getMicrofrontendController(scope, module);\n  $ctrl.tracker = $ctrl.tracker || instanceTracker($ctrl);\n  const runUnmountFn = (unmount: () => {}) => {\n    $ctrl.tracker?.decrement();\n    if ($ctrl.tracker?.hasZeroInstances()) {\n      unloadMicrofrontendAssets(scope, $ctrl.tracker);\n    }\n    return unmount();\n  };\n  const getHTMLElement = (ref: HTMLElement | string) =>\n    ref instanceof HTMLElement ? ref : document.getElementById(ref);\n  $ctrl.mount = (containerRef, props) => {\n    $ctrl.tracker?.increment();\n    const unmount = assert(mount, \"mount fn must exist\")(containerRef, props);\n    const container = getHTMLElement(containerRef);\n    const eventBus = props?.eventBus;\n    eventBus?.emit(\"mf:mount\", {\n      container,\n      scope,\n      module,\n    });\n    return () => {\n      eventBus?.emit(\"mf:unmount\", {\n        container,\n        scope,\n        module,\n      });\n      return runUnmountFn(unmount);\n    };\n  };\n  $ctrl.unmount = (containerRef) => {\n    return runUnmountFn(() =>\n      assert(unmount, \"unmount fn must exist\")(containerRef)\n    );\n  };\n  return $ctrl;\n};\n","import React, { Component } from \"react\";\nimport { MicrofrontendErrorFallback } from \"./ErrorBoundary.types\";\n\ntype ErrorBoundaryState<TError> = {\n  error: TError | null;\n  errorInfo: any;\n};\n\ntype ErrorBoundaryProps<TProps, TError> = {\n  children: React.ReactNode;\n  Fallback: MicrofrontendErrorFallback<TProps, TError>;\n};\n\nexport class ErrorBoundary<\n  TError extends { message: string; cause?: any }\n> extends Component<\n  ErrorBoundaryProps<{}, TError>,\n  ErrorBoundaryState<TError>\n> {\n  constructor(props: ErrorBoundaryProps<{}, TError>) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error: Error & TError, errorInfo: any) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo && this.state.error) {\n      const error = this.state.error;\n      const cause = this.state.errorInfo;\n      if (error) {\n        error.cause = cause;\n      }\n      const Fallback = this.props.Fallback;\n      // Error path\n      return typeof Fallback === \"function\" ? (\n        <Fallback error={error} />\n      ) : (\n        Fallback\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import classNames from \"classnames/dedupe\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { makeError, assert } from \"../../common\";\nimport { loadMicrofrontend } from \"./Microfrontend.service\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\nimport { MicrofrontendManifest } from \"./Microfrontend.types\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\n\ntype MicrofrontendProps = {\n  scope: string;\n  module: string;\n  entry: string;\n  manifests: MicrofrontendManifest[];\n  url?: string;\n  id?: string;\n  className?: string | string[] | { [key: string]: boolean };\n  navigate?: (href: string) => any;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  loadMicrofrontend?: typeof loadMicrofrontend;\n};\n\nexport const Microfrontend = ({\n  id,\n  scope,\n  entry,\n  module,\n  Loading,\n  Fallback,\n  className,\n  loadMicrofrontend,\n  ...props\n}: MicrofrontendProps) => {\n  const {\n    isFetched: isMounted,\n    isError,\n    error,\n    data: { mount } = {},\n  } = useQuery(`microfrontend?entry=${entry}&module=${module}`, async () => {\n    assert(loadMicrofrontend, \"props.loadMicrofrontend must be a function\");\n    return loadMicrofrontend?.({ entry, scope, module });\n  });\n\n  const mfClassName = classNames(\n    \"microfrontend-container spin-when-empty\",\n    className\n  );\n\n  const containerId = `mount-${(id || scope).toLowerCase()}-container`;\n  const [mfError, setMFError] = useState<{ message: string } | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  const ErrorFallback: MicrofrontendErrorFallback = (errorProps) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback\n        {...{\n          containerId,\n          scope,\n          entry,\n          module,\n          ...props,\n        }}\n        {...errorProps}\n        retry={() => setRetryCount(retryCount + 1)}\n      />\n    ) : (\n      Fallback\n    );\n\n  const _ErrorBoundary = ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={ErrorFallback}>{children}</ErrorBoundary>\n  );\n\n  useEffect(() => {\n    if (!isMounted || isError || typeof mount !== \"function\") {\n      return;\n    }\n    let unmount: (() => void) | null = null;\n    try {\n      unmount = mount(containerId, {\n        ...props,\n        ErrorBoundary: _ErrorBoundary,\n      });\n    } catch (error) {\n      setMFError(\n        makeError(\n          \"MountError\",\n          `Could not mount Microfrontend: ${scope} (${module})`,\n          error\n        )\n      );\n    }\n    return () => {\n      try {\n        if (typeof unmount === \"function\") {\n          console.log(\"unmount\", scope);\n          unmount();\n        }\n      } catch (err) {\n        console.error(err);\n        setMFError(\n          makeError(\n            \"UnmountError\",\n            `Could not unmount Microfrontend: ${scope} (${module})`,\n            error\n          )\n        );\n      }\n    };\n  }, [isMounted, isError, entry, module, retryCount]);\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : mfError ? (\n    <ErrorFallback error={mfError} />\n  ) : !isMounted ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : (\n    <div\n      id={containerId}\n      className={mfClassName}\n      {...{ \"data-mf-scope\": scope, \"data-mf-module\": module }}\n    ></div>\n  );\n};\n\nMicrofrontend.defaultProps = {\n  loadMicrofrontend,\n};\n\nexport * from \"./Microfrontend.types\";\n","import { assert, sleep } from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendDefaultExport,\n} from \"./Microfrontend.types\";\n\ndeclare function __webpack_init_sharing__(scope: string): Promise<void>;\ndeclare const __webpack_share_scopes__: { default: any };\n\nexport function loadComponent<TScope extends string>(\n  scope: TScope,\n  module: string\n): () => Promise<MicrofrontendDefaultExport> {\n  return async () => {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    const $window = window as {\n      [key in TScope]: {\n        init: (webpackShareScope: any) => Promise<any>;\n        get: (module: string) => Promise<{ [key: string]: any }>;\n      };\n    };\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__(\"default\");\n\n    const container = $window[scope];\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await Promise.race([\n      container?.get(module),\n      sleep(300).then(() =>\n        Promise.reject(\n          new Error(\n            `No module ${module} was found in window.${scope} container`\n          )\n        )\n      ),\n    ]);\n    const Module =\n      typeof factory === \"function\"\n        ? factory()\n        : Promise.reject(\n            new Error(\n              `No module ${module} was found in window.${scope} container`\n            )\n          );\n    return Module;\n  };\n}\n\nexport const loadScript = (\n  id: string,\n  src: string\n): Promise<HTMLScriptElement> => {\n  return new Promise((resolve, reject) => {\n    if (document.querySelector(`script[id=\"${id}\"]`)) {\n      const script: HTMLScriptElement = assert(\n        document.querySelector(`script[id=\"${id}\"]`),\n        `script must exist: [id=${id}]`\n      );\n      return resolve(script);\n    }\n    const script = document.createElement(\"script\");\n    script.id = id;\n    script.src = src;\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = () => resolve(script);\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n};\n\nexport const loadMicrofrontend = async ({\n  entry,\n  scope,\n  module,\n}: Pick<MicrofrontendManifest, \"entry\" | \"scope\" | \"module\">) =>\n  loadScript(`mf-${scope.toLowerCase()}-entry`, entry)\n    .then(() => loadComponent(scope, module)())\n    .then((exported) => exported.default)\n    .then(({ mount, unmount }) => {\n      return {\n        mount,\n        unmount,\n      };\n    })\n    .catch((error: unknown) => Promise.reject(error));\n","import React, { useContext, useId } from \"react\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\nimport { MicrofrontendContext } from \"../../contexts\";\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsByName } from \"./MicrofrontendSlot.utils\";\nimport { MicrofrontendCustomSlotOptions } from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendSlot = MicrofrontendCustomSlotOptions & {\n  [key: string]: any;\n};\n\ntype MicrofrontendSlotProps = {\n  name: string;\n  transform?: (slots: MicrofrontendSlot[]) => MicrofrontendSlot[];\n  Fallback?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  Loading?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  className?: string | string[] | { [key: string]: boolean };\n};\n\nexport const MicrofrontendSlot = ({\n  name,\n  transform,\n  Fallback,\n  Loading,\n  className,\n  ...props\n}: MicrofrontendSlotProps) => {\n  const id = useId();\n  const { manifests, user, ...contextProps } = useContext(MicrofrontendContext);\n\n  const slots = getMicrofrontendsByName(manifests, name, {\n    user,\n  });\n\n  // @ts-ignore\n  const transformedSlots = transform(slots);\n\n  return (\n    <>\n      {transformedSlots.map((slot, index) => (\n        <ErrorBoundary\n          key={`slot-${slot.scope}-${slot.module}-${id}-${index}`}\n          Fallback={\n            typeof Fallback === \"function\"\n              ? (errorProps) => (\n                  <Fallback slot={slot} {...props} {...errorProps} />\n                )\n              : Fallback || (() => <></>)\n          }\n        >\n          <Microfrontend\n            {...{ manifests, user, ...slot, ...contextProps, ...props }}\n            Fallback={\n              typeof Fallback === \"function\"\n                ? (errorProps) => (\n                    <Fallback slot={slot} {...props} {...errorProps} />\n                  )\n                : Fallback || (() => <></>)\n            }\n            Loading={\n              typeof Loading === \"function\"\n                ? () => <Loading slot={slot} />\n                : Loading || (() => <></>)\n            }\n            entry={slot.entry}\n            module={slot.module}\n            scope={slot.scope}\n            className={className}\n            id={`slot-${slot.scope}-${id}-${index}`}\n          />\n        </ErrorBoundary>\n      ))}\n    </>\n  );\n};\n\nMicrofrontendSlot.defaultProps = {\n  transform: (slots) => slots,\n  Fallback: () => <div>Sorry, there was an error loading this component</div>,\n  Loading: () => <div>...loading...</div>,\n} satisfies Partial<MicrofrontendSlotProps>;\n\nexport * from \"./MicrofrontendSlot.utils\";\n","import React from \"react\";\n\nimport { ErrorBoundary, MicrofrontendMountProps } from \"../components\";\n\nconst defaults = {\n  homedir: \"/\",\n\n  navigate: () => {},\n\n  manifests: [],\n\n  fetch: (input: RequestInfo, init?: RequestInit) => window.fetch(input, init),\n\n  user: undefined,\n\n  eventBus: undefined,\n\n  layout: {\n    navItems: [],\n    logout: () => {},\n  },\n\n  ErrorBoundary: ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={() => <>An Error occurred</>}>\n      {children}\n    </ErrorBoundary>\n  ),\n};\n\nexport const MicrofrontendContext =\n  React.createContext<MicrofrontendMountProps>(defaults);\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendCustomSlotOptions,\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingName = {\n  module: string;\n  entry: string;\n  scope: string;\n  [key: string]: any;\n};\n\n/**\n *\n * @param manifests\n * @param name\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns Slots matching the given name\n */\nexport const getMicrofrontendsByName = (\n  manifests: MicrofrontendManifest[],\n  name: string,\n  options?: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingName[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots[name]?.map((slot) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof slot === \"string\" ? { slot } : slot),\n          })) || []),\n        ] as MicrofrontendMatchingName[],\n      [] as MicrofrontendMatchingName[]\n    )\n    .filter(({ host: routeHost }: MicrofrontendCustomSlotOptions) =>\n      canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendCustomSlotOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map((p) =>\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission(p)\n              : p\n          ) || []\n        )\n    );\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { makeError } from \"../../common\";\n\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsMatchingLocation } from \"./MicrofrontendScreen.utils\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendMountProps,\n} from \"../Microfrontend/Microfrontend.types\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\n\ntype MicrofrontendScreenProps = {\n  host?: string;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  Microfrontend: typeof Microfrontend;\n} & Omit<MicrofrontendMountProps, \"manifests\" | \"ErrorBoundary\"> &\n  (\n    | {\n        getMicrofrontendManifests: () => Promise<MicrofrontendManifest[]>;\n      }\n    | {\n        manifests: MicrofrontendManifest[];\n      }\n  );\n\n/**\n * Route-level component, that loads Microfrontends based on\n * whether their manifest routes matches the current location.\n */\nexport const MicrofrontendScreen = ({\n  host,\n  Loading,\n  Fallback,\n  navigate,\n  Microfrontend,\n  ...props\n}: MicrofrontendScreenProps) => {\n  const location = useLocation();\n  const url = location.pathname;\n  const {\n    data: manifests = [],\n    isLoading,\n    isError,\n    error,\n  } = useQuery(\"manifests\", () =>\n    \"getMicrofrontendManifests\" in props\n      ? props.getMicrofrontendManifests()\n      : props.manifests\n  );\n  const [targetMF] =\n    getMicrofrontendsMatchingLocation(manifests || [], url, {\n      host,\n      user: props?.user,\n    }) || [];\n\n  const ErrorFallback = (errorProps: { error: any }) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback {...props} {...errorProps} />\n    ) : (\n      Fallback\n    );\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : isLoading ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : !targetMF && manifests?.length ? (\n    <ErrorFallback\n      error={makeError(\n        \"NoRouteMatchFound\",\n        `No microfrontend was found capable of handling the route: ${url}`\n      )}\n    />\n  ) : targetMF ? (\n    <Microfrontend\n      {...props}\n      url={url}\n      entry={targetMF.entry}\n      scope={targetMF.scope}\n      module={targetMF.module}\n      manifests={manifests}\n      navigate={navigate}\n      Loading={Loading}\n      Fallback={Fallback}\n    />\n  ) : null;\n};\n\nMicrofrontendScreen.defaultProps = {\n  Microfrontend,\n};\n\nexport * from \"./MicrofrontendScreen.utils\";\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  canMatchRoute,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n  MicrofrontendRouteOptions,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingRoute = {\n  entry: string;\n  scope: string;\n  module: string;\n  route: string;\n  host?: string;\n};\n\n/**\n *\n * @param manifests\n * @param url\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns slots matching the current location url\n */\nexport const getMicrofrontendsMatchingLocation = (\n  manifests: MicrofrontendManifest[],\n  url: string,\n  options: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingRoute[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots.routes?.map((route) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof route === \"string\" ? { route } : route),\n          })) || []),\n        ] as MicrofrontendMatchingRoute[],\n      [] as MicrofrontendMatchingRoute[]\n    )\n    .filter(\n      ({ route, host: routeHost }: MicrofrontendRouteOptions) =>\n        canMatchRoute(route, url) && canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendRouteOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map(\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission\n              : (p) => p\n          ) || []\n        )\n    );\n"],"names":["getHTMLElement","ref","HTMLElement","document","getElementById","Button","_jsxs","className","children","_jsx","viewBox","width","fill","d","register","mount","containerRef","root","createRoot","render","React","unmount","ReactDOM","src_exports","__export","ErrorBoundary","Microfrontend","MicrofrontendContext","MicrofrontendScreen","MicrofrontendSlot","assert","canMatchHost","canMatchPermission","canMatchPermissions","canMatchRoute","getMicrofrontendsByName","getMicrofrontendsMatchingLocation","makeError","selectProps","sleep","throwError","module","exports","prefix","condition","message","Error","invariant","concat","name","cause","stack","toString","ms","Promise","resolve","setTimeout","import_path_to_regexp","require","route1","route2","route1Regex","pathToRegexp","replace","route2Regex","test","permission1","permission2","hostA","hostB","user","permissions","every","permission","_permission$split","split","_permission$split2","_toArray","action","objectPath","slice","join","some","p","_p$split","_p$split2","uAction","uObjectPath","keys","obj","Object","fromEntries","entries","filter","_ref","key","_slicedToArray","includes","getWindow","window","scope","module2","_ref3","$ctrl","console","warn","instances","$window","$mfs","$scope","getMicrofrontendController","tracker","increment","decrement","hasZeroInstances","_$window$$mfs","values","reduce","sum","scope2","instanceTracker","runUnmountFn","unmount2","_$ctrl$tracker","_$ctrl$tracker2","mfName","toLocaleLowerCase","mfScript","src","getAttribute","lastSlash","lastIndexOf","urlStart","maxAttempts","then","attemptToRemoveAssets","_attemptToRemoveAssets","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","attempt","scripts","links","_args","wrap","_context","prev","next","length","undefined","Array","from","querySelectorAll","script","_script$getAttribute","startsWith","link","_link$getAttribute","log","_toConsumableArray","forEach","remove","abrupt","stop","unloadMicrofrontendAssets","props","_$ctrl$tracker3","container","eventBus","emit","import_react","__toESM","_import_react$Compone","_inherits","_ErrorBoundary2","_super","_createSuper","_this","_classCallCheck","call","state","error","errorInfo","_createClass","value","this","setState","Fallback","default","createElement","Component","import_dedupe","import_react2","import_react_query","loadComponent","_callee2","factory","Module","_context2","__webpack_init_sharing__","init","__webpack_share_scopes__","race","get","reject","sent","loadScript","id","querySelector","script2","type","async","onload","onerror","head","appendChild","loadMicrofrontend","_ref6","_callee3","_ref5","entry","_context3","toLowerCase","exported","_ref7","catch","_x","_ref8","Loading","loadMicrofrontend2","_objectWithoutProperties","_excluded","_ref9","useQuery","_callee4","_context4","isMounted","isFetched","isError","_ref9$data","data","mfClassName","containerId","_ref11","useState","_ref12","mfError","setMFError","_ref13","_ref14","retryCount","setRetryCount","ErrorFallback","errorProps","_objectSpread","retry","_ErrorBoundary","_ref15","useEffect","error2","err","defaultProps","import_react4","import_react3","defaults","homedir","navigate","manifests","fetch","input","layout","navItems","logout","_ref16","Fragment","createContext","options","arr","manifest","_manifest$slots$name","slots","map","slot","_ref17","routeHost","host","_ref18","_auth$permissions","auth","required","transformPermission","_ref19","transform","_excluded2","useId","_ref20","useContext","contextProps","_excluded3","transformedSlots","index","import_react5","import_react_query2","import_react_router_dom","url","_manifest$slots$route","routes","route","_ref21","_ref22","_auth$permissions2","_ref23","Microfrontend2","_excluded4","useLocation","pathname","_ref24","getMicrofrontendManifests","_ref24$data","isLoading","_ref25","targetMF"],"sourceRoot":""}