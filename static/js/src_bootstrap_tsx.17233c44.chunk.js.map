{"version":3,"file":"static/js/src_bootstrap_tsx.17233c44.chunk.js","mappings":"kPASMA,EAAiB,SAACC,GAA0B,OAChDA,EAAMC,MAAK,SAACC,EAAGC,GACb,OAAQD,EAAEE,UAAY,IAAMD,EAAEC,UAAY,EAC5C,GAAG,EAEQC,EAAS,WACpB,IAAQC,GAAYC,EAAAA,EAAAA,YAAWC,EAAAA,sBAAvBF,QAER,OACEG,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBF,UAC9BC,EAAAA,EAAAA,KAAA,OACEC,UAAU,WACVC,QAAQ,aACRC,MAAM,KACNC,OAAO,KACPC,OAAO,QAAON,UAEdC,EAAAA,EAAAA,KAAA,QAAMM,EAAE,6VAIZT,EAAAA,EAAAA,MAAA,QAAMI,UAAU,iCAAgCF,SAAA,EAC9CF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,uEAAsEF,SAAA,EACnFC,EAAAA,EAAAA,KAAA,OACEO,IAAI,gGACJC,IAAI,OACJP,UAAU,oCAEZD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,gCAA+BF,UAC3CC,EAAAA,EAAAA,KAACS,EAAAA,kBAAiB,CAChBR,UAAU,WACVS,KAAK,WACLC,UAAWxB,OAGfa,EAAAA,EAAAA,KAACS,EAAAA,kBAAiB,CAACR,UAAU,WAAWS,KAAK,mBAE/CV,EAAAA,EAAAA,KAACS,EAAAA,kBAAiB,CAChBR,UAAU,WACVS,KAAK,eACLC,UAAW,SAACvB,GACV,OAAOA,EAAMwB,QAAO,SAACC,GAAI,UACvB,UAAWA,IACW,kBAAfA,EAAKC,QACZpB,GACmB,kBAAZA,KACHqB,EAAAA,EAAAA,eAAcrB,EAASmB,EAAKC,MACvB,GAEb,KAEFd,EAAAA,EAAAA,KAAA,SAAOC,UAAU,2DAA0DF,UACzEF,EAAAA,EAAAA,MAAA,OAAKI,UAAU,kBAAiBF,SAAA,EAC9BC,EAAAA,EAAAA,KAACS,EAAAA,kBAAiB,CAChBR,UAAU,WACVS,KAAK,aACLC,UAAWxB,KAEbU,EAAAA,EAAAA,MAAA,OAAKI,UAAU,6BAA4BF,SAAA,EACzCC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,sBACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oBACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mBACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,kBACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,oCACNC,EAAAA,EAAAA,KAAA,QAAAD,SAAM,mCAOpB,ECpEMiB,EAAW,IAAIC,EAAAA,EAEfC,EAAW,WAAH,OACZlB,EAAAA,EAAAA,KAAA,OAAAD,SAAK,uDAAyD,EAG1DoB,EAAY,SAAHC,GAA+D,IAAzDC,EAASD,EAATC,UACbC,GAAWC,EAAAA,EAAAA,eACXC,GAAWC,EAAAA,EAAAA,eACX/B,EAAO,GAAAgC,OAAMC,qBAA4BD,OAAGJ,EAASM,UAE3D,OACE5B,EAAAA,EAAAA,KAACJ,EAAAA,qBAAqBiC,SAAQ,CAC5BC,MAAO,CACLT,UAAAA,EACAG,SAAAA,EACAR,SAAAA,EACAe,MAAAA,MACArC,QAAAA,EACAsC,IAAKV,EAASM,SACdK,KAAM,CAAEC,YAAa,IACrBC,OAAQ,CACNC,SAAU,GACVC,OAAQ,WAAO,GAEjBC,cAAe,SAACC,GAAK,OACnBvC,EAAAA,EAAAA,KAACwC,EAAAA,eAAaC,EAAAA,EAAAA,GAAA,CAACvB,SAAUA,GAAcqB,GAAS,GAElDxC,UAEFC,EAAAA,EAAAA,KAAC0C,EAAAA,OAAM,CAAA3C,UACLC,EAAAA,EAAAA,KAAC2C,EAAAA,MAAK,CAACC,KAAK,IAAIC,SAAS7C,EAAAA,EAAAA,KAACP,EAAM,SAIxC,EAQaqD,EAAY,SAAHC,GAEW,IAD/BC,EAAyBD,EAAzBC,0BAICC,GAFgCC,EAAAA,EAAAA,UAAS,aAAa,kBACrDF,EAA0B,GAAG,IADvBG,KAAM9B,OAAS,IAAA4B,EAAG,GAAEA,EAG5B,OACEjD,EAAAA,EAAAA,KAACoD,EAAAA,cAAa,CAACC,SAAU1B,oBAAuB5B,UAC9CC,EAAAA,EAAAA,KAACmB,EAAS,CAACE,UAAWA,KAG5B,EC5DMiC,EAAc,IAAIC,EAAAA,YAExB,SAASC,IAIA,IAAHC,GAAEC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAJ,CAAC,GAHHG,gBAAAA,OAAe,IAAAJ,EAAwC,GAAA/B,OAChDC,oBAA4B,iCAC8B8B,EAEjE,OACE5D,EAAAA,EAAAA,MAACiE,EAAAA,oBAAmB,CAACC,OAAQT,EAAYvD,SAAA,EACvCC,EAAAA,EAAAA,KAACgE,EAAAA,mBAAkB,KACnBhE,EAAAA,EAAAA,KAAC8C,EAAS,CACRE,2BAAyBiB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,OAAAF,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SACzB1C,MAAM8B,GAAiBa,MAAK,SAACC,GAAG,OAAKA,EAAIC,MAAM,KAAC,wBAAAN,EAAAO,OAAA,GAAAT,EAAA,SAK1D,EAEaU,EAAAA,EAAAA,GAAWC,SAASC,eAAe,SAC3CC,QACHjF,EAAAA,EAAAA,KAACkF,IAAAA,WAAgB,CAAAnF,UACfC,EAAAA,EAAAA,KAACwD,EAAG,M,igCC7BR2B,EAAA,I,6DAAAC,CAAAD,EAAA,CAAA7C,cAAA,kBAAAA,CAAA,EAAA+C,cAAA,kBAAAA,CAAA,EAAAzF,qBAAA,kBAAAA,EAAA,EAAA0F,oBAAA,kBAAAA,EAAA,EAAA7E,kBAAA,kBAAAA,EAAA,EAAA8E,OAAA,kBAAAA,CAAA,EAAAC,aAAA,kBAAAA,CAAA,EAAAC,mBAAA,kBAAAA,CAAA,EAAAC,oBAAA,kBAAAA,CAAA,EAAA3E,cAAA,kBAAAA,CAAA,EAAA4E,wBAAA,kBAAAA,EAAA,EAAAC,kCAAA,kBAAAA,EAAA,EAAAC,UAAA,kBAAAA,CAAA,EAAAC,SAAA,kBAAAA,CAAA,EAAAC,YAAA,kBAAAA,CAAA,EAAAC,MAAA,kBAAAA,CAAA,EAAAC,WAAA,kBAAAA,CAAA,IAAAC,EAAAC,S,EAAAhB,E,oCCAA,IACIiB,EAAS,mBCIN,IAAMb,EAAS,SACpBc,EACAC,GASA,ODdF,SAAmBD,EAAWC,GAC1B,IAAID,EAIA,MAAM,IAAIE,MAAMH,EAKxB,CCHEI,CACEH,EACmB,kBAAZC,GAAY,gBAAA5E,OACC4E,IAGHD,CAErB,ECbaR,EAAY,SACvBnF,EACA4F,EACAG,GAAA,MACI,CACJ/F,KAAAA,EACA4F,QAAAA,EACAI,OAAO,IAAIH,OAAQG,MACnBD,MAAAA,EACAE,SAAU,oBAAAjF,OAAShB,EAAI,MAAAgB,OAAK4E,EAAO,EACrC,EAKaL,EAAa,SACxBvF,EACA4F,GAEA,MAAMT,EAAUnF,EAAM4F,EACxB,ECxBaN,EAAQ,SAACY,GACpB,OAAO,IAAIC,SAAQ,SAACC,GAClBC,WAAWD,EAASF,EACtB,GACF,ECJAI,EAA6BC,EAAA,MAKhBlG,EAAgB,SAACmG,EAAgBC,GAC5C,IAAMC,GAAA,EAAcJ,EAAAK,cAAaH,EAAOI,QAAQ,SAAU,aAAc,IAClEC,GAAA,EAAcP,EAAAK,cAAaF,EAAOG,QAAQ,SAAU,aAAc,IACxE,OAAOF,EAAYI,KAAKL,IAAWI,EAAYC,KAAKN,EACtD,EAKazB,EAAqB,SAChCgC,EACAC,GAEA,IAAMN,GAAA,EAAcJ,EAAAK,cAClBI,EAAYH,QAAQ,WAAY,aAAaA,QAAQ,QAAS,YAC9D,IAEIC,GAAA,EAAcP,EAAAK,cAClBK,EAAYJ,QAAQ,WAAY,aAAaA,QAAQ,QAAS,YAC9D,IAEF,OAAOF,EAAYI,KAAKE,IAAgBH,EAAYC,KAAKC,EAC3D,EAKajC,EAAe,SAACmC,EAAgBC,GAC3C,OAAQD,IAAUC,GAASD,IAAUC,CACvC,EAOalC,EAAsB,SACjCzD,EAGAC,GAEA,OAAO,OAAAA,QAAA,IAAAA,OAAA,EAAAA,EAAa2F,OAAM,SAACC,GACzB,IAAAC,EAAiCD,EAAWE,MAAM,KAAGC,EAAAC,EAAAH,GAA9CI,EAAAF,EAAA,GACDG,EADuBH,EAAAI,MAAA,GACEC,KAAK,KACpC,OAAOrG,EAAKC,YAAYqG,MAAK,SAACC,GAC5B,IAAAC,EAAmCD,EAAER,MAAM,KAAGU,EAAAR,EAAAO,GAAvCE,EAAAD,EAAA,GACDE,EADyBF,EAAAL,MAAA,GACEC,KAAK,KAMtC,OAJEM,IAAgBR,GAChB3C,EAAmBmD,EAAaR,MAEhCO,IAAYR,GAAsB,cAAXA,GAAsC,WAAZQ,EAErD,GACF,GACF,EAEa5C,EACX,SAAkC8C,GAAA,OAClC,SACEC,GAMA,OAAOC,OAAOC,YACZD,OAAOE,QAAQH,GAAKlI,QAAO,SAAAQ,GAAA,IAAE8H,EAAFC,EAAA/H,EAAA,GAAK,UAAkByH,EAAKO,SAASF,EAAI,IAExE,GCpEIG,EAAY,WAGhB,MADoB,qBAAXC,OAAyB,CAAC,EAAIA,MAEzC,EA+HaxD,EAAW,SACtByD,EACAC,EAAAC,GAE4B,IAD1BC,EAAAD,EAAAC,MAAOC,EAAAF,EAAAE,QAEHC,EAxC2B,SACjCL,EACAC,GAEA,GAAsB,qBAAXF,OAKT,OAJAO,QAAQC,KACN,oEAGK,CAAEJ,MAAO,WAAO,EAAGC,QAAS,WAAO,EAAGI,UAAW,GAE1D,IAAMC,EAAUX,IAChBW,EAAQC,KAAOD,EAAQC,MAAQ,CAAC,EAChCD,EAAQC,KAAKV,GAASS,EAAQC,KAAKV,IAAU,CAAC,EAC9C,IAAMW,EAASF,EAAQC,KAAKV,GAC5B,OAAIW,GACFA,EAAOV,GAAUU,EAAOV,IAAW,CACjCE,MAAO,WAEL,OADAG,QAAQC,KAAA,MAAApI,OAAW6H,EAAK,qBACjB,WAAO,CAChB,EACAI,QAAS,kBAAME,QAAQC,KAAA,MAAApI,OAAW6H,EAAK,sBAAoB,EAC3DQ,UAAW,EACXR,MAAAA,EACArD,OAAAsD,GAEK,OAAAU,QAAA,IAAAA,OAAA,EAAAA,EAASV,KAElBK,QAAQC,KAAA,MAAApI,OAAW6H,EAAK,iCACjB,OAAAW,QAAA,IAAAA,OAAA,EAAAA,EAASV,GAClB,CAUgBW,CAA2BZ,EAAOC,GAChDI,EAAMQ,QAAUR,EAAMQ,SA1EA,SAACR,GACvB,MAAO,CACLS,UAAW,WACTT,EAAMG,WACR,EACAO,UAAW,WACLV,EAAMG,UAAY,GACpBH,EAAMG,WAEV,EACAQ,iBAAkB,WAAM,IAAAC,EAEhBjB,EAAgB,QAAhBiB,EADUnB,IACMY,YAAA,IAAAO,OAAA,EAARA,EAAeZ,EAAML,OAGnC,OAGyD,IAFvDR,OAAO0B,OACLlF,EAAOgE,EAAA,eAAA7H,OAAsBkI,EAAML,MAAK,iBACxCmB,QAAO,SAACC,EAAKC,GAAA,OAAUD,EAAMC,EAAMb,SAAA,GAAW,EAEpD,EAEJ,CAoDmCc,CAAgBjB,GACjD,IAAMkB,EAAe,SAACC,GAA8B,IAAAC,EAAAC,EAKlD,OAJM,QAAND,EAAApB,EAAMQ,eAAA,IAAAY,GAANA,EAAeV,YACL,QAAVW,EAAIrB,EAAMQ,eAAA,IAAAa,GAANA,EAAeV,oBAjIW,SAChChB,EACAa,GAEA,IAAMc,EAAA,MAAAxJ,OAAe6H,EAAM4B,oBAAmB,UACxCC,EAAWrG,SAASC,eAAekG,GACzC,GAAKE,EAAL,CAGA,IAAM7K,EAAMgF,EACV6F,EAASC,aAAa,OAAK,WAAA3J,OAChBwJ,EAAM,0BAEbI,EAAY/K,EAAIgL,YAAY,KAC5BC,EAAWjL,EAAI8H,MAAM,EAAGiD,GAExBG,EAAc,EA4BpB,OAAOzF,EAAM,KAAKtB,MAAK,kBAAMgH,GAAuB,GApCpD,CAQoB,SAELA,IAAA,OAAAC,EAAAC,MAAA,KAAAlI,UAAA,UAAAiI,IAyBf,OAzBeA,EAAA1H,EAAAC,IAAAC,MAAf,SAAAC,IAAA,IAAAyH,EAAAC,EAAAC,EAAAC,EAAAtI,UAAA,OAAAQ,IAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAME,GANmCqH,EAAAG,EAAArI,OAAA,QAAAC,IAAAoI,EAAA,GAAAA,EAAA,GAAU,EACvCF,EAAUG,MAAMC,KAAKnH,SAASoH,iBAAiB,gBAAgBvL,QACnE,SAACwL,GAAA,IAAAC,EAAA,OAAoC,QAApCA,EAAWD,EAAOf,aAAa,cAAK,IAAAgB,OAAA,EAAzBA,EAA4BC,WAAWd,EAAQ,MAEvDO,EAAQE,MAAMC,KAAKnH,SAASoH,iBAAiB,cAAcvL,QAC/D,SAAC2L,GAAA,IAAAC,EAAA,OAAiC,QAAjCA,EAASD,EAAKlB,aAAa,eAAM,IAAAmB,OAAA,EAAxBA,EAA2BF,WAAWd,EAAQ,KAGhD7H,SAAUyG,EAAQG,mBAAiB,CAAAjG,EAAAE,KAAA,SAO1C,OANDqF,QAAQ4C,IAAI,iBAAkB,GAAlB/K,OAAAgL,EAAsBZ,GAAAY,EAAYX,KAC9CD,EAAQa,SAAQ,SAACP,GACfA,EAAOQ,QACT,IACAb,EAAMY,SAAQ,SAACJ,GACbA,EAAKK,QACP,IAACtI,EAAAG,OAAA,YAAA/C,OAAAgL,EACUZ,GAAAY,EAAYX,KAAK,eAAAzH,EAAAG,OAAA,SAErBuB,EAAM,KAAKtB,MAAK,WACrB,OAAImH,EAAUJ,EACLC,EAAsBG,EAAU,GAElC,EACT,KAAC,yBAAAvH,EAAAO,OAAA,GAAAT,EAAA,KAELuH,EAAAC,MAAA,KAAAlI,UAAA,CAEF,CAqFMmJ,CAA0BtD,EAAOK,EAAMQ,SAElC,WACLrD,YAAW,WACTgE,KACF,GACF,CACF,EA2BA,OAxBAnB,EAAMF,MAAQ,SAACoD,EAAcvK,GAAU,IAAAwK,EAC/B,QAANA,EAAAnD,EAAMQ,eAAA,IAAA2C,GAANA,EAAe1C,YACf,IAJsB2C,EAIhBjC,EAAUxF,EAAOmE,EAAO,sBAAdnE,CAAqCuH,EAAcvK,GAC7D0K,GALgBD,EAKWF,aAJlBI,YAAcF,EAAMjI,SAASC,eAAegI,GAKrDhM,EAAW,OAAAuB,QAAA,IAAAA,OAAA,EAAAA,EAAOvB,SAMxB,OALA,OAAAA,QAAA,IAAAA,GAAAA,EAAUmM,KAAK,WAAY,CACzBF,UAAAA,EACA1D,MAAAA,EACArD,OAAAsD,IAEK,WAML,OALA,OAAAxI,QAAA,IAAAA,GAAAA,EAAUmM,KAAK,aAAc,CAC3BF,UAAAA,EACA1D,MAAAA,EACArD,OAAAsD,IAEKsB,EAAaC,EACtB,CACF,EACAnB,EAAMD,QAAU,SAACmD,GACf,OAAOhC,GAAa,kBAClBvF,EAAOoE,EAAS,wBAAhBpE,CAAyCuH,EAAY,GAEzD,EACOlD,CACT,ECvLAwD,EAAiCC,EAAApG,EAAA,OAapB3E,EAAA,SAAAgL,GAAAC,EAAAC,EAAAF,GAAA,IAAAG,EAAAC,EAAAF,GAMX,SAAAA,EAAYjL,GAAuC,IAAAoL,EAEL,OAFKC,EAAA,KAAAJ,IACjDG,EAAAF,EAAAI,KAAA,KAAMtL,IACDuL,MAAQ,CAAEC,MAAO,KAAMC,UAAW,MAAKL,CAC9C,CA4BA,OA5BAM,EAAAT,EAAA,EAAAtE,IAAA,oBAAApH,MAEA,SAAkBiM,EAAuBC,GAEvCE,KAAKC,SAAS,CACZJ,MAAAA,EACAC,UAAAA,GAGJ,IAAA9E,IAAA,SAAApH,MAEA,WACE,GAAIoM,KAAKJ,MAAME,WAAaE,KAAKJ,MAAMC,MAAO,CAC5C,IAAMA,EAAQG,KAAKJ,MAAMC,MACnBtH,EAAQyH,KAAKJ,MAAME,UACrBD,IACFA,EAAMtH,MAAQA,GAEhB,IAAMvF,EAAWgN,KAAK3L,MAAMrB,SAE5B,MAA2B,oBAAbA,EACZkM,EAAAgB,QAAAC,cAACnN,EAAA,CAAS6M,MAAAA,IAEV7M,CAEJ,CAEA,OAAOgN,KAAK3L,MAAMxC,QACpB,KAAAyN,CAAA,CArCW,CAEHJ,EAAAkB,WCfVC,EAAuBlB,EAAApG,EAAA,OACvBuH,EAA2CnB,EAAApG,EAAA,OAC3CwH,EAAyBxH,EAAA,MCOlB,SAASyH,EACdnF,EACAC,GAEA,OAAAvF,EAAAC,IAAAC,MAAO,SAAAwK,IAAA,IAAA3E,EAAAiD,EAAA2B,EAAAC,EAAA,OAAA3K,IAAAG,MAAA,SAAAyK,GAAA,cAAAA,EAAAvK,KAAAuK,EAAAtK,MAAA,UACiB,qBAAX8E,OAAW,CAAAwF,EAAAtK,KAAA,eAAAsK,EAAArK,OAAA,iBAGN,OAAVuF,EAAUV,OAAAwF,EAAAtK,KAAA,EAOVuK,EAAAA,EAAyB,WAAS,OAET,OAAzB9B,EAAYjD,EAAQT,GAAKuF,EAAAtK,KAAA,EAEzByI,EAAU+B,KAAKC,EAAAA,EAAyBb,SAAO,cAAAU,EAAAtK,KAAA,GAC/BqC,QAAQqI,KAAK,CACjC,OAAAjC,QAAA,IAAAA,OAAA,EAAAA,EAAWkC,IAAI3F,GACfxD,EAAM,KAAKtB,MAAK,kBACdmC,QAAQuI,OACN,IAAI7I,MAAA,aAAA7E,OACW8H,EAAM,yBAAA9H,OAAwB6H,EAAK,eAEpD,MAEH,QAQK,OAjBAqF,EAAAE,EAAAO,KAUAR,EACe,oBAAZD,EACHA,IACA/H,QAAQuI,OACN,IAAI7I,MAAA,aAAA7E,OACW8H,EAAM,yBAAA9H,OAAwB6H,EAAK,gBAEpDuF,EAAArK,OAAA,SACCoK,GAAA,yBAAAC,EAAAjK,OAAA,GAAA8J,EAAA,IAEX,CAEO,IAAMW,EAAa,SACxBC,EACAhP,GAEA,OAAO,IAAIsG,SAAQ,SAACC,EAASsI,GAC3B,GAAIrK,SAASyK,cAAA,cAAA9N,OAA4B6N,EAAE,OAAO,CAChD,IAAME,EAA4BlK,EAChCR,SAASyK,cAAA,cAAA9N,OAA4B6N,EAAE,OAAI,0BAAA7N,OACjB6N,EAAE,MAE9B,OAAOzI,EAAQ2I,EACjB,CACA,IAAMrD,EAASrH,SAASsJ,cAAc,UACtCjC,EAAOmD,GAAKA,EACZnD,EAAO7L,IAAMA,EACb6L,EAAOsD,KAAO,kBACdtD,EAAOuD,OAAQ,EACfvD,EAAOwD,OAAS,kBAAM9I,EAAQsF,EAAM,EACpCA,EAAOyD,QAAUT,EACjBrK,SAAS+K,KAAKC,YAAY3D,EAC5B,GACF,EAEa4D,EAAA,eAAAC,EAAAhM,EAAAC,IAAAC,MAAoB,SAAA+L,EAAAC,GAAA,IAAAC,EAAA7G,EAAAC,EAAA,OAAAtF,IAAAG,MAAA,SAAAgM,GAAA,cAAAA,EAAA9L,KAAA8L,EAAA7L,MAAA,OAG/B,OAFA4L,EAAAD,EAAAC,MACA7G,EAAA4G,EAAA5G,MACAC,EAAA2G,EAAAjK,OAAAmK,EAAA5L,OAAA,SAEA6K,EAAA,MAAA5N,OAAiB6H,EAAM+G,cAAa,UAAUF,GAC3C1L,MAAK,kBAAMgK,EAAcnF,EAAOC,EAArBkF,EAA8B,IACzChK,MAAK,SAAC6L,GAAA,OAAaA,EAASnC,OAAO,IACnC1J,MAAK,SAAA8L,GACJ,MAAO,CACL9G,MAFK8G,EAAA9G,MAGLC,QAHY6G,EAAA7G,QAKhB,IACC8G,OAAM,SAAC1C,GAAA,OAAmBlH,QAAQuI,OAAOrB,EAAM,6BAAAsC,EAAAxL,OAAA,GAAAqL,EAAA,qBAdvCQ,GAAA,OAAAT,EAAArE,MAAA,KAAAlI,UAAA,KDlDA2B,EAAgB,SAAhBsL,GAUa,IATxBpB,EAAAoB,EAAApB,GACAhG,EAAAoH,EAAApH,MACA6G,EAAAO,EAAAP,MACA5G,EAAAmH,EAAAzK,OACA0K,EAAAD,EAAAC,QACA1P,EAAAyP,EAAAzP,SACAjB,EAAA0Q,EAAA1Q,UACA4Q,EAAAF,EAAAX,kBACGzN,EAAAuO,EAAAH,EAAAI,GAEHC,GAKA,EAAIvC,EAAAvL,UAAA,uBAAAxB,OAAgC0O,EAAK,YAAA1O,OAAW8H,GAAMvF,EAAAC,IAAAC,MAAI,SAAA8M,IAAA,OAAA/M,IAAAG,MAAA,SAAA6M,GAAA,cAAAA,EAAA3M,KAAA2M,EAAA1M,MAAA,OACU,OAAtEe,EAAOsL,EAAmB,8CAA4CK,EAAAzM,OAAA,SAC/D,OAAAoM,QAAA,IAAAA,OAAA,EAAAA,EAAoB,CAAET,MAAAA,EAAO7G,MAAAA,EAAOrD,OAAAsD,KAAQ,wBAAA0H,EAAArM,OAAA,GAAAoM,EAAA,MANxCE,EAAAH,EAAXI,UACAC,EAAAL,EAAAK,QACAtD,EAAAiD,EAAAjD,MAAAuD,EAAAN,EACA7N,KAAQuG,QAAR,IAAA4H,EAAkB,CAAC,EAAAA,GAAX5H,MAMJ6H,GAAA,EAAchD,EAAAH,SAClB,0CACAnO,GAGIuR,EAAA,SAAA9P,QAAwB6N,GAAMhG,GAAO+G,cAAa,cACxDmB,GAA0B,EAAIjD,EAAAkD,UAAqC,MAAIC,EAAAxI,EAAAsI,EAAA,GAAhEG,EAAAD,EAAA,GAASE,EAAUF,EAAA,GAC1BG,GAAgC,EAAItD,EAAAkD,UAAS,GAACK,EAAA5I,EAAA2I,EAAA,GAAvCE,EAAAD,EAAA,GAAYE,EAAaF,EAAA,GAE1BG,EAA4C,SAACC,GAAA,MAC7B,oBAAbjR,EACLsN,EAAAJ,QAAAC,cAACnN,EAAAuB,EAAAA,EAAAA,EAAA,GAAAA,EAAA,CAEG+O,YAAAA,EACAjI,MAAAA,EACA6G,MAAAA,EACAlK,OAAAsD,GACGjH,IAED4P,GAAA,IACJC,MAAO,kBAAMH,EAAcD,EAAa,EAAC,KAG3C9Q,CAAA,EAGEsB,EAAiB,SAAjB6P,GAAA,IAAoBtS,EAAAsS,EAAAtS,SAAA,OACxByO,EAAAJ,QAAAC,cAAC/L,EAAA,CAAcpB,SAAUgR,GAAgBnS,EAAS,EA2CpD,OAxCA,EAAAyO,EAAA8D,YAAU,WACR,GAAKnB,IAAaE,GAA4B,oBAAV3H,EAApC,CAGA,IAAIC,EAA+B,KACnC,IACEA,EAAUD,EAAM8H,EAAA/O,EAAAA,EAAA,GACXF,GAAA,IACHD,cAAeE,IAEnB,CAAE,MAAO+P,GACPV,EACEhM,EACE,+CAAAnE,OACkC6H,EAAK,MAAA7H,OAAK8H,EAAM,KAClD+I,GAGN,CACA,OAAO,WACLxL,YAAW,WACT,IACyB,oBAAZ4C,IACTE,QAAQ4C,IAAI,UAAWlD,GACvBI,IAEJ,CAAE,MAAO6I,GACP3I,QAAQkE,MAAMyE,GACdX,EACEhM,EACE,mDAAAnE,OACoC6H,EAAK,MAAA7H,OAAK8H,EAAM,KACpDuE,GAGN,CACF,GACF,CAlCA,CAmCF,GAAG,CAACoD,EAAWE,EAASjB,EAAO5G,EAAQwI,IAEhCX,EACL7C,EAAAJ,QAAAC,cAAC6D,EAAA,CACCnE,MACEA,aAAiBxH,MACbwH,EACAlI,EACE,eACiB,kBAAVkI,EACHA,EAAA,yCAAArM,OACyCqM,GAC7CA,KAIR6D,EACFpD,EAAAJ,QAAAC,cAAC6D,EAAA,CAAcnE,MAAO6D,IACnBT,EAOH3C,EAAAJ,QAAAC,cAAC,MAAA5L,EAAA,CACC8M,GAAIiC,EACJvR,UAAWsR,GACP,CAAE,gBAAiBhI,EAAO,iBAAkBC,KAT/B,oBAAZoH,EACLpC,EAAAJ,QAAAC,cAACuC,EAAA,MAEDA,CASN,EAEAvL,EAAcoN,aAAe,CAC3BzC,kBAAAA,GEnJF,IAAA0C,EAAyCrF,EAAApG,EAAA,OCAzC0L,EAAkBtF,EAAApG,EAAA,OAIZ2L,EAAW,CACflT,QAAS,IAETsC,IAAK,IAELR,SAAU,WAAO,EAEjBH,UAAW,GAEXU,MAAO,SAAC8Q,EAAoB7D,GAAA,OAAuB1F,OAAOvH,MAAM8Q,EAAO7D,EAAI,EAE3E/M,UAAM,EAENjB,cAAU,EAEVmB,OAAQ,CACNC,SAAU,GACVC,OAAQ,WAAO,GAGjBC,cAAe,SAAAwQ,GAAA,IAAG/S,EAAA+S,EAAA/S,SAAA,OAChB4S,EAAAvE,QAAAC,cAAC/L,EAAA,CAAcpB,SAAU,kBAAMyR,EAAAvE,QAAAC,cAAAsE,EAAAvE,QAAA2E,SAAA,KAAE,oBAAiB,GAC/ChT,EACH,GAISH,GACX+S,EAAAvE,QAAM4E,cAAuCJ,GCLlCjN,GAA0B,SACrCtE,EACAX,EACAuS,GAAA,OAQA,OAAA5R,QAAA,IAAAA,OAAA,EAAAA,EACIqJ,QACA,SAACwI,EAAKC,GAAA,IAAAC,EAAA,SAAA1R,OAAAgL,EAECwG,GAAAxG,GACoB,QAAnB0G,EAAAD,EAAS/T,MAAMsB,UAAI,IAAA0S,OAAA,EAAnBA,EAAsBC,KAAI,SAACxS,GAAA,OAAA4B,EAAAA,EAAA,GAC1BsD,EAAY,CAAC,QAAS,QAAS,SAAU,QAAzCA,CAAkDoN,IACjC,kBAATtS,EAAoB,CAAEA,KAAAA,GAASA,EAAA,MACrC,IAAC,GAEZ,IAEDD,QAAO,SAAA0S,GAAA,IAASC,EAAAD,EAANE,KAAA,OACThO,EAAa+N,EAAW,OAAAN,QAAA,IAAAA,OAAA,EAAAA,EAASO,KAAI,IAEtC5S,QACC,SAAA6S,GAAA,IAAAC,EAAGC,EAAAF,EAAAE,KAAA,QACA,OAAAA,QAAA,IAAAA,GAAAA,EAAMC,WACPlO,EACEH,EAAO,OAAA0N,QAAA,IAAAA,OAAA,EAAAA,EAAShR,KAAM,4BACtB,OAAA0R,QAAA,IAAAA,GAAM,QAAND,EAAAC,EAAMzR,mBAAA,IAAAwR,OAAA,EAANA,EAAmBL,KAAI,SAAC7K,GAAA,MACkB,oBAAjC,OAAAyK,QAAA,IAAAA,OAAA,EAAAA,EAASY,qBACZ,OAAAZ,QAAA,IAAAA,OAAA,EAAAA,EAASY,oBAAoBrL,GAC7BA,CAAA,MACD,GACP,GACJ,EF7CS/H,GAAoB,SAApBqT,GAOiB,IAN5BpT,EAAAoT,EAAApT,KACAC,EAAAmT,EAAAnT,UACAO,EAAA4S,EAAA5S,SACA0P,EAAAkD,EAAAlD,QACA3Q,EAAA6T,EAAA7T,UACGsC,EAAAuO,EAAAgD,EAAAC,GAEGxE,GAAA,EAAKmD,EAAAsB,SACXC,GAAyC,EAAIvB,EAAA/S,YAAWC,IAAhDyB,EAAA4S,EAAA5S,UAAWY,EAAAgS,EAAAhS,KAASiS,EAAApD,EAAAmD,EAAAE,GAEtB/U,EAAQuG,GAAwBtE,EAAWX,EAAM,CACrDuB,KAAAA,IAGImS,GAAmB,OAAAzT,QAAA,IAAAA,OAAA,EAAAA,EAAYvB,KAAUA,EAE/C,OACEsT,EAAAtE,QAAAC,cAAAqE,EAAAtE,QAAA2E,SAAA,KACGqB,EAAiBf,KAAI,SAACxS,EAAMwT,GAAA,OAC3B3B,EAAAtE,QAAAC,cAAC/L,EAAA,CACC4G,IAAA,QAAAxH,OAAab,EAAK0I,MAAK,KAAA7H,OAAIb,EAAKqF,OAAM,KAAAxE,OAAI6N,EAAE,KAAA7N,OAAI2S,GAChDnT,SACsB,oBAAbA,EACH,SAACiR,GAAA,OACCO,EAAAtE,QAAAC,cAACnN,EAAAuB,EAAAA,EAAA,CAAS5B,KAAAA,GAAgB0B,GAAW4P,GAAY,EAEnDjR,GAAa,kBAAMwR,EAAAtE,QAAAC,cAAAqE,EAAAtE,QAAA2E,SAAA,KAAE,GAG3BL,EAAAtE,QAAAC,cAAChJ,EAAA5C,EAAAA,EAAA,GAAAA,EAAAA,EAAAA,EAAA,CACOpB,UAAAA,EAAWY,KAAAA,GAASpB,GAASqT,GAAiB3R,IAAA,IACpDrB,SACsB,oBAAbA,EACH,SAACiR,GAAA,OACCO,EAAAtE,QAAAC,cAACnN,EAAAuB,EAAAA,EAAA,CAAS5B,KAAAA,GAAgB0B,GAAW4P,GAAY,EAEnDjR,GAAa,kBAAMwR,EAAAtE,QAAAC,cAAAqE,EAAAtE,QAAA2E,SAAA,KAAE,EAE3BnC,QACqB,oBAAZA,EACH,kBAAM8B,EAAAtE,QAAAC,cAACuC,EAAA,CAAQ/P,KAAAA,GAAY,EAC3B+P,GAAY,kBAAM8B,EAAAtE,QAAAC,cAAAqE,EAAAtE,QAAA2E,SAAA,KAAE,EAE1B3C,MAAOvP,EAAKuP,MACZlK,OAAQrF,EAAKqF,OACbqD,MAAO1I,EAAK0I,MACZtJ,UAAAA,EACAsP,GAAA,QAAA7N,OAAYb,EAAK0I,MAAK,KAAA7H,OAAI6N,EAAE,KAAA7N,OAAI2S,MAGrC,IAGP,EAEA5T,GAAkBgS,aAAe,CAC/B9R,UAAW,SAACvB,GAAA,OAAUA,CAAA,EACtB8B,SAAU,kBAAMwR,EAAAtE,QAAAC,cAAC,WAAI,mDAAgD,EACrEuC,QAAS,kBAAM8B,EAAAtE,QAAAC,cAAC,WAAI,gBAAa,GG9EnC,IAAAiG,GAAkBjH,EAAApG,EAAA,OAClBsN,GAAyBtN,EAAA,MACzBuN,GAA4BvN,EAAA,MC2BfrB,GAAoC,SAC/CvE,EACAW,EACAiR,GAAA,OAQA,OAAA5R,QAAA,IAAAA,OAAA,EAAAA,EACIqJ,QACA,SAACwI,EAAKC,GAAA,IAAAsB,EAAA,SAAA/S,OAAAgL,EAECwG,GAAAxG,GACgB,QAAf+H,EAAAtB,EAAS/T,MAAMsV,cAAA,IAAAD,OAAA,EAAfA,EAAuBpB,KAAI,SAACvS,GAAA,OAAA2B,EAAAA,EAAA,GAC3BsD,EAAY,CAAC,QAAS,QAAS,SAAU,QAAzCA,CAAkDoN,IAChC,kBAAVrS,EAAqB,CAAEA,MAAAA,GAAUA,EAAA,MACvC,IAAC,GAEZ,IAEDF,QACC,SAAA+T,GAAA,IAAG7T,EAAA6T,EAAA7T,MAAayS,EAAAoB,EAANnB,KAAA,OACRzS,EAAcD,EAAOkB,IAAQwD,EAAa+N,EAAW,OAAAN,QAAA,IAAAA,OAAA,EAAAA,EAASO,KAAI,IAErE5S,QACC,SAAAgU,GAAA,IAAAC,EAAGlB,EAAAiB,EAAAjB,KAAA,QACA,OAAAA,QAAA,IAAAA,GAAAA,EAAMC,WACPlO,EACEH,EAAO,OAAA0N,QAAA,IAAAA,OAAA,EAAAA,EAAShR,KAAM,4BACtB,OAAA0R,QAAA,IAAAA,GAAM,QAANkB,EAAAlB,EAAMzR,mBAAA,IAAA2S,OAAA,EAANA,EAAmBxB,IACuB,oBAAjC,OAAAJ,QAAA,IAAAA,OAAA,EAAAA,EAASY,qBACZ,OAAAZ,QAAA,IAAAA,OAAA,EAAAA,EAASY,oBACT,SAACrL,GAAA,OAAMA,CAAA,KACR,GACP,GACJ,EDnCSlD,GAAsB,SAAtBwP,GAOmB,IAN9BtB,EAAAsB,EAAAtB,KACA5C,EAAAkE,EAAAlE,QACA1P,EAAA4T,EAAA5T,SACAM,EAAAsT,EAAAtT,SACAuT,EAAAD,EAAAzP,cACG9C,EAAAuO,EAAAgE,EAAAE,GAGGhT,GADA,EAAWwS,GAAAjT,eACIK,SACrBqT,GAKA,EAAIV,GAAArR,UACF,aACA,iBACE,8BAA+BX,EAC3BA,EAAMS,4BACNT,EAAMlB,SAAA,GACZ,CACE6T,QAAS,8BAA+B3S,IAE5C4S,EAAAF,EAbE9R,KAAM9B,OAAA,IAAA8T,EAAY,cAAe5S,EAAQA,EAAMlB,UAAY,GAAC8T,EAC5DC,EAAAH,EAAAG,UACA/D,EAAA4D,EAAA5D,QACAtD,EAAAkH,EAAAlH,MAWFsH,EACEzP,GAAkCvE,GAAa,GAAIW,EAAK,CACtDwR,KAAAA,EACAvR,KAAM,OAAAM,QAAA,IAAAA,OAAA,EAAAA,EAAON,QACT,GAJDqT,EAIEnM,EAAAkM,EAAA,GAJM,GAMTnD,EAAgB,SAACC,GAAA,MACD,oBAAbjR,EACLoT,GAAAlG,QAAAC,cAACnN,EAAAuB,EAAAA,EAAA,GAAaF,GAAW4P,IAEzBjR,CAAA,EAGJ,OAAOmQ,EACLiD,GAAAlG,QAAAC,cAAC6D,EAAA,CACCnE,MACEA,aAAiBxH,MACbwH,EACAlI,EACE,eACiB,kBAAVkI,EACHA,EAAA,yCAAArM,OACyCqM,GAC7CA,KAIRqH,EACiB,oBAAZxE,EACL0D,GAAAlG,QAAAC,cAACuC,EAAA,MAEDA,GAEC0E,GAAY,OAAAjU,QAAA,IAAAA,GAAAA,EAAWsC,OAC1B2Q,GAAAlG,QAAAC,cAAC6D,EAAA,CACCnE,MAAOlI,EACL,iFAAAnE,OAC6DM,MAG/DsT,EACFhB,GAAAlG,QAAAC,cAAC0G,EAAAtS,EAAAA,EAAA,GACKF,GAAA,IACJP,IAAAA,EACAoO,MAAOkF,EAASlF,MAChB7G,MAAO+L,EAAS/L,MAChBrD,OAAQoP,EAASpP,OACjB7E,UAAAA,EACAG,SAAAA,EACAoP,QAAAA,EACA1P,SAAAA,KAEA,IACN,EAEAoE,GAAoBmN,aAAe,CACjCpN,cAAAA,E","sources":["components/Layout/index.tsx","components/AppRouter.tsx","bootstrap.tsx","../../microfrontends/src/index.ts","../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../microfrontends/src/common/utils/assert.utils.ts","../../microfrontends/src/common/utils/errors.utils.ts","../../microfrontends/src/common/utils/sleep.utils.ts","../../microfrontends/src/common/utils/route.utils.ts","../../microfrontends/src/common/register/index.ts","../../microfrontends/src/components/ErrorBoundary/index.tsx","../../microfrontends/src/components/Microfrontend/index.tsx","../../microfrontends/src/components/Microfrontend/Microfrontend.service.ts","../../microfrontends/src/components/MicrofrontendSlot/index.tsx","../../microfrontends/src/contexts/index.tsx","../../microfrontends/src/components/MicrofrontendSlot/MicrofrontendSlot.utils.ts","../../microfrontends/src/components/MicrofrontendScreen/index.tsx","../../microfrontends/src/components/MicrofrontendScreen/MicrofrontendScreen.utils.ts"],"sourcesContent":["import {\n  MicrofrontendContext,\n  MicrofrontendSlot,\n  canMatchRoute,\n} from \"microfrontends\";\nimport \"./Layout.css\";\n\nimport React, { useContext } from \"react\";\n\nconst sortByPriority = (slots: MicrofrontendSlot[]) =>\n  slots.sort((a, b) => {\n    return (a.priority || 0) - (b.priority || 0);\n  });\n\nexport const Layout = () => {\n  const { homedir } = useContext(MicrofrontendContext);\n\n  return (\n    <>\n      <div className=\"new-post-button\">\n        <svg\n          className=\"verified\"\n          viewBox=\"0 -2 24 24\"\n          width=\"28\"\n          height=\"24\"\n          stroke=\"white\"\n        >\n          <path d=\"M23 3c-6.62-.1-10.38 2.421-13.05 6.03C7.29 12.61 6 17.331 6 22h2c0-1.007.07-2.012.19-3H12c4.1 0 7.48-3.082 7.94-7.054C22.79 10.147 23.17 6.359 23 3zm-7 8h-1.5v2H16c.63-.016 1.2-.08 1.72-.188C16.95 15.24 14.68 17 12 17H8.55c.57-2.512 1.57-4.851 3-6.78 2.16-2.912 5.29-4.911 9.45-5.187C20.95 8.079 19.9 11 16 11zM4 9V6H1V4h3V1h2v3h3v2H6v3H4z\"></path>\n        </svg>\n      </div>\n\n      <main className=\"flex flex-row px-32 py-2 gap-8\">\n        <nav className=\"flex flex-col self-start justify-between h-[90dvh] sticky top-0 px-4\">\n          <img\n            src=\"https://seeklogo.com/images/T/twitter-x-logo-101C7D2420-seeklogo.com.png?v=638258077300000000\"\n            alt=\"logo\"\n            className=\"flex self-start h-12 w-12 mx-4\"\n          />\n          <ul className=\"flex flex-col gap-4 list-none\">\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"nav:item\"\n              transform={sortByPriority}\n            />\n          </ul>\n          <MicrofrontendSlot className=\"contents\" name=\"nav:footer\" />\n        </nav>\n        <MicrofrontendSlot\n          className=\"contents\"\n          name=\"main:content\"\n          transform={(slots) => {\n            return slots.filter((slot) =>\n              \"route\" in slot &&\n              typeof slot.route === \"string\" &&\n              homedir &&\n              typeof homedir === \"string\"\n                ? canMatchRoute(homedir, slot.route)\n                : false\n            );\n          }}\n        />\n        <aside className=\"flex flex-col self-start right sticky top-[-224px] w-1/4\">\n          <div className=\"container-right\">\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"aside:item\"\n              transform={sortByPriority}\n            />\n            <div className=\"container-terms-of-service\">\n              <span>Terms of service</span>\n              <span>Privacy Policy</span>\n              <span>Cookie Policy</span>\n              <span>Accesibility</span>\n              <span>Ads info &nbsp;More ···</span>\n              <span>© 2023 X Corp.</span>\n            </div>\n          </div>\n        </aside>\n      </main>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { EventEmitter } from \"eventemitter3\";\nimport {\n  MicrofrontendContext,\n  MicrofrontendManifest,\n  ErrorBoundary,\n} from \"microfrontends\";\nimport { useQuery } from \"react-query\";\n\nimport { Layout } from \"./Layout/index.tsx\";\n\nconst eventBus = new EventEmitter();\n\nconst Fallback = () => (\n  <div>Something went wrong. This is a Fallback component.</div>\n);\n\nconst AppRoutes = ({ manifests }: { manifests: MicrofrontendManifest[] }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const homedir = `${process.env.PUBLIC_URL || \"\"}${location.pathname}`;\n\n  return (\n    <MicrofrontendContext.Provider\n      value={{\n        manifests,\n        navigate,\n        eventBus,\n        fetch,\n        homedir,\n        url: location.pathname,\n        user: { permissions: [] },\n        layout: {\n          navItems: [],\n          logout: () => {},\n        },\n        ErrorBoundary: (props) => (\n          <ErrorBoundary Fallback={Fallback} {...props} />\n        ),\n      }}\n    >\n      <Routes>\n        <Route path=\"*\" element={<Layout />} />\n      </Routes>\n    </MicrofrontendContext.Provider>\n  );\n};\n\ntype MicrofrontendRoutesProps = {\n  getMicrofrontendManifests: (\n    overrides: string[]\n  ) => Promise<MicrofrontendManifest[]>;\n};\n\nexport const AppRouter = ({\n  getMicrofrontendManifests,\n}: MicrofrontendRoutesProps) => {\n  const { data: manifests = [] } = useQuery(\"manifests\", () =>\n    getMicrofrontendManifests([])\n  );\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <AppRoutes manifests={manifests} />\n    </BrowserRouter>\n  );\n};\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nimport { AppRouter } from \"./components/index.ts\";\n\nconst queryClient = new QueryClient();\n\nfunction App({\n  getManifestsUri = process.env.NODE_ENV === \"production\"\n    ? `${process.env.PUBLIC_URL || \"\"}/microfrontend-manifests.json`\n    : process.env.REACT_APP_API_ROOT_URL || \"http://localhost:3333\",\n} = {}) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ReactQueryDevtools />\n      <AppRouter\n        getMicrofrontendManifests={async () =>\n          fetch(getManifestsUri).then((res) => res.json())\n        }\n      />\n    </QueryClientProvider>\n  );\n}\n\nconst root = createRoot(document.getElementById(\"root\")!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","export * from \"./common\";\nexport * from \"./components\";\nexport * from \"./contexts\";\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","import invariant from \"tiny-invariant\";\n\n/**\n * Asserts that the given condition is truthy, otherwise throws an error.\n */\nexport const assert = <TOptional>(\n  condition: TOptional,\n  message: string | (() => string)\n): NonNullable<TOptional> => {\n  invariant(\n    condition,\n    typeof message === \"string\"\n      ? `AssertError: ${message}`\n      : message || `AssertError: condition must be truthy`\n  );\n  const _condition = condition;\n  return _condition;\n};\n","/**\n *\n * Creates an error object with a name and a message.\n */\nexport const makeError = <TName extends string>(\n  name: TName,\n  message: string,\n  cause?: unknown\n) => ({\n  name,\n  message,\n  stack: new Error().stack,\n  cause,\n  toString: () => `${name}: ${message}`,\n});\n\n/**\n * Throws an error with the given name and message.\n */\nexport const throwError = <TName extends string>(\n  name: TName,\n  message: string\n) => {\n  throw makeError(name, message);\n};\n","export const sleep = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import { pathToRegexp } from \"path-to-regexp\";\n\n/**\n * Whether the given route can match the other route\n */\nexport const canMatchRoute = (route1: string, route2: string): boolean => {\n  const route1Regex = pathToRegexp(route1.replace(/\\/\\*+/g, \"/:params*\"), []);\n  const route2Regex = pathToRegexp(route2.replace(/\\/\\*+/g, \"/:params*\"), []);\n  return route1Regex.test(route2) || route2Regex.test(route1);\n};\n\n/**\n * Whether the given permission can match the other permission\n */\nexport const canMatchPermission = (\n  permission1: string,\n  permission2: string\n): boolean => {\n  const route1Regex = pathToRegexp(\n    permission1.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  const route2Regex = pathToRegexp(\n    permission2.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  return route1Regex.test(permission2) || route2Regex.test(permission1);\n};\n\n/**\n * Whether the given host can match the other host\n */\nexport const canMatchHost = (hostA?: string, hostB?: string): boolean => {\n  return !hostA || !hostB || hostA === hostB;\n};\n\ntype Permission = `${\"manage\" | \"read-only\"}:${string}`;\n\n/**\n * Whether the given user can match the given permissions\n */\nexport const canMatchPermissions = (\n  user: {\n    permissions: Permission[];\n  },\n  permissions: Permission[]\n): boolean => {\n  return permissions?.every((permission) => {\n    const [action, ...objectPaths] = permission.split(\":\");\n    const objectPath = objectPaths.join(\":\");\n    return user.permissions.some((p) => {\n      const [uAction, ...uObjectPaths] = p.split(\":\");\n      const uObjectPath = uObjectPaths.join(\":\");\n      const objectPathsMatching =\n        uObjectPath === objectPath ||\n        canMatchPermission(uObjectPath, objectPath);\n      const actionsMatching =\n        uAction === action || (action === \"read-only\" && uAction === \"manage\");\n      return objectPathsMatching && actionsMatching;\n    });\n  });\n};\n\nexport const selectProps =\n  <TKeys extends readonly string[]>(keys: TKeys) =>\n  <TObj extends { [key in TKeys[number]]: any }>(\n    obj: TObj\n  ): {\n    [key in TKeys[number]]: TObj extends Record<key, infer TValue>\n      ? TValue\n      : never;\n  } => {\n    return Object.fromEntries(\n      Object.entries(obj).filter(([key]: [any, any]) => keys.includes(key))\n    ) as Record<TKeys[number], any>;\n  };\n","import { assert, sleep } from \"../utils\";\nimport {\n  MicrofrontendController,\n  MountFn,\n  UnmountFn,\n} from \"../../components/Microfrontend/Microfrontend.types\";\n\nconst getWindow = () => {\n  const $window: Partial<Window> & { [key: string]: any } =\n    typeof window === \"undefined\" ? {} : window;\n  return $window;\n};\n\n/**\n *\n * @param {string} scope\n * @param {{ hasZeroInstances: () => boolean }} tracker\n */\nconst unloadMicrofrontendAssets = (\n  scope: string,\n  tracker: { hasZeroInstances: () => boolean }\n) => {\n  const mfName = `mf-${scope.toLocaleLowerCase()}-entry`;\n  const mfScript = document.getElementById(mfName);\n  if (!mfScript) {\n    return;\n  }\n  const src = assert(\n    mfScript.getAttribute(\"src\"),\n    `script #${mfName} must have attr [src]`\n  );\n  const lastSlash = src.lastIndexOf(\"/\");\n  const urlStart = src.slice(0, lastSlash);\n\n  const maxAttempts = 3;\n\n  async function attemptToRemoveAssets(attempt = 0): Promise<Element[]> {\n    const scripts = Array.from(document.querySelectorAll(\"head script\")).filter(\n      (script) => script.getAttribute(\"src\")?.startsWith(urlStart)\n    );\n    const links = Array.from(document.querySelectorAll(\"head link\")).filter(\n      (link) => link.getAttribute(\"href\")?.startsWith(urlStart)\n    );\n\n    if (links.length && tracker.hasZeroInstances()) {\n      console.log(\"Removed assets\", [...scripts, ...links]);\n      scripts.forEach((script) => {\n        script.remove();\n      });\n      links.forEach((link) => {\n        link.remove();\n      });\n      return [...scripts, ...links];\n    } else {\n      return sleep(100).then(() => {\n        if (attempt < maxAttempts) {\n          return attemptToRemoveAssets(attempt + 1);\n        }\n        return [];\n      });\n    }\n  }\n  return sleep(100).then(() => attemptToRemoveAssets());\n};\n\n/**\n * Keeps track of how many running instances of a Microfrontend there are.\n *\n * By tracking, we are able to unload the Microfrontend's assets when there are no more instances running.\n */\nconst instanceTracker = ($ctrl: MicrofrontendController) => {\n  return {\n    increment: () => {\n      $ctrl.instances++;\n    },\n    decrement: () => {\n      if ($ctrl.instances > 0) {\n        $ctrl.instances--;\n      }\n    },\n    hasZeroInstances: () => {\n      const $window = getWindow();\n      const scope = $window.$mfs?.[$ctrl.scope] as {\n        [key: string]: { instances: number };\n      };\n      return (\n        Object.values(\n          assert(scope, `window.$mfs.${$ctrl.scope} must exist`)\n        ).reduce((sum, scope) => sum + scope.instances, 0) === 0\n      );\n    },\n  };\n};\n\n/**\n * The Microfrontend Controller is the engine room for a Microfrontend.\n * It contains the `mount` and `unmount` functions, as well as other variables for managing the microfrontend.\n *\n * Usually, a Microfrontend's controller is located in `window.$mfs[scope][module]`\n *\n * If no controller exists for the scope<>module pair, then a new placeholder controller will be created in the appropriate location\n *\n */\nconst getMicrofrontendController = (\n  scope: string,\n  module: string\n): MicrofrontendController => {\n  if (typeof window === \"undefined\") {\n    console.warn(\n      \"Microfrontend cannot be registered without a global window scope\"\n    );\n    // @ts-ignore\n    return { mount: () => {}, unmount: () => {}, instances: 0 };\n  }\n  const $window = getWindow();\n  $window.$mfs = $window.$mfs || {};\n  $window.$mfs[scope] = $window.$mfs[scope] || {};\n  const $scope = $window.$mfs[scope];\n  if ($scope) {\n    $scope[module] = $scope[module] || {\n      mount: () => {\n        console.warn(`No ${scope} mount fn exists`);\n        return () => {};\n      },\n      unmount: () => console.warn(`No ${scope} unmount fn exists`),\n      instances: 0,\n      scope,\n      module,\n    };\n    return $scope?.[module]!;\n  }\n  console.warn(`No ${scope} scope exists in window.$mfs`);\n  return $scope?.[module]!;\n};\n\n/**\n * Registers a microfrontend's scope and module in the window, returning a controller\n */\nexport const register = (\n  scope: string,\n  module: string,\n  { mount, unmount }: { mount: MountFn; unmount: UnmountFn }\n): MicrofrontendController => {\n  const $ctrl = getMicrofrontendController(scope, module);\n  $ctrl.tracker = $ctrl.tracker || instanceTracker($ctrl);\n  const runUnmountFn = (unmount: () => () => void) => {\n    $ctrl.tracker?.decrement();\n    if ($ctrl.tracker?.hasZeroInstances()) {\n      unloadMicrofrontendAssets(scope, $ctrl.tracker);\n    }\n    return () => {\n      setTimeout(() => {\n        unmount()();\n      });\n    };\n  };\n  const getHTMLElement = (ref: HTMLElement | string) =>\n    ref instanceof HTMLElement ? ref : document.getElementById(ref);\n  $ctrl.mount = (containerRef, props) => {\n    $ctrl.tracker?.increment();\n    const unmount = assert(mount, \"mount fn must exist\")(containerRef, props);\n    const container = getHTMLElement(containerRef);\n    const eventBus = props?.eventBus;\n    eventBus?.emit(\"mf:mount\", {\n      container,\n      scope,\n      module,\n    });\n    return () => {\n      eventBus?.emit(\"mf:unmount\", {\n        container,\n        scope,\n        module,\n      });\n      return runUnmountFn(unmount);\n    };\n  };\n  $ctrl.unmount = (containerRef) => {\n    return runUnmountFn(() =>\n      assert(unmount, \"unmount fn must exist\")(containerRef)\n    );\n  };\n  return $ctrl;\n};\n","import React, { Component } from \"react\";\nimport { MicrofrontendErrorFallback } from \"./ErrorBoundary.types\";\n\ntype ErrorBoundaryState<TError> = {\n  error: TError | null;\n  errorInfo: any;\n};\n\ntype ErrorBoundaryProps<TProps, TError> = {\n  children: React.ReactNode;\n  Fallback: MicrofrontendErrorFallback<TProps, TError>;\n};\n\nexport class ErrorBoundary<\n  TError extends { message: string; cause?: any }\n> extends Component<\n  ErrorBoundaryProps<{}, TError>,\n  ErrorBoundaryState<TError>\n> {\n  constructor(props: ErrorBoundaryProps<{}, TError>) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error: Error & TError, errorInfo: any) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo && this.state.error) {\n      const error = this.state.error;\n      const cause = this.state.errorInfo;\n      if (error) {\n        error.cause = cause;\n      }\n      const Fallback = this.props.Fallback;\n      // Error path\n      return typeof Fallback === \"function\" ? (\n        <Fallback error={error} />\n      ) : (\n        Fallback\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import classNames from \"classnames/dedupe\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { makeError, assert } from \"../../common\";\nimport { loadMicrofrontend } from \"./Microfrontend.service\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\nimport { MicrofrontendManifest } from \"./Microfrontend.types\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\n\ntype MicrofrontendProps = {\n  scope: string;\n  module: string;\n  entry: string;\n  manifests: MicrofrontendManifest[];\n  url?: string;\n  id?: string;\n  className?: string | string[] | { [key: string]: boolean };\n  navigate?: (href: string) => any;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  loadMicrofrontend?: typeof loadMicrofrontend;\n};\n\nexport const Microfrontend = ({\n  id,\n  scope,\n  entry,\n  module,\n  Loading,\n  Fallback,\n  className,\n  loadMicrofrontend,\n  ...props\n}: MicrofrontendProps) => {\n  const {\n    isFetched: isMounted,\n    isError,\n    error,\n    data: { mount } = {},\n  } = useQuery(`microfrontend?entry=${entry}&module=${module}`, async () => {\n    assert(loadMicrofrontend, \"props.loadMicrofrontend must be a function\");\n    return loadMicrofrontend?.({ entry, scope, module });\n  });\n\n  const mfClassName = classNames(\n    \"microfrontend-container spin-when-empty\",\n    className\n  );\n\n  const containerId = `mount-${(id || scope).toLowerCase()}-container`;\n  const [mfError, setMFError] = useState<{ message: string } | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  const ErrorFallback: MicrofrontendErrorFallback = (errorProps) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback\n        {...{\n          containerId,\n          scope,\n          entry,\n          module,\n          ...props,\n        }}\n        {...errorProps}\n        retry={() => setRetryCount(retryCount + 1)}\n      />\n    ) : (\n      Fallback\n    );\n\n  const _ErrorBoundary = ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={ErrorFallback}>{children}</ErrorBoundary>\n  );\n\n  useEffect(() => {\n    if (!isMounted || isError || typeof mount !== \"function\") {\n      return;\n    }\n    let unmount: (() => void) | null = null;\n    try {\n      unmount = mount(containerId, {\n        ...props,\n        ErrorBoundary: _ErrorBoundary,\n      });\n    } catch (error) {\n      setMFError(\n        makeError(\n          \"MountError\",\n          `Could not mount Microfrontend: ${scope} (${module})`,\n          error\n        )\n      );\n    }\n    return () => {\n      setTimeout(() => {\n        try {\n          if (typeof unmount === \"function\") {\n            console.log(\"unmount\", scope);\n            unmount();\n          }\n        } catch (err) {\n          console.error(err);\n          setMFError(\n            makeError(\n              \"UnmountError\",\n              `Could not unmount Microfrontend: ${scope} (${module})`,\n              error\n            )\n          );\n        }\n      });\n    };\n  }, [isMounted, isError, entry, module, retryCount]);\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : mfError ? (\n    <ErrorFallback error={mfError} />\n  ) : !isMounted ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : (\n    <div\n      id={containerId}\n      className={mfClassName}\n      {...{ \"data-mf-scope\": scope, \"data-mf-module\": module }}\n    ></div>\n  );\n};\n\nMicrofrontend.defaultProps = {\n  loadMicrofrontend,\n};\n\nexport * from \"./Microfrontend.types\";\n","import { assert, sleep } from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendDefaultExport,\n} from \"./Microfrontend.types\";\n\ndeclare function __webpack_init_sharing__(scope: string): Promise<void>;\ndeclare const __webpack_share_scopes__: { default: any };\n\nexport function loadComponent<TScope extends string>(\n  scope: TScope,\n  module: string\n): () => Promise<MicrofrontendDefaultExport> {\n  return async () => {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    const $window = window as {\n      [key in TScope]: {\n        init: (webpackShareScope: any) => Promise<any>;\n        get: (module: string) => Promise<{ [key: string]: any }>;\n      };\n    };\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__(\"default\");\n\n    const container = $window[scope];\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await Promise.race([\n      container?.get(module),\n      sleep(300).then(() =>\n        Promise.reject(\n          new Error(\n            `No module ${module} was found in window.${scope} container`\n          )\n        )\n      ),\n    ]);\n    const Module =\n      typeof factory === \"function\"\n        ? factory()\n        : Promise.reject(\n            new Error(\n              `No module ${module} was found in window.${scope} container`\n            )\n          );\n    return Module;\n  };\n}\n\nexport const loadScript = (\n  id: string,\n  src: string\n): Promise<HTMLScriptElement> => {\n  return new Promise((resolve, reject) => {\n    if (document.querySelector(`script[id=\"${id}\"]`)) {\n      const script: HTMLScriptElement = assert(\n        document.querySelector(`script[id=\"${id}\"]`),\n        `script must exist: [id=${id}]`\n      );\n      return resolve(script);\n    }\n    const script = document.createElement(\"script\");\n    script.id = id;\n    script.src = src;\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = () => resolve(script);\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n};\n\nexport const loadMicrofrontend = async ({\n  entry,\n  scope,\n  module,\n}: Pick<MicrofrontendManifest, \"entry\" | \"scope\" | \"module\">) =>\n  loadScript(`mf-${scope.toLowerCase()}-entry`, entry)\n    .then(() => loadComponent(scope, module)())\n    .then((exported) => exported.default)\n    .then(({ mount, unmount }) => {\n      return {\n        mount,\n        unmount,\n      };\n    })\n    .catch((error: unknown) => Promise.reject(error));\n","import React, { useContext, useId } from \"react\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\nimport { MicrofrontendContext } from \"../../contexts\";\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsByName } from \"./MicrofrontendSlot.utils\";\nimport { MicrofrontendCustomSlotOptions } from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendSlot = MicrofrontendCustomSlotOptions & {\n  [key: string]: any;\n};\n\ntype MicrofrontendSlotProps = {\n  name: string;\n  transform?: (slots: MicrofrontendSlot[]) => MicrofrontendSlot[];\n  Fallback?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  Loading?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  className?: string | string[] | { [key: string]: boolean };\n};\n\nexport const MicrofrontendSlot = ({\n  name,\n  transform,\n  Fallback,\n  Loading,\n  className,\n  ...props\n}: MicrofrontendSlotProps) => {\n  const id = useId();\n  const { manifests, user, ...contextProps } = useContext(MicrofrontendContext);\n\n  const slots = getMicrofrontendsByName(manifests, name, {\n    user,\n  });\n\n  const transformedSlots = transform?.(slots) || slots;\n\n  return (\n    <>\n      {transformedSlots.map((slot, index) => (\n        <ErrorBoundary\n          key={`slot-${slot.scope}-${slot.module}-${id}-${index}`}\n          Fallback={\n            typeof Fallback === \"function\"\n              ? (errorProps) => (\n                  <Fallback slot={slot} {...props} {...errorProps} />\n                )\n              : Fallback || (() => <></>)\n          }\n        >\n          <Microfrontend\n            {...{ manifests, user, ...slot, ...contextProps, ...props }}\n            Fallback={\n              typeof Fallback === \"function\"\n                ? (errorProps) => (\n                    <Fallback slot={slot} {...props} {...errorProps} />\n                  )\n                : Fallback || (() => <></>)\n            }\n            Loading={\n              typeof Loading === \"function\"\n                ? () => <Loading slot={slot} />\n                : Loading || (() => <></>)\n            }\n            entry={slot.entry}\n            module={slot.module}\n            scope={slot.scope}\n            className={className}\n            id={`slot-${slot.scope}-${id}-${index}`}\n          />\n        </ErrorBoundary>\n      ))}\n    </>\n  );\n};\n\nMicrofrontendSlot.defaultProps = {\n  transform: (slots) => slots,\n  Fallback: () => <div>Sorry, there was an error loading this component</div>,\n  Loading: () => <div>...loading...</div>,\n} satisfies Partial<MicrofrontendSlotProps>;\n\nexport * from \"./MicrofrontendSlot.utils\";\n","import React from \"react\";\n\nimport { ErrorBoundary, MicrofrontendMountProps } from \"../components\";\n\nconst defaults = {\n  homedir: \"/\",\n\n  url: \"/\",\n\n  navigate: () => {},\n\n  manifests: [],\n\n  fetch: (input: RequestInfo, init?: RequestInit) => window.fetch(input, init),\n\n  user: undefined,\n\n  eventBus: undefined,\n\n  layout: {\n    navItems: [],\n    logout: () => {},\n  },\n\n  ErrorBoundary: ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={() => <>An Error occurred</>}>\n      {children}\n    </ErrorBoundary>\n  ),\n};\n\nexport const MicrofrontendContext =\n  React.createContext<MicrofrontendMountProps>(defaults);\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendCustomSlotOptions,\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingName = {\n  module: string;\n  entry: string;\n  scope: string;\n  [key: string]: any;\n};\n\n/**\n *\n * @param manifests\n * @param name\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns Slots matching the given name\n */\nexport const getMicrofrontendsByName = (\n  manifests: MicrofrontendManifest[],\n  name: string,\n  options?: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingName[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots[name]?.map((slot) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof slot === \"string\" ? { slot } : slot),\n          })) || []),\n        ] as MicrofrontendMatchingName[],\n      [] as MicrofrontendMatchingName[]\n    )\n    .filter(({ host: routeHost }: MicrofrontendCustomSlotOptions) =>\n      canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendCustomSlotOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map((p) =>\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission(p)\n              : p\n          ) || []\n        )\n    );\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { makeError } from \"../../common\";\n\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsMatchingLocation } from \"./MicrofrontendScreen.utils\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendMountProps,\n} from \"../Microfrontend/Microfrontend.types\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\n\ntype MicrofrontendScreenProps = {\n  host?: string;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  Microfrontend: typeof Microfrontend;\n} & Omit<MicrofrontendMountProps, \"manifests\" | \"ErrorBoundary\"> &\n  (\n    | {\n        getMicrofrontendManifests: () => Promise<MicrofrontendManifest[]>;\n      }\n    | {\n        manifests: MicrofrontendManifest[];\n      }\n  );\n\n/**\n * Route-level component, that loads Microfrontends based on\n * whether their manifest routes matches the current location.\n */\nexport const MicrofrontendScreen = ({\n  host,\n  Loading,\n  Fallback,\n  navigate,\n  Microfrontend,\n  ...props\n}: MicrofrontendScreenProps) => {\n  const location = useLocation();\n  const url = location.pathname;\n  const {\n    data: manifests = \"manifests\" in props ? props.manifests : [],\n    isLoading,\n    isError,\n    error,\n  } = useQuery(\n    \"manifests\",\n    () =>\n      \"getMicrofrontendManifests\" in props\n        ? props.getMicrofrontendManifests()\n        : props.manifests,\n    {\n      enabled: \"getMicrofrontendManifests\" in props,\n    }\n  );\n  const [targetMF] =\n    getMicrofrontendsMatchingLocation(manifests || [], url, {\n      host,\n      user: props?.user,\n    }) || [];\n\n  const ErrorFallback = (errorProps: { error: any }) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback {...props} {...errorProps} />\n    ) : (\n      Fallback\n    );\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : isLoading ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : !targetMF && manifests?.length ? (\n    <ErrorFallback\n      error={makeError(\n        \"NoRouteMatchFound\",\n        `No microfrontend was found capable of handling the route: ${url}`\n      )}\n    />\n  ) : targetMF ? (\n    <Microfrontend\n      {...props}\n      url={url}\n      entry={targetMF.entry}\n      scope={targetMF.scope}\n      module={targetMF.module}\n      manifests={manifests}\n      navigate={navigate}\n      Loading={Loading}\n      Fallback={Fallback}\n    />\n  ) : null;\n};\n\nMicrofrontendScreen.defaultProps = {\n  Microfrontend,\n};\n\nexport * from \"./MicrofrontendScreen.utils\";\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  canMatchRoute,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n  MicrofrontendRouteOptions,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingRoute = {\n  entry: string;\n  scope: string;\n  module: string;\n  route: string;\n  host?: string;\n};\n\n/**\n *\n * @param manifests\n * @param url\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns slots matching the current location url\n */\nexport const getMicrofrontendsMatchingLocation = (\n  manifests: MicrofrontendManifest[],\n  url: string,\n  options: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingRoute[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots.routes?.map((route) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof route === \"string\" ? { route } : route),\n          })) || []),\n        ] as MicrofrontendMatchingRoute[],\n      [] as MicrofrontendMatchingRoute[]\n    )\n    .filter(\n      ({ route, host: routeHost }: MicrofrontendRouteOptions) =>\n        canMatchRoute(route, url) && canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendRouteOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map(\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission\n              : (p) => p\n          ) || []\n        )\n    );\n"],"names":["sortByPriority","slots","sort","a","b","priority","Layout","homedir","useContext","MicrofrontendContext","_jsxs","_Fragment","children","_jsx","className","viewBox","width","height","stroke","d","src","alt","MicrofrontendSlot","name","transform","filter","slot","route","canMatchRoute","eventBus","EventEmitter","Fallback","AppRoutes","_ref","manifests","location","useLocation","navigate","useNavigate","concat","process","pathname","Provider","value","fetch","url","user","permissions","layout","navItems","logout","ErrorBoundary","props","_ErrorBoundary","_objectSpread","Routes","Route","path","element","AppRouter","_ref2","getMicrofrontendManifests","_useQuery$data","useQuery","data","BrowserRouter","basename","queryClient","QueryClient","App","_ref$getManifestsUri","arguments","length","undefined","getManifestsUri","QueryClientProvider","client","ReactQueryDevtools","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","abrupt","then","res","json","stop","createRoot","document","getElementById","render","React","src_exports","__export","Microfrontend","MicrofrontendScreen","assert","canMatchHost","canMatchPermission","canMatchPermissions","getMicrofrontendsByName","getMicrofrontendsMatchingLocation","makeError","register","selectProps","sleep","throwError","module","exports","prefix","condition","message","Error","invariant","cause","stack","toString","ms","Promise","resolve","setTimeout","import_path_to_regexp","require","route1","route2","route1Regex","pathToRegexp","replace","route2Regex","test","permission1","permission2","hostA","hostB","every","permission","_permission$split","split","_permission$split2","_toArray","action","objectPath","slice","join","some","p","_p$split","_p$split2","uAction","uObjectPath","keys","obj","Object","fromEntries","entries","key","_slicedToArray","includes","getWindow","window","scope","module2","_ref3","mount","unmount","$ctrl","console","warn","instances","$window","$mfs","$scope","getMicrofrontendController","tracker","increment","decrement","hasZeroInstances","_$window$$mfs","values","reduce","sum","scope2","instanceTracker","runUnmountFn","unmount2","_$ctrl$tracker","_$ctrl$tracker2","mfName","toLocaleLowerCase","mfScript","getAttribute","lastSlash","lastIndexOf","urlStart","maxAttempts","attemptToRemoveAssets","_attemptToRemoveAssets","apply","attempt","scripts","links","_args","Array","from","querySelectorAll","script","_script$getAttribute","startsWith","link","_link$getAttribute","log","_toConsumableArray","forEach","remove","unloadMicrofrontendAssets","containerRef","_$ctrl$tracker3","ref","container","HTMLElement","emit","import_react","__toESM","_import_react$Compone","_inherits","_ErrorBoundary2","_super","_createSuper","_this","_classCallCheck","call","state","error","errorInfo","_createClass","this","setState","default","createElement","Component","import_dedupe","import_react2","import_react_query","loadComponent","_callee2","factory","Module","_context2","__webpack_init_sharing__","init","__webpack_share_scopes__","race","get","reject","sent","loadScript","id","querySelector","script2","type","async","onload","onerror","head","appendChild","loadMicrofrontend","_ref6","_callee3","_ref5","entry","_context3","toLowerCase","exported","_ref7","catch","_x","_ref8","Loading","loadMicrofrontend2","_objectWithoutProperties","_excluded","_ref9","_callee4","_context4","isMounted","isFetched","isError","_ref9$data","mfClassName","containerId","_ref11","useState","_ref12","mfError","setMFError","_ref13","_ref14","retryCount","setRetryCount","ErrorFallback","errorProps","retry","_ref15","useEffect","error2","err","defaultProps","import_react4","import_react3","defaults","input","_ref16","Fragment","createContext","options","arr","manifest","_manifest$slots$name","map","_ref17","routeHost","host","_ref18","_auth$permissions","auth","required","transformPermission","_ref19","_excluded2","useId","_ref20","contextProps","_excluded3","transformedSlots","index","import_react5","import_react_query2","import_react_router_dom","_manifest$slots$route","routes","_ref21","_ref22","_auth$permissions2","_ref23","Microfrontend2","_excluded4","_ref24","enabled","_ref24$data","isLoading","_ref25","targetMF"],"sourceRoot":""}