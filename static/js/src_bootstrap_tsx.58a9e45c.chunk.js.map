{"version":3,"file":"static/js/src_bootstrap_tsx.58a9e45c.chunk.js","mappings":"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","sources":["components/Layout/index.tsx","components/AppRouter.tsx","bootstrap.tsx","../../microfrontends/src/index.ts","../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../microfrontends/src/common/utils/assert.utils.ts","../../microfrontends/src/common/utils/errors.utils.ts","../../microfrontends/src/common/utils/sleep.utils.ts","../../microfrontends/src/common/utils/route.utils.ts","../../microfrontends/src/common/register/index.ts","../../microfrontends/src/components/ErrorBoundary/index.tsx","../../microfrontends/src/components/Microfrontend/index.tsx","../../microfrontends/src/components/Microfrontend/Microfrontend.service.ts","../../microfrontends/src/components/MicrofrontendSlot/index.tsx","../../microfrontends/src/contexts/index.tsx","../../microfrontends/src/components/MicrofrontendSlot/MicrofrontendSlot.utils.ts","../../microfrontends/src/components/MicrofrontendScreen/index.tsx","../../microfrontends/src/components/MicrofrontendScreen/MicrofrontendScreen.utils.ts"],"sourcesContent":["import {\n  MicrofrontendContext,\n  MicrofrontendSlot,\n  canMatchRoute,\n} from \"microfrontends\";\nimport \"./Layout.css\";\n\nimport React, { useContext } from \"react\";\n\nconst sortByPriority = (slots: MicrofrontendSlot[]) =>\n  slots.sort((a, b) => {\n    return (a.priority || 0) - (b.priority || 0);\n  });\n\nexport const Layout = () => {\n  const { url } = useContext(MicrofrontendContext);\n\n  return (\n    <>\n      <div className=\"new-post-button\">\n        <svg\n          className=\"verified\"\n          viewBox=\"0 -2 24 24\"\n          width=\"28\"\n          height=\"24\"\n          stroke=\"white\"\n        >\n          <path d=\"M23 3c-6.62-.1-10.38 2.421-13.05 6.03C7.29 12.61 6 17.331 6 22h2c0-1.007.07-2.012.19-3H12c4.1 0 7.48-3.082 7.94-7.054C22.79 10.147 23.17 6.359 23 3zm-7 8h-1.5v2H16c.63-.016 1.2-.08 1.72-.188C16.95 15.24 14.68 17 12 17H8.55c.57-2.512 1.57-4.851 3-6.78 2.16-2.912 5.29-4.911 9.45-5.187C20.95 8.079 19.9 11 16 11zM4 9V6H1V4h3V1h2v3h3v2H6v3H4z\"></path>\n        </svg>\n      </div>\n\n      <main className=\"flex flex-row px-32 py-2 gap-8\">\n        <nav className=\"flex flex-col self-start justify-between h-[90dvh] sticky top-0 px-4\">\n          <img\n            src=\"https://seeklogo.com/images/T/twitter-x-logo-101C7D2420-seeklogo.com.png?v=638258077300000000\"\n            alt=\"logo\"\n            className=\"flex self-start h-12 w-12 mx-4\"\n          />\n          <ul className=\"flex flex-col gap-4 list-none\">\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"nav:item\"\n              transform={sortByPriority}\n            />\n          </ul>\n          <MicrofrontendSlot className=\"contents\" name=\"nav:footer\" />\n        </nav>\n        <MicrofrontendSlot\n          className=\"contents\"\n          name=\"main:content\"\n          transform={(slots) => {\n            return slots.filter((slot) => {\n              const route =\n                \"route\" in slot && typeof slot.route === \"string\"\n                  ? slot.route\n                  : null;\n              return route ? canMatchRoute(url, route) : false;\n            });\n          }}\n        />\n        <aside className=\"flex flex-col self-start right sticky top-[-224px] w-1/4\">\n          <div className=\"container-right\">\n            <MicrofrontendSlot\n              className=\"contents\"\n              name=\"aside:item\"\n              transform={sortByPriority}\n            />\n            <div className=\"container-terms-of-service\">\n              <span>Terms of service</span>\n              <span>Privacy Policy</span>\n              <span>Cookie Policy</span>\n              <span>Accesibility</span>\n              <span>Ads info &nbsp;More ···</span>\n              <span>© 2023 X Corp.</span>\n            </div>\n          </div>\n        </aside>\n      </main>\n    </>\n  );\n};\n","import React from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { EventEmitter } from \"eventemitter3\";\nimport {\n  MicrofrontendContext,\n  MicrofrontendManifest,\n  ErrorBoundary,\n} from \"microfrontends\";\nimport { useQuery } from \"react-query\";\n\nimport { Layout } from \"./Layout/index.tsx\";\n\nconst eventBus = new EventEmitter();\n\nconst Fallback = () => (\n  <div>Something went wrong. This is a Fallback component.</div>\n);\n\nconst AppRoutes = ({ manifests }: { manifests: MicrofrontendManifest[] }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const homedir = `${process.env.PUBLIC_URL || \"\"}${location.pathname}`;\n\n  return (\n    <MicrofrontendContext.Provider\n      value={{\n        manifests,\n        navigate,\n        eventBus,\n        fetch,\n        homedir,\n        url: location.pathname,\n        user: { permissions: [] },\n        layout: {\n          navItems: [],\n          logout: () => {},\n        },\n        ErrorBoundary: (props) => (\n          <ErrorBoundary Fallback={Fallback} {...props} />\n        ),\n      }}\n    >\n      <Routes>\n        <Route path=\"*\" element={<Layout />} />\n      </Routes>\n    </MicrofrontendContext.Provider>\n  );\n};\n\ntype MicrofrontendRoutesProps = {\n  getMicrofrontendManifests: (\n    overrides: string[]\n  ) => Promise<MicrofrontendManifest[]>;\n};\n\nexport const AppRouter = ({\n  getMicrofrontendManifests,\n}: MicrofrontendRoutesProps) => {\n  const { data: manifests = [] } = useQuery(\"manifests\", () =>\n    getMicrofrontendManifests([]).then((manifests) =>\n      overrideManifests(manifests)\n    )\n  );\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <AppRoutes manifests={manifests} />\n    </BrowserRouter>\n  );\n};\n\nasync function overrideManifests(\n  manifests: MicrofrontendManifest[]\n): Promise<MicrofrontendManifest[]> {\n  const allowedDomains = [/mykeels.github.io$/, /localhost:\\d{4,5}$/];\n  const { override_manifest = [] } = getSearchParams<\"override_manifest\">();\n\n  return await Promise.all(\n    override_manifest\n      .filter((url) =>\n        allowedDomains.some((rgx) => {\n          try {\n            const isAllowedDomain = rgx.test(new URL(url).origin);\n            if (!isAllowedDomain)\n              console.warn(\"Domain rejected for manifest override\", url);\n            return isAllowedDomain;\n          } catch {\n            return null;\n          }\n        })\n      )\n      .filter(Boolean)\n      .map((url) =>\n        fetch(url)\n          .then((res) => res.json())\n          .then((data) => {\n            const urlParams = new URL(url);\n            return {\n              ...data,\n              entry: `${urlParams.origin}${urlParams.pathname.replace(\n                \"/microfrontend-manifest.json\",\n                \"\"\n              )}/remoteEntry.js`,\n            };\n          })\n          .catch((err) => {\n            console.error(\"Error fetching manifest\", err);\n            return null;\n          })\n      )\n  )\n    .then((overrides: MicrofrontendManifest[]) => overrides.filter(Boolean))\n    .then((overrides) => {\n      return manifests\n        .map((manifest) => {\n          const override =\n            overrides.find((o) => o.scope === manifest.scope) || manifest;\n          return override;\n        })\n        .concat(\n          overrides.filter(\n            (o) => !manifests.map((m) => m.scope).includes(o.scope)\n          )\n        );\n    })\n    .then((manifests) => {\n      console.log(manifests);\n      return manifests;\n    });\n}\n\nfunction getSearchParams<TKeys extends string>(): {\n  [key in TKeys]: string[] | undefined;\n} {\n  const params = new URLSearchParams(\n    location.search ??\n      location.hash.split(\"?\")?.[location.hash.split(\"?\").length - 1]\n  );\n  const entries = {} as Record<any, string[]>;\n  for (let key of Array.from(params.keys())) {\n    entries[key] = params.getAll(key);\n  }\n  return entries as {\n    [key in TKeys]: string[] | undefined;\n  };\n}\n","import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\n\nimport { AppRouter } from \"./components/index.ts\";\n\nconst queryClient = new QueryClient();\n\nfunction App({\n  getManifestsUri = process.env.NODE_ENV === \"production\"\n    ? `${process.env.PUBLIC_URL || \"\"}/microfrontend-manifests.json`\n    : process.env.REACT_APP_API_ROOT_URL || \"http://localhost:3333\",\n} = {}) {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <ReactQueryDevtools />\n      <AppRouter\n        getMicrofrontendManifests={async () =>\n          fetch(getManifestsUri).then((res) => res.json())\n        }\n      />\n    </QueryClientProvider>\n  );\n}\n\nconst root = createRoot(document.getElementById(\"root\")!);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n","export * from \"./common\";\nexport * from \"./components\";\nexport * from \"./contexts\";\n","var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","import invariant from \"tiny-invariant\";\n\n/**\n * Asserts that the given condition is truthy, otherwise throws an error.\n */\nexport const assert = <TOptional>(\n  condition: TOptional,\n  message: string | (() => string)\n): NonNullable<TOptional> => {\n  invariant(\n    condition,\n    typeof message === \"string\"\n      ? `AssertError: ${message}`\n      : message || `AssertError: condition must be truthy`\n  );\n  const _condition = condition;\n  return _condition;\n};\n","/**\n *\n * Creates an error object with a name and a message.\n */\nexport const makeError = <TName extends string>(\n  name: TName,\n  message: string,\n  cause?: unknown\n) => ({\n  name,\n  message,\n  stack: new Error().stack,\n  cause,\n  toString: () => `${name}: ${message}`,\n});\n\n/**\n * Throws an error with the given name and message.\n */\nexport const throwError = <TName extends string>(\n  name: TName,\n  message: string\n) => {\n  throw makeError(name, message);\n};\n","export const sleep = (ms: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, ms);\n  });\n};\n","import { pathToRegexp } from \"path-to-regexp\";\n\n/**\n * Whether the given route can match the other route\n */\nexport const canMatchRoute = (route1: string, route2: string): boolean => {\n  const route1Regex = pathToRegexp(route1.replace(/\\/\\*+/g, \"/:params*\"), []);\n  const route2Regex = pathToRegexp(route2.replace(/\\/\\*+/g, \"/:params*\"), []);\n  return route1Regex.test(route2) || route2Regex.test(route1);\n};\n\n/**\n * Whether the given permission can match the other permission\n */\nexport const canMatchPermission = (\n  permission1: string,\n  permission2: string\n): boolean => {\n  const route1Regex = pathToRegexp(\n    permission1.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  const route2Regex = pathToRegexp(\n    permission2.replace(/\\/\\*\\*+/g, \"/:params*\").replace(/\\/\\*/g, \"/:params\"),\n    []\n  );\n  return route1Regex.test(permission2) || route2Regex.test(permission1);\n};\n\n/**\n * Whether the given host can match the other host\n */\nexport const canMatchHost = (hostA?: string, hostB?: string): boolean => {\n  return !hostA || !hostB || hostA === hostB;\n};\n\ntype Permission = `${\"manage\" | \"read-only\"}:${string}`;\n\n/**\n * Whether the given user can match the given permissions\n */\nexport const canMatchPermissions = (\n  user: {\n    permissions: Permission[];\n  },\n  permissions: Permission[]\n): boolean => {\n  return permissions?.every((permission) => {\n    const [action, ...objectPaths] = permission.split(\":\");\n    const objectPath = objectPaths.join(\":\");\n    return user.permissions.some((p) => {\n      const [uAction, ...uObjectPaths] = p.split(\":\");\n      const uObjectPath = uObjectPaths.join(\":\");\n      const objectPathsMatching =\n        uObjectPath === objectPath ||\n        canMatchPermission(uObjectPath, objectPath);\n      const actionsMatching =\n        uAction === action || (action === \"read-only\" && uAction === \"manage\");\n      return objectPathsMatching && actionsMatching;\n    });\n  });\n};\n\nexport const selectProps =\n  <TKeys extends readonly string[]>(keys: TKeys) =>\n  <TObj extends { [key in TKeys[number]]: any }>(\n    obj: TObj\n  ): {\n    [key in TKeys[number]]: TObj extends Record<key, infer TValue>\n      ? TValue\n      : never;\n  } => {\n    return Object.fromEntries(\n      Object.entries(obj).filter(([key]: [any, any]) => keys.includes(key))\n    ) as Record<TKeys[number], any>;\n  };\n","import { assert, sleep } from \"../utils\";\nimport {\n  MicrofrontendController,\n  MountFn,\n  UnmountFn,\n} from \"../../components/Microfrontend/Microfrontend.types\";\n\nconst getWindow = () => {\n  const $window: Partial<Window> & { [key: string]: any } =\n    typeof window === \"undefined\" ? {} : window;\n  return $window;\n};\n\n/**\n *\n * @param {string} scope\n * @param {{ hasZeroInstances: () => boolean }} tracker\n */\nconst unloadMicrofrontendAssets = (\n  scope: string,\n  tracker: { hasZeroInstances: () => boolean }\n) => {\n  const mfName = `mf-${scope.toLocaleLowerCase()}-entry`;\n  const mfScript = document.getElementById(mfName);\n  if (!mfScript) {\n    return;\n  }\n  const src = assert(\n    mfScript.getAttribute(\"src\"),\n    `script #${mfName} must have attr [src]`\n  );\n  const lastSlash = src.lastIndexOf(\"/\");\n  const urlStart = src.slice(0, lastSlash);\n\n  const maxAttempts = 3;\n\n  async function attemptToRemoveAssets(attempt = 0): Promise<Element[]> {\n    const scripts = Array.from(document.querySelectorAll(\"head script\")).filter(\n      (script) => script.getAttribute(\"src\")?.startsWith(urlStart)\n    );\n    const links = Array.from(document.querySelectorAll(\"head link\")).filter(\n      (link) => link.getAttribute(\"href\")?.startsWith(urlStart)\n    );\n\n    if (links.length && tracker.hasZeroInstances()) {\n      console.log(\"Removed assets\", [...scripts, ...links]);\n      scripts.forEach((script) => {\n        script.remove();\n      });\n      links.forEach((link) => {\n        link.remove();\n      });\n      return [...scripts, ...links];\n    } else {\n      return sleep(100).then(() => {\n        if (attempt < maxAttempts) {\n          return attemptToRemoveAssets(attempt + 1);\n        }\n        return [];\n      });\n    }\n  }\n  return sleep(100).then(() => attemptToRemoveAssets());\n};\n\n/**\n * Keeps track of how many running instances of a Microfrontend there are.\n *\n * By tracking, we are able to unload the Microfrontend's assets when there are no more instances running.\n */\nconst instanceTracker = ($ctrl: MicrofrontendController) => {\n  return {\n    increment: () => {\n      $ctrl.instances++;\n    },\n    decrement: () => {\n      if ($ctrl.instances > 0) {\n        $ctrl.instances--;\n      }\n    },\n    hasZeroInstances: () => {\n      const $window = getWindow();\n      const scope = $window.$mfs?.[$ctrl.scope] as {\n        [key: string]: { instances: number };\n      };\n      return (\n        Object.values(\n          assert(scope, `window.$mfs.${$ctrl.scope} must exist`)\n        ).reduce((sum, scope) => sum + scope.instances, 0) === 0\n      );\n    },\n  };\n};\n\n/**\n * The Microfrontend Controller is the engine room for a Microfrontend.\n * It contains the `mount` and `unmount` functions, as well as other variables for managing the microfrontend.\n *\n * Usually, a Microfrontend's controller is located in `window.$mfs[scope][module]`\n *\n * If no controller exists for the scope<>module pair, then a new placeholder controller will be created in the appropriate location\n *\n */\nconst getMicrofrontendController = (\n  scope: string,\n  module: string\n): MicrofrontendController => {\n  if (typeof window === \"undefined\") {\n    console.warn(\n      \"Microfrontend cannot be registered without a global window scope\"\n    );\n    // @ts-ignore\n    return { mount: () => {}, unmount: () => {}, instances: 0 };\n  }\n  const $window = getWindow();\n  $window.$mfs = $window.$mfs || {};\n  $window.$mfs[scope] = $window.$mfs[scope] || {};\n  const $scope = $window.$mfs[scope];\n  if ($scope) {\n    $scope[module] = $scope[module] || {\n      mount: () => {\n        console.warn(`No ${scope} mount fn exists`);\n        return () => {};\n      },\n      unmount: () => console.warn(`No ${scope} unmount fn exists`),\n      instances: 0,\n      scope,\n      module,\n    };\n    return $scope?.[module]!;\n  }\n  console.warn(`No ${scope} scope exists in window.$mfs`);\n  return $scope?.[module]!;\n};\n\n/**\n * Registers a microfrontend's scope and module in the window, returning a controller\n */\nexport const register = (\n  scope: string,\n  module: string,\n  { mount, unmount }: { mount: MountFn; unmount: UnmountFn }\n): MicrofrontendController => {\n  const $ctrl = getMicrofrontendController(scope, module);\n  $ctrl.tracker = $ctrl.tracker || instanceTracker($ctrl);\n  const runUnmountFn = (unmount: () => () => void) => {\n    $ctrl.tracker?.decrement();\n    if ($ctrl.tracker?.hasZeroInstances()) {\n      unloadMicrofrontendAssets(scope, $ctrl.tracker);\n    }\n    return () => {\n      setTimeout(() => {\n        unmount()();\n      });\n    };\n  };\n  const getHTMLElement = (ref: HTMLElement | string) =>\n    ref instanceof HTMLElement ? ref : document.getElementById(ref);\n  $ctrl.mount = (containerRef, props) => {\n    $ctrl.tracker?.increment();\n    const unmount = assert(mount, \"mount fn must exist\")(containerRef, props);\n    const container = getHTMLElement(containerRef);\n    const eventBus = props?.eventBus;\n    eventBus?.emit(\"mf:mount\", {\n      container,\n      scope,\n      module,\n    });\n    return () => {\n      eventBus?.emit(\"mf:unmount\", {\n        container,\n        scope,\n        module,\n      });\n      return runUnmountFn(unmount);\n    };\n  };\n  $ctrl.unmount = (containerRef) => {\n    return runUnmountFn(() =>\n      assert(unmount, \"unmount fn must exist\")(containerRef)\n    );\n  };\n  return $ctrl;\n};\n","import React, { Component } from \"react\";\nimport { MicrofrontendErrorFallback } from \"./ErrorBoundary.types\";\n\ntype ErrorBoundaryState<TError> = {\n  error: TError | null;\n  errorInfo: any;\n};\n\ntype ErrorBoundaryProps<TProps, TError> = {\n  children: React.ReactNode;\n  Fallback: MicrofrontendErrorFallback<TProps, TError>;\n};\n\nexport class ErrorBoundary<\n  TError extends { message: string; cause?: any }\n> extends Component<\n  ErrorBoundaryProps<{}, TError>,\n  ErrorBoundaryState<TError>\n> {\n  constructor(props: ErrorBoundaryProps<{}, TError>) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error: Error & TError, errorInfo: any) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n  }\n\n  render() {\n    if (this.state.errorInfo && this.state.error) {\n      const error = this.state.error;\n      const cause = this.state.errorInfo;\n      if (error) {\n        error.cause = cause;\n      }\n      const Fallback = this.props.Fallback;\n      // Error path\n      return typeof Fallback === \"function\" ? (\n        <Fallback error={error} />\n      ) : (\n        Fallback\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","import classNames from \"classnames/dedupe\";\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport { makeError, assert } from \"../../common\";\nimport { loadMicrofrontend } from \"./Microfrontend.service\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\nimport { MicrofrontendManifest } from \"./Microfrontend.types\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\n\ntype MicrofrontendProps = {\n  scope: string;\n  module: string;\n  entry: string;\n  manifests: MicrofrontendManifest[];\n  url?: string;\n  id?: string;\n  className?: string | string[] | { [key: string]: boolean };\n  navigate?: (href: string) => any;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  loadMicrofrontend?: typeof loadMicrofrontend;\n};\n\nexport const Microfrontend = ({\n  id,\n  scope,\n  entry,\n  module,\n  Loading,\n  Fallback,\n  className,\n  loadMicrofrontend,\n  ...props\n}: MicrofrontendProps) => {\n  const {\n    isFetched: isMounted,\n    isError,\n    error,\n    data: { mount } = {},\n  } = useQuery(`microfrontend?entry=${entry}&module=${module}`, async () => {\n    assert(loadMicrofrontend, \"props.loadMicrofrontend must be a function\");\n    return loadMicrofrontend?.({ entry, scope, module });\n  });\n\n  const mfClassName = classNames(\n    \"microfrontend-container spin-when-empty\",\n    className\n  );\n\n  const containerId = `mount-${(id || scope).toLowerCase()}-container`;\n  const [mfError, setMFError] = useState<{ message: string } | null>(null);\n  const [retryCount, setRetryCount] = useState(0);\n\n  const ErrorFallback: MicrofrontendErrorFallback = (errorProps) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback\n        {...{\n          containerId,\n          scope,\n          entry,\n          module,\n          ...props,\n        }}\n        {...errorProps}\n        retry={() => setRetryCount(retryCount + 1)}\n      />\n    ) : (\n      Fallback\n    );\n\n  const _ErrorBoundary = ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={ErrorFallback}>{children}</ErrorBoundary>\n  );\n\n  useEffect(() => {\n    if (!isMounted || isError || typeof mount !== \"function\") {\n      return;\n    }\n    let unmount: (() => void) | null = null;\n    try {\n      unmount = mount(containerId, {\n        ...props,\n        ErrorBoundary: _ErrorBoundary,\n      });\n    } catch (error) {\n      setMFError(\n        makeError(\n          \"MountError\",\n          `Could not mount Microfrontend: ${scope} (${module})`,\n          error\n        )\n      );\n    }\n    return () => {\n      setTimeout(() => {\n        try {\n          if (typeof unmount === \"function\") {\n            console.log(\"unmount\", scope);\n            unmount();\n          }\n        } catch (err) {\n          console.error(err);\n          setMFError(\n            makeError(\n              \"UnmountError\",\n              `Could not unmount Microfrontend: ${scope} (${module})`,\n              error\n            )\n          );\n        }\n      });\n    };\n  }, [isMounted, isError, entry, module, retryCount]);\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : mfError ? (\n    <ErrorFallback error={mfError} />\n  ) : !isMounted ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : (\n    <div\n      id={containerId}\n      className={mfClassName}\n      {...{ \"data-mf-scope\": scope, \"data-mf-module\": module }}\n    ></div>\n  );\n};\n\nMicrofrontend.defaultProps = {\n  loadMicrofrontend,\n};\n\nexport * from \"./Microfrontend.types\";\n","import { assert, sleep } from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendDefaultExport,\n} from \"./Microfrontend.types\";\n\ndeclare function __webpack_init_sharing__(scope: string): Promise<void>;\ndeclare const __webpack_share_scopes__: { default: any };\n\nexport function loadComponent<TScope extends string>(\n  scope: TScope,\n  module: string\n): () => Promise<MicrofrontendDefaultExport> {\n  return async () => {\n    if (typeof window === \"undefined\") {\n      return;\n    }\n    const $window = window as {\n      [key in TScope]: {\n        init: (webpackShareScope: any) => Promise<any>;\n        get: (module: string) => Promise<{ [key: string]: any }>;\n      };\n    };\n    // Initializes the share scope. This fills it with known provided modules from this build and all remotes\n    await __webpack_init_sharing__(\"default\");\n\n    const container = $window[scope];\n    // Initialize the container, it may provide shared modules\n    await container.init(__webpack_share_scopes__.default);\n    const factory = await Promise.race([\n      container?.get(module),\n      sleep(300).then(() =>\n        Promise.reject(\n          new Error(\n            `No module ${module} was found in window.${scope} container`\n          )\n        )\n      ),\n    ]);\n    const Module =\n      typeof factory === \"function\"\n        ? factory()\n        : Promise.reject(\n            new Error(\n              `No module ${module} was found in window.${scope} container`\n            )\n          );\n    return Module;\n  };\n}\n\nexport const loadScript = (\n  id: string,\n  src: string\n): Promise<HTMLScriptElement> => {\n  return new Promise((resolve, reject) => {\n    if (document.querySelector(`script[id=\"${id}\"]`)) {\n      const script: HTMLScriptElement = assert(\n        document.querySelector(`script[id=\"${id}\"]`),\n        `script must exist: [id=${id}]`\n      );\n      return resolve(script);\n    }\n    const script = document.createElement(\"script\");\n    script.id = id;\n    script.src = src;\n    script.type = \"text/javascript\";\n    script.async = true;\n    script.onload = () => resolve(script);\n    script.onerror = reject;\n    document.head.appendChild(script);\n  });\n};\n\nexport const loadMicrofrontend = async ({\n  entry,\n  scope,\n  module,\n}: Pick<MicrofrontendManifest, \"entry\" | \"scope\" | \"module\">) =>\n  loadScript(`mf-${scope.toLowerCase()}-entry`, entry)\n    .then(() => loadComponent(scope, module)())\n    .then((exported) => exported.default)\n    .then(({ mount, unmount }) => {\n      return {\n        mount,\n        unmount,\n      };\n    })\n    .catch((error: unknown) => Promise.reject(error));\n","import React, { useContext, useId } from \"react\";\nimport { ErrorBoundary } from \"../ErrorBoundary\";\nimport { MicrofrontendContext } from \"../../contexts\";\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsByName } from \"./MicrofrontendSlot.utils\";\nimport { MicrofrontendCustomSlotOptions } from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendSlot = MicrofrontendCustomSlotOptions & {\n  [key: string]: any;\n};\n\ntype MicrofrontendSlotProps = {\n  name: string;\n  transform?: (slots: MicrofrontendSlot[]) => MicrofrontendSlot[];\n  Fallback?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  Loading?: React.ComponentType<{ slot?: MicrofrontendSlot }>;\n  className?: string | string[] | { [key: string]: boolean };\n};\n\nexport const MicrofrontendSlot = ({\n  name,\n  transform,\n  Fallback,\n  Loading,\n  className,\n  ...props\n}: MicrofrontendSlotProps) => {\n  const id = useId();\n  const { manifests, user, ...contextProps } = useContext(MicrofrontendContext);\n\n  const slots = getMicrofrontendsByName(manifests, name, {\n    user,\n  });\n\n  const transformedSlots = transform?.(slots) || slots;\n\n  return (\n    <>\n      {transformedSlots.map((slot, index) => (\n        <ErrorBoundary\n          key={`slot-${slot.scope}-${slot.module}-${id}-${index}`}\n          Fallback={\n            typeof Fallback === \"function\"\n              ? (errorProps) => (\n                  <Fallback slot={slot} {...props} {...errorProps} />\n                )\n              : Fallback || (() => <></>)\n          }\n        >\n          <Microfrontend\n            {...{ manifests, user, ...slot, ...contextProps, ...props }}\n            Fallback={\n              typeof Fallback === \"function\"\n                ? (errorProps) => (\n                    <Fallback slot={slot} {...props} {...errorProps} />\n                  )\n                : Fallback || (() => <></>)\n            }\n            Loading={\n              typeof Loading === \"function\"\n                ? () => <Loading slot={slot} />\n                : Loading || (() => <></>)\n            }\n            entry={slot.entry}\n            module={slot.module}\n            scope={slot.scope}\n            className={className}\n            id={`slot-${slot.scope}-${id}-${index}`}\n          />\n        </ErrorBoundary>\n      ))}\n    </>\n  );\n};\n\nMicrofrontendSlot.defaultProps = {\n  transform: (slots) => slots,\n  Fallback: () => <div>Sorry, there was an error loading this component</div>,\n  Loading: () => <div>...loading...</div>,\n} satisfies Partial<MicrofrontendSlotProps>;\n\nexport * from \"./MicrofrontendSlot.utils\";\n","import React from \"react\";\n\nimport { ErrorBoundary, MicrofrontendMountProps } from \"../components\";\n\nconst defaults = {\n  homedir: \"/\",\n\n  url: \"/\",\n\n  navigate: () => {},\n\n  manifests: [],\n\n  fetch: (input: RequestInfo, init?: RequestInit) => window.fetch(input, init),\n\n  user: undefined,\n\n  eventBus: undefined,\n\n  layout: {\n    navItems: [],\n    logout: () => {},\n  },\n\n  ErrorBoundary: ({ children }: { children: React.ReactElement }) => (\n    <ErrorBoundary Fallback={() => <>An Error occurred</>}>\n      {children}\n    </ErrorBoundary>\n  ),\n};\n\nexport const MicrofrontendContext =\n  React.createContext<MicrofrontendMountProps>(defaults);\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendCustomSlotOptions,\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingName = {\n  module: string;\n  entry: string;\n  scope: string;\n  [key: string]: any;\n};\n\n/**\n *\n * @param manifests\n * @param name\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns Slots matching the given name\n */\nexport const getMicrofrontendsByName = (\n  manifests: MicrofrontendManifest[],\n  name: string,\n  options?: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingName[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots[name]?.map((slot) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof slot === \"string\" ? { slot } : slot),\n          })) || []),\n        ] as MicrofrontendMatchingName[],\n      [] as MicrofrontendMatchingName[]\n    )\n    .filter(({ host: routeHost }: MicrofrontendCustomSlotOptions) =>\n      canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendCustomSlotOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map((p) =>\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission(p)\n              : p\n          ) || []\n        )\n    );\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { useLocation } from \"react-router-dom\";\nimport { makeError } from \"../../common\";\n\nimport { Microfrontend } from \"../Microfrontend\";\nimport { getMicrofrontendsMatchingLocation } from \"./MicrofrontendScreen.utils\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendMountProps,\n} from \"../Microfrontend/Microfrontend.types\";\nimport { MicrofrontendErrorFallback } from \"../ErrorBoundary/ErrorBoundary.types\";\n\ntype MicrofrontendScreenProps = {\n  host?: string;\n  Loading: React.ComponentType;\n  Fallback: MicrofrontendErrorFallback;\n  Microfrontend: typeof Microfrontend;\n} & Omit<MicrofrontendMountProps, \"manifests\" | \"ErrorBoundary\"> &\n  (\n    | {\n        getMicrofrontendManifests: () => Promise<MicrofrontendManifest[]>;\n      }\n    | {\n        manifests: MicrofrontendManifest[];\n      }\n  );\n\n/**\n * Route-level component, that loads Microfrontends based on\n * whether their manifest routes matches the current location.\n */\nexport const MicrofrontendScreen = ({\n  host,\n  Loading,\n  Fallback,\n  navigate,\n  Microfrontend,\n  ...props\n}: MicrofrontendScreenProps) => {\n  const location = useLocation();\n  const url = location.pathname;\n  const {\n    data: manifests = \"manifests\" in props ? props.manifests : [],\n    isLoading,\n    isError,\n    error,\n  } = useQuery(\n    \"manifests\",\n    () =>\n      \"getMicrofrontendManifests\" in props\n        ? props.getMicrofrontendManifests()\n        : props.manifests,\n    {\n      enabled: \"getMicrofrontendManifests\" in props,\n    }\n  );\n  const [targetMF] =\n    getMicrofrontendsMatchingLocation(manifests || [], url, {\n      host,\n      user: props?.user,\n    }) || [];\n\n  const ErrorFallback = (errorProps: { error: any }) =>\n    typeof Fallback === \"function\" ? (\n      <Fallback {...props} {...errorProps} />\n    ) : (\n      Fallback\n    );\n\n  return isError ? (\n    <ErrorFallback\n      error={\n        error instanceof Error\n          ? error\n          : makeError(\n              \"UnknownError\",\n              typeof error === \"string\"\n                ? error\n                : `An error occurred in a microfrontend: ${error}`,\n              error\n            )\n      }\n    />\n  ) : isLoading ? (\n    typeof Loading === \"function\" ? (\n      <Loading />\n    ) : (\n      Loading\n    )\n  ) : !targetMF && manifests?.length ? (\n    <ErrorFallback\n      error={makeError(\n        \"NoRouteMatchFound\",\n        `No microfrontend was found capable of handling the route: ${url}`\n      )}\n    />\n  ) : targetMF ? (\n    <Microfrontend\n      {...props}\n      url={url}\n      entry={targetMF.entry}\n      scope={targetMF.scope}\n      module={targetMF.module}\n      manifests={manifests}\n      navigate={navigate}\n      Loading={Loading}\n      Fallback={Fallback}\n    />\n  ) : null;\n};\n\nMicrofrontendScreen.defaultProps = {\n  Microfrontend,\n};\n\nexport * from \"./MicrofrontendScreen.utils\";\n","import {\n  assert,\n  canMatchHost,\n  canMatchPermissions,\n  canMatchRoute,\n  selectProps,\n} from \"../../common\";\nimport {\n  MicrofrontendManifest,\n  MicrofrontendPermission,\n  MicrofrontendRouteOptions,\n} from \"../Microfrontend/Microfrontend.types\";\n\ntype MicrofrontendMatchingRoute = {\n  entry: string;\n  scope: string;\n  module: string;\n  route: string;\n  host?: string;\n};\n\n/**\n *\n * @param manifests\n * @param url\n * @param options\n * @param options.transformPermission Use this to replace keywords in permissions such as :companyAccountId or :userId\n * @returns slots matching the current location url\n */\nexport const getMicrofrontendsMatchingLocation = (\n  manifests: MicrofrontendManifest[],\n  url: string,\n  options: {\n    host?: string;\n    user?: { permissions: MicrofrontendPermission[] };\n    transformPermission?: (\n      permission: MicrofrontendPermission\n    ) => MicrofrontendPermission;\n  }\n): MicrofrontendMatchingRoute[] =>\n  manifests\n    ?.reduce(\n      (arr, manifest) =>\n        [\n          ...arr,\n          ...(manifest.slots.routes?.map((route) => ({\n            ...selectProps([\"entry\", \"scope\", \"module\", \"auth\"])(manifest),\n            ...(typeof route === \"string\" ? { route } : route),\n          })) || []),\n        ] as MicrofrontendMatchingRoute[],\n      [] as MicrofrontendMatchingRoute[]\n    )\n    .filter(\n      ({ route, host: routeHost }: MicrofrontendRouteOptions) =>\n        canMatchRoute(route, url) && canMatchHost(routeHost, options?.host)\n    )\n    .filter(\n      ({ auth }: MicrofrontendRouteOptions) =>\n        !auth?.required ||\n        canMatchPermissions(\n          assert(options?.user, \"options.user must exist\"),\n          auth?.permissions?.map(\n            typeof options?.transformPermission === \"function\"\n              ? options?.transformPermission\n              : (p) => p\n          ) || []\n        )\n    );\n"],"names":["sortByPriority","slots","sort","a","b","priority","Layout","url","useContext","MicrofrontendContext","_jsxs","_Fragment","children","_jsx","className","viewBox","width","height","stroke","d","src","alt","MicrofrontendSlot","name","transform","filter","slot","route","canMatchRoute","eventBus","EventEmitter","Fallback","AppRoutes","_ref","manifests","location","useLocation","navigate","useNavigate","homedir","concat","process","pathname","Provider","value","fetch","user","permissions","layout","navItems","logout","ErrorBoundary","props","_ErrorBoundary","_objectSpread","Routes","Route","path","element","AppRouter","_ref2","getMicrofrontendManifests","_useQuery","useQuery","then","_x","_overrideManifests","apply","arguments","overrideManifests","_useQuery$data","data","BrowserRouter","basename","_asyncToGenerator","_regeneratorRuntime","mark","_callee","allowedDomains","_getSearchParams","_getSearchParams$over","override_manifest","wrap","_context","prev","next","getSearchParams","Promise","all","some","rgx","isAllowedDomain","test","URL","origin","console","warn","_unused","Boolean","map","res","json","urlParams","entry","replace","catch","err","error","overrides","manifest","find","o","scope","m","includes","log","abrupt","sent","stop","_location$search","_location$hash$split","params","URLSearchParams","search","hash","split","length","entries","_i","_Array$from","Array","from","keys","key","getAll","queryClient","QueryClient","App","_ref$getManifestsUri","undefined","getManifestsUri","QueryClientProvider","client","ReactQueryDevtools","createRoot","document","getElementById","render","React","src_exports","__export","Microfrontend","MicrofrontendScreen","assert","canMatchHost","canMatchPermission","canMatchPermissions","getMicrofrontendsByName","getMicrofrontendsMatchingLocation","makeError","register","selectProps","sleep","throwError","module","exports","prefix","condition","message","Error","invariant","cause","stack","toString","ms","resolve","setTimeout","import_path_to_regexp","require","route1","route2","route1Regex","pathToRegexp","route2Regex","permission1","permission2","hostA","hostB","every","permission","_permission$split","_permission$split2","_toArray","action","objectPath","slice","join","p","_p$split","_p$split2","uAction","uObjectPath","obj","Object","fromEntries","_slicedToArray","getWindow","window","module2","_ref3","mount","unmount","$ctrl","instances","$window","$mfs","$scope","getMicrofrontendController","tracker","increment","decrement","hasZeroInstances","_$window$$mfs","values","reduce","sum","scope2","instanceTracker","runUnmountFn","unmount2","_$ctrl$tracker","_$ctrl$tracker2","mfName","toLocaleLowerCase","mfScript","getAttribute","lastSlash","lastIndexOf","urlStart","maxAttempts","attemptToRemoveAssets","_attemptToRemoveAssets","attempt","scripts","links","_args","querySelectorAll","script","_script$getAttribute","startsWith","link","_link$getAttribute","_toConsumableArray","forEach","remove","unloadMicrofrontendAssets","containerRef","_$ctrl$tracker3","ref","container","HTMLElement","emit","import_react","__toESM","_import_react$Compone","_inherits","_ErrorBoundary2","_super","_createSuper","_this","_classCallCheck","call","state","errorInfo","_createClass","this","setState","default","createElement","Component","import_dedupe","import_react2","import_react_query","loadComponent","_callee2","factory","Module","_context2","__webpack_init_sharing__","init","__webpack_share_scopes__","race","get","reject","loadScript","id","querySelector","script2","type","async","onload","onerror","head","appendChild","loadMicrofrontend","_ref6","_callee3","_ref5","_context3","toLowerCase","exported","_ref7","_ref8","Loading","loadMicrofrontend2","_objectWithoutProperties","_excluded","_ref9","_callee4","_context4","isMounted","isFetched","isError","_ref9$data","mfClassName","containerId","_ref11","useState","_ref12","mfError","setMFError","_ref13","_ref14","retryCount","setRetryCount","ErrorFallback","errorProps","retry","_ref15","useEffect","error2","defaultProps","import_react4","import_react3","defaults","input","_ref16","Fragment","createContext","options","arr","_manifest$slots$name","_ref17","routeHost","host","_ref18","_auth$permissions","auth","required","transformPermission","_ref19","_excluded2","useId","_ref20","contextProps","_excluded3","transformedSlots","index","import_react5","import_react_query2","import_react_router_dom","_manifest$slots$route","routes","_ref21","_ref22","_auth$permissions2","_ref23","Microfrontend2","_excluded4","_ref24","enabled","_ref24$data","isLoading","_ref25","targetMF"],"sourceRoot":""}