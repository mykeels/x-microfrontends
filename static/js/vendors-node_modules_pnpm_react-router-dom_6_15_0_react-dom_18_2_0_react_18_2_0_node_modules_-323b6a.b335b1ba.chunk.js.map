{"version":3,"file":"static/js/vendors-node_modules_pnpm_react-router-dom_6_15_0_react-dom_18_2_0_react_18_2_0_node_modules_-323b6a.b335b1ba.chunk.js","mappings":"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","sources":["../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/createClass.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../node_modules/.pnpm/@remix-run+router@1.8.0/node_modules/@remix-run/router/history.ts","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/construct.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../../node_modules/.pnpm/@remix-run+router@1.8.0/node_modules/@remix-run/router/utils.ts","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/toArray.js","../../node_modules/.pnpm/@remix-run+router@1.8.0/node_modules/@remix-run/router/router.ts","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/lib/context.ts","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/lib/hooks.tsx","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/lib/components.tsx","../../node_modules/.pnpm/react-router@6.15.0_react@18.2.0/node_modules/react-router/index.ts","../../node_modules/.pnpm/react-router-dom@6.15.0_react-dom@18.2.0_react@18.2.0/node_modules/react-router-dom/dom.ts","../../node_modules/.pnpm/react-router-dom@6.15.0_react-dom@18.2.0_react@18.2.0/node_modules/react-router-dom/index.tsx","../../node_modules/.pnpm/@babel+runtime@7.22.11/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js"],"sourcesContent":["export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: any;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. May be either a URL or the pieces of a\n * URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import type { Location, Path, To } from \"./history\";\nimport { warning, invariant, parsePath } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs {\n  request: Request;\n  params: Params;\n  context?: any;\n}\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs extends DataFunctionArgs {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction {\n  (args: LoaderFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction {\n  (args: ActionFunctionArgs): Promise<DataFunctionValue> | DataFunctionValue;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: {\n    currentUrl: URL;\n    currentParams: AgnosticDataRouteMatch[\"params\"];\n    nextUrl: URL;\n    nextParams: AgnosticDataRouteMatch[\"params\"];\n    formMethod?: Submission[\"formMethod\"];\n    formAction?: Submission[\"formAction\"];\n    formEncType?: Submission[\"formEncType\"];\n    text?: Submission[\"text\"];\n    formData?: Submission[\"formData\"];\n    json?: Submission[\"json\"];\n    actionResult?: DataResult;\n    defaultShouldRevalidate: boolean;\n  }): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explodes _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponse {\n  status: number;\n  statusText: string;\n  data: any;\n  error?: Error;\n  internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  DataResult,\n  DeferredData,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  DeferredResult,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  DetectErrorBoundaryFunction,\n  RedirectResult,\n  RouteData,\n  AgnosticRouteObject,\n  Submission,\n  SuccessResult,\n  AgnosticRouteMatch,\n  ShouldRevalidateFunction,\n  RouteManifest,\n  ImmutableRouteKey,\n  ActionFunction,\n  LoaderFunction,\n  V7_MutationFormMethod,\n  V7_FormMethod,\n  HTMLFormMethod,\n  MutationFormMethod,\n  MapRoutePropertiesFunction,\n} from \"./utils\";\nimport {\n  ErrorResponse,\n  ResultType,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\ninterface UseMatchesMatch {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: unknown;\n  handle: unknown;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UseMatchesMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n    \" _hasFetcherDoneAnything \"?: boolean;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers,\n    });\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponse;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          submission,\n          isFetchActionRedirect: true,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      replace,\n      isFetchActionRedirect,\n    }: {\n      submission?: Submission;\n      replace?: boolean;\n      isFetchActionRedirect?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(\n      state.location,\n      redirect.location,\n      // TODO: This can be removed once we get rid of useTransition in Remix v2\n      {\n        _isRedirect: true,\n        ...(isFetchActionRedirect ? { _isFetchActionRedirect: true } : {}),\n      }\n    );\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let activeSubmission =\n      submission || getSubmissionFromNavigation(state.navigation);\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else if (isFetchActionRedirect) {\n      // For a fetch action redirect, we kick off a new loading navigation\n      // without the fetcher submission, but we send it along for shouldRevalidate\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation: getLoadingNavigation(redirectLocation),\n        fetcherSubmission: activeSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a submission, we will preserve it through the redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        activeSubmission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => createUseMatchesMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(`${method}() call aborted`);\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(`${method}() call aborted`);\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponse;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: Parameters<ShouldRevalidateFunction>[0]\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let values = await Promise.all([\n          runHandler(handler),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponse(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponse(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\n// Note: This should match the format exported by useMatches, so if you change\n// this please also change that :)  Eventually we'll DRY this up\nfunction createUseMatchesMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UseMatchesMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id] as unknown,\n    handle: route.handle as unknown,\n  };\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n      \" _hasFetcherDoneAnything \": true,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n    \" _hasFetcherDoneAnything \": true,\n  };\n  return fetcher;\n}\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticRouteMatch,\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  History,\n  Location,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n  LazyRouteFunction,\n} from \"@remix-run/router\";\nimport type { Action as NavigationType } from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  IDLE_BLOCKER,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n  DataRouteMatch,\n} from \"./context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n  AwaitContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches() {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () =>\n      matches.map((match) => {\n        let { pathname, params } = match;\n        // Note: This structure matches that created by createUseMatchesMatch\n        // in the @remix-run/router , so if you change this please also change\n        // that :)  Eventually we'll DRY this up\n        return {\n          id: match.route.id,\n          pathname,\n          params,\n          data: loaderData[match.route.id] as unknown,\n          handle: match.route.handle as unknown,\n        };\n      }),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import * as React from \"react\";\nimport type {\n  TrackedPromise,\n  InitialEntry,\n  Location,\n  MemoryHistory,\n  Router as RemixRouter,\n  To,\n  LazyRouteFunction,\n  RelativeRoutingType,\n  RouterState,\n} from \"@remix-run/router\";\nimport {\n  Action as NavigationType,\n  AbortedDeferredError,\n  createMemoryHistory,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  RouteMatch,\n  RouteObject,\n  Navigator,\n  NonIndexRouteObject,\n} from \"./context\";\nimport {\n  LocationContext,\n  NavigationContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  AwaitContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  useAsyncValue,\n  useInRouterContext,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  _renderMatches,\n  useRoutesImpl,\n  useLocation,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","import * as React from \"react\";\nimport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  Blocker,\n  BlockerFunction,\n  Fetcher,\n  HydrationState,\n  JsonFunction,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  Navigation,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  PathPattern,\n  RedirectFunction,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  ShouldRevalidateFunction,\n  To,\n  InitialEntry,\n  LazyRouteFunction,\n  FutureConfig as RouterFutureConfig,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  createPath,\n  createRouter,\n  defer,\n  generatePath,\n  isRouteErrorResponse,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  resolvePath,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  AwaitProps,\n  MemoryRouterProps,\n  NavigateProps,\n  OutletProps,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  RoutesProps,\n  RouterProviderProps,\n  FutureConfig,\n} from \"./lib/components\";\nimport {\n  createRoutesFromChildren,\n  renderMatches,\n  Await,\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n} from \"./lib/components\";\nimport type {\n  DataRouteMatch,\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NavigateOptions,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./lib/context\";\nimport {\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./lib/context\";\nimport type { NavigateFunction } from \"./lib/hooks\";\nimport {\n  useBlocker,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigationType,\n  useNavigate,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useRouteId,\n  useLoaderData,\n  useMatches,\n  useNavigation,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutesImpl,\n} from \"./lib/hooks\";\n\n// Exported for backwards compatibility, but not being used internally anymore\ntype Hash = string;\ntype Pathname = string;\ntype Search = string;\n\n// Expose react-router public API\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  Blocker as unstable_Blocker,\n  BlockerFunction as unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  FutureConfig,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n};\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromChildren as createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  useBlocker as unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n};\n\nfunction mapRouteProperties(route: RouteObject) {\n  let updates: Partial<RouteObject> & { hasErrorBoundary: boolean } = {\n    // Note: this check also occurs in createRoutesFromChildren so update\n    // there if you change this -- please and thank you!\n    hasErrorBoundary: route.ErrorBoundary != null || route.errorElement != null,\n  };\n\n  if (route.Component) {\n    if (__DEV__) {\n      if (route.element) {\n        warning(\n          false,\n          \"You should not include both `Component` and `element` on your route - \" +\n            \"`Component` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      element: React.createElement(route.Component),\n      Component: undefined,\n    });\n  }\n\n  if (route.ErrorBoundary) {\n    if (__DEV__) {\n      if (route.errorElement) {\n        warning(\n          false,\n          \"You should not include both `ErrorBoundary` and `errorElement` on your route - \" +\n            \"`ErrorBoundary` will be used.\"\n        );\n      }\n    }\n    Object.assign(updates, {\n      errorElement: React.createElement(route.ErrorBoundary),\n      ErrorBoundary: undefined,\n    });\n  }\n\n  return updates;\n}\n\nexport function createMemoryRouter(\n  routes: RouteObject[],\n  opts?: {\n    basename?: string;\n    future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n    hydrationData?: HydrationState;\n    initialEntries?: InitialEntry[];\n    initialIndex?: number;\n  }\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createMemoryHistory({\n      initialEntries: opts?.initialEntries,\n      initialIndex: opts?.initialIndex,\n    }),\n    hydrationData: opts?.hydrationData,\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  NavigationContext as UNSAFE_NavigationContext,\n  LocationContext as UNSAFE_LocationContext,\n  RouteContext as UNSAFE_RouteContext,\n  DataRouterContext as UNSAFE_DataRouterContext,\n  DataRouterStateContext as UNSAFE_DataRouterStateContext,\n  mapRouteProperties as UNSAFE_mapRouteProperties,\n  useRouteId as UNSAFE_useRouteId,\n  useRoutesImpl as UNSAFE_useRoutesImpl,\n};\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  ErrorResponse,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  To,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponse(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}"],"names":["_arrayLikeToArray","arr","len","length","i","arr2","Array","_iterableToArray","iter","Symbol","iterator","from","_unsupportedIterableToArray","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","isArray","TypeError","_arrayWithHoles","_nonIterableRest","_slicedToArray","r","l","t","e","u","a","f","next","done","push","value","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","toPropertyKey","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","setPrototypeOf","_getPrototypeOf","getPrototypeOf","bind","__proto__","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_possibleConstructorReturn","self","ReferenceError","_createSuper","Derived","hasNativeReflectConstruct","result","Super","NewTarget","this","arguments","apply","Action","_construct","Parent","args","Class","Function","_wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","_createForOfIteratorHelper","allowArrayLike","it","F","s","_e","err","normalCompletion","didErr","step","_e2","ResultType","PopStateEventType","createMemoryHistory","options","entries","_options","_options$initialEntri","initialEntries","initialIndex","_options$v5Compat","v5Compat","map","entry","index","createMemoryLocation","state","clampIndex","action","Pop","listener","Math","min","max","getCurrentLocation","to","location","createLocation","pathname","warning","charAt","JSON","stringify","createHref","createPath","createURL","URL","encodeLocation","path","parsePath","search","hash","Push","nextLocation","splice","delta","replace","Replace","go","nextIndex","listen","createBrowserHistory","getUrlBasedHistory","window","globalHistory","_window$location","usr","createHashHistory","_parsePath","substr","_parsePath$pathname","_parsePath$search","_parsePath$hash","startsWith","base","document","querySelector","href","getAttribute","url","hashIndex","invariant","message","Error","cond","console","warn","getHistoryState","idx","current","_extends","random","_ref","_ref$pathname","_ref$search","_ref$hash","parsedPath","searchIndex","getLocation","validateLocation","_options2","_options2$window","defaultView","_options2$v5Compat","history","getIndex","handlePop","origin","replaceState","addEventListener","removeEventListener","historyState","pushState","error","DOMException","assign","immutableRouteKeys","Set","convertRoutesToDataRoutes","routes","mapRouteProperties","parentPath","manifest","route","treePath","concat","_toConsumableArray","id","join","children","isIndexRoute","indexRoute","pathOrLayoutRoute","matchRoutes","locationArg","basename","stripBasename","branches","flattenRoutes","sort","b","score","siblings","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","flattenRoute","relativePath","caseSensitive","joinPaths","computeScore","forEach","_route$path","includes","_step","_iterator","explodeOptionalSegments","exploded","segments","split","_segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","dynamicSegmentValue","indexRouteValue","emptySegmentValue","staticSegmentValue","splatPenalty","isSplat","initialScore","some","filter","reduce","segment","branch","matchedParams","matchedPathname","end","remainingPathname","match","matchPath","params","pathnameBase","normalizePathname","generatePath","originalPath","prefix","p","String","array","keyMatch","_keyMatch","optional","param","pattern","_compilePath","paramNames","regexpSource","_","paramName","matcher","RegExp","compilePath","_compilePath2","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","toLowerCase","startIndex","nextChar","resolvePath","fromPathname","_ref4","toPathname","_ref4$search","_ref4$hash","pop","resolvePathname","normalizeSearch","normalizeHash","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","isEmptyPath","routePathnameIndex","toSegments","shift","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","json","data","init","responseInit","status","headers","Headers","Response","AbortedDeferredError","_Error","_super","DeferredData","reject","_this","pendingKeysSet","subscribers","deferredKeys","abortPromise","Promise","controller","AbortController","onAbort","unlistenAbortSignal","signal","acc","_ref5","_defineProperty","trackPromise","_this2","add","promise","race","then","onSettle","catch","aborted","delete","undefinedError","emit","settledKey","subscriber","_this3","_this4","abort","v","k","_resolveData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this5","wrap","_context","prev","cancel","resolve","subscribe","sent","abrupt","stop","_x","size","_ref2","_ref6","_tracked","isTrackedPromise","_error","_data","unwrapTrackedPromise","defer","redirect","redirectDocument","response","ErrorResponse","statusText","internal","isRouteErrorResponse","validMutationMethodsArr","validMutationMethods","validRequestMethodsArr","validRequestMethods","redirectStatusCodes","redirectPreserveMethodStatusCodes","IDLE_NAVIGATION","formMethod","formAction","formEncType","formData","text","IDLE_FETCHER","IDLE_BLOCKER","proceed","reset","ABSOLUTE_URL_REGEX","defaultMapRouteProperties","hasErrorBoundary","createRouter","routerWindow","isBrowser","createElement","isServer","detectErrorBoundary","inFlightDataRoutes","dataRoutes","future","v7_normalizeFormMethod","v7_prependBasename","unlistenHistory","savedScrollPositions","getScrollRestorationKey","getScrollPosition","initialScrollRestored","hydrationData","initialMatches","initialErrors","getInternalRouterError","_getShortCircuitMatch","getShortCircuitMatches","router","pendingNavigationController","initialized","m","lazy","loader","historyAction","navigation","restoreScrollPosition","preventScrollReset","revalidation","loaderData","actionData","errors","fetchers","blockers","pendingAction","pendingPreventScrollReset","isUninterruptedRevalidation","isRevalidationRequired","cancelledDeferredRoutes","cancelledFetcherLoads","fetchControllers","incrementingLoadId","pendingNavigationLoadId","fetchReloadIds","fetchRedirectIds","fetchLoadMatches","activeDeferreds","blockerFunctions","ignoreNextHistoryUpdate","updateState","newState","completeNavigation","_location$state","_location$state2","isActionReload","isMutationMethod","_isRedirect","keys","mergeLoaderData","getSavedScrollPosition","navigate","_x2","_x3","_navigate","_callee2","opts","normalizedPath","_normalizeNavigateOpt2","submission","currentLocation","userReplace","blockerKey","_context2","normalizeTo","fromRouteId","relative","normalizeNavigateOptions","shouldBlockNavigation","updateBlocker","startNavigation","pendingError","_x4","_x5","_x6","_startNavigation","_callee3","routesToUse","loadingNavigation","_getShortCircuitMatch2","notFoundMatches","_route","request","pendingActionData","actionOutput","_yield$handleLoaders","shortCircuited","_context3","startUninterruptedRevalidation","saveScrollPosition","overrideNavigation","cancelActiveDeferreds","isHashChangeOnly","createClientSideRequest","findNearestBoundary","handleAction","pendingActionError","getLoadingNavigation","Request","handleLoaders","fetcherSubmission","_x7","_x8","_x9","_x10","_x11","_handleAction","_callee4","actionMatch","boundaryMatch","_context4","interruptActiveLoads","getSubmittingNavigation","getTargetMatch","type","method","routeId","callLoaderOrAction","isRedirectResult","startRedirectNavigation","isErrorResult","isDeferredResult","_x12","_x13","_x14","_x15","_x16","_x17","_x18","_x19","_x20","_handleLoaders","_callee5","activeSubmission","_getMatchesToLoad","_getMatchesToLoad2","matchesToLoad","revalidatingFetchers","_updatedFetchers","abortPendingFetchRevalidations","_yield$callLoadersAnd","results","loaderResults","fetcherResults","fetcherKey","_processLoaderData","updatedFetchers","didAbortFetchLoads","shouldUpdateFetchers","_context5","getSubmissionFromNavigation","getMatchesToLoad","markFetchRedirectsDone","rf","fetcher","revalidatingFetcher","getLoadingFetcher","abortFetcher","callLoadersAndMaybeResolveData","findRedirect","processLoaderData","deferredData","abortStaleFetchLoads","getFetcher","_handleFetcherAction","_callee6","requestMatches","_error2","existingFetcher","abortController","fetchRequest","originatingLoadId","actionResult","doneFetcher","loadingFetcher","revalidationRequest","loadId","loadFetcher","_getMatchesToLoad3","_getMatchesToLoad4","_yield$callLoadersAnd2","_processLoaderData2","_doneFetcher","_context6","setFetcherError","getSubmittingFetcher","getDoneFetcher","isFetchActionRedirect","staleKey","_handleFetcherLoader","_callee7","_doneFetcher2","_context7","resolveDeferredData","t0","_x33","_x34","_x35","_startRedirectNavigation","_callee8","_temp","_ref7","redirectLocation","isDocumentReload","redirectHistoryAction","_context8","revalidate","_isFetchActionRedirect","reloadDocument","_x36","_x37","_x38","_x39","_x40","_callLoadersAndMaybeResolveData","_callee9","currentMatches","fetchersToLoad","_context9","all","resolveDeferredResults","_cancelledDeferredRou","deleteFetcher","markFetchersDone","_step2","_iterator2","_step3","doneKeys","_iterator3","landedId","_step4","yeetedKeys","_iterator4","_step4$value","deleteBlocker","newBlocker","blocker","_entries","blockerFunction","predicate","cancelledRouteIds","dfd","getScrollKey","handle","createUseMatchesMatch","y","initialize","enableScrollRestoration","positions","getPosition","getKey","fetch","_normalizeNavigateOpt","_x21","_x22","_x23","_x24","_x25","_x26","handleFetcherAction","_x27","_x28","_x29","_x30","_x31","_x32","handleFetcherLoader","dispose","clear","getBlocker","_internalFetchControllers","_internalActiveDeferreds","_internalSetRoutes","newRoutes","prependBasename","contextualMatches","activeRouteMatch","_step5","_iterator5","hasNakedIndexQuery","normalizeFormMethod","isFetcher","body","isSubmissionNavigation","isValidMethod","searchParams","getInvalidBodyError","rawFormMethod","toUpperCase","stripHashFromPath","FormData","URLSearchParams","_ref3","_ref12","parse","convertFormDataToSearchParams","convertSearchParamsToFormData","append","getLoaderMatchesUntilBoundary","boundaryId","boundaryMatches","findIndex","values","currentUrl","nextUrl","navigationMatches","currentLoaderData","currentMatch","isNew","isMissingData","isNewLoader","currentRouteMatch","nextRouteMatch","shouldRevalidateLoader","currentParams","nextParams","defaultShouldRevalidate","isNewRouteInstance","fetcherMatches","fetcherMatch","currentPath","loaderMatch","arg","shouldRevalidate","routeChoice","loadLazyRouteModule","_x60","_x61","_x62","_loadLazyRouteModule","_callee15","lazyRoute","routeToUpdate","routeUpdates","lazyRouteProperty","staticRouteValue","isPropertyStaticallyDefined","_context16","_x63","_x64","_x65","_x66","_x67","_x68","_x69","_x70","_callLoaderOrAction","_callee16","resultType","onReject","runHandler","handler","_url","_url2","isSameBasename","contentType","_result$init","_result$init2","_context17","context","requestContext","finish","isResponse","isStaticRequest","protocol","isRouteRequest","statusCode","isDeferredData","deferred","_step6","_iterator6","_step6$value","_step7","_iterator7","_step7$value","processRouteLoaderData","foundError","loaderHeaders","_processRouteLoaderDa","_revalidatingFetchers","newLoaderData","_step8","mergedLoaderData","_iterator8","hasOwnProperty","reverse","find","_temp4","_ref13","errorMessage","resolveData","_x71","_x72","_x73","_x74","_x75","_x76","_resolveDeferredResults","_callee17","signals","_loop","_context19","isRevalidatingLoader","_context18","delegateYield","_x77","_x78","_x79","_resolveDeferredData","_callee18","unwrap","_context20","unwrappedData","getAll","pathMatches","DataRouterContext","React","DataRouterStateContext","AwaitContext","NavigationContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useHref","useInRouterContext","UNSAFE_invariant","_React$useContext","navigator","_useResolvedPath","useResolvedPath","joinedPathname","useLocation","useNavigationType","navigationType","useMatch","useIsomorphicLayoutEffect","cb","static","useNavigate","useDataRouterContext","DataRouterHook","UseNavigateStable","useCurrentRouteId","DataRouterStateHook","activeRef","useNavigateStable","dataRouterContext","_React$useContext3","routePathnamesJson","UNSAFE_getPathContributingMatches","useNavigateUnstable","OutletContext","useOutletContext","useOutlet","Provider","useParams","routeMatch","_temp2","useRoutes","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","_parsedLocationArg$pa","parsedLocationArg","renderedMatches","_renderMatches","DefaultErrorComponent","useRouteError","stack","lightgrey","preStyles","padding","backgroundColor","style","fontStyle","defaultErrorElement","RenderErrorBoundary","_React$Component","errorInfo","routeContext","component","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","_dataRouterState2","_dataRouterState","errorIndex","reduceRight","getChildren","Component","element","hookName","ctx","useDataRouterState","useRouteContext","thisRoute","useRouteId","UseRouteId","useNavigation","UseNavigation","useRevalidator","UseRevalidator","useMatches","_useDataRouterState","UseMatches","useLoaderData","UseLoaderData","useRouteLoaderData","UseRouteLoaderData","useActionData","UseActionData","_state$errors","UseRouteError","useAsyncValue","useAsyncError","blockerId","useBlocker","shouldBlock","_useDataRouterContext","UseBlocker","_React$useState2","setBlockerKey","startTransitionImpl","RouterProvider","fallbackElement","_React$useState4","setStateImpl","v7_startTransition","setState","Router","DataRoutes","MemoryRouter","historyRef","_React$useState6","Navigate","jsonPath","Outlet","Route","_props","_ref5$basename","basenameProp","_ref5$children","locationProp","_ref5$navigationType","_ref5$static","staticProp","navigationContext","_locationProp","_locationProp$pathnam","_locationProp$search","_locationProp$hash","_locationProp$state","_locationProp$key","locationContext","trailingPathname","Routes","createRoutesFromChildren","Await","AwaitErrorBoundary","ResolveAwait","AwaitRenderStatus","neverSettledPromise","_React$Component2","_super2","_this$props","pending","renderError","success","_ref8","toRender","renderMatches","updates","createMemoryRouter","defaultMethod","defaultEncType","isHtmlElement","object","tagName","createSearchParams","_formDataSupportsSubmitter","supportedFormEncTypes","getFormEncType","encType","getFormSubmissionInfo","attr","isButtonElement","isInputElement","form","isFormDataSubmitterSupported","createBrowserRouter","parseHydrationData","UNSAFE_mapRouteProperties","createHashRouter","_window","__staticRouterHydrationData","deserializeErrors","serialized","_i","_entries$_i","val","__type","__subType","ErrorConstructor","BrowserRouter","HashRouter","HistoryRouter","Link","ref","absoluteHref","onClick","_objectWithoutPropertiesLoose","_excluded","UNSAFE_NavigationContext","isExternal","targetUrl","internalOnClick","useLinkClickHandler","event","defaultPrevented","NavLink","_ref5$ariaCurrent","ariaCurrentProp","_ref5$caseSensitive","_ref5$className","className","classNameProp","_ref5$end","styleProp","_excluded2","routerState","UNSAFE_DataRouterStateContext","nextLocationPathname","isActive","isPending","ariaCurrent","Form","submit","useSubmit","FormImpl","forwardedRef","_ref6$method","onSubmit","_excluded3","useFormAction","preventDefault","submitter","nativeEvent","submitMethod","currentTarget","ScrollRestoration","useScrollRestoration","storageKey","UNSAFE_DataRouterContext","replaceProp","button","metaKey","altKey","ctrlKey","shiftKey","isModifiedEvent","shouldProcessLinkClick","useSearchParams","defaultInit","defaultSearchParamsRef","hasSetSearchParamsRef","locationSearch","defaultSearchParams","setSearchParams","nextInit","navigateOptions","newSearchParams","validateClientSideSubmission","UseSubmit","currentRouteId","UNSAFE_useRouteId","_getFormSubmissionInf","useSubmitFetcher","fetcherRouteId","UseSubmitFetcher","_getFormSubmissionInf2","UNSAFE_RouteContext","fetcherId","useFetcher","_route$matches","UseFetcher","_React$useState9","createFetcherForm","load","fetcherWithComponents","useFetchers","UseFetchers","SCROLL_RESTORATION_STORAGE_KEY","_temp3","_ref14","UseScrollRestoration","scrollRestoration","callback","capture","usePageHide","scrollY","sessionStorage","setItem","sessionPositions","getItem","getKeyWithoutBasename","disableScrollRestoration","el","getElementById","scrollIntoView","scrollTo","useBeforeUnload","usePrompt","when","unstable_useBlocker","confirm","setTimeout","_setPrototypeOf"],"sourceRoot":""}